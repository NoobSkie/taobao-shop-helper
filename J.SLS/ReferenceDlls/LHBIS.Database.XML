<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LHBIS.Database</name>
    </assembly>
    <members>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.GetByKey``1(System.Object)">
            <summary>
            通过主键和指定类型从数据库获取对象
            </summary>
            <typeparam name="T">指定类型</typeparam>
            <param name="keyValue">主键值（通常为Guid），不能为空</param>
            <returns>从数据库中得到的对象,如果数据库中没找到对象会返回一个空对象</returns>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
            参数错误异常
            当传入的主键值为null或者为空字符串(RErrorCode.ArgmentesError -0x00000014)
            </exception>
            <exception cref="!:DatabaseErrorCode.ResultNotUnique - 0x00010110">
            查询结果错误异常,通过主键查找到得对象不唯一时会抛出该异常
            </exception>
            <exception cref="!:DatabaseErrorCode.ExecDbCommandError - 0x00010002">
             获取对象数据失败时会引发该异常，引发该异常的异常都包含在InnerException中
            </exception>
            前置条件
            1.keyValue不能为空
            2.传入的对象T只能有一个主键
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.GetByKeys``1(``0)">
            <summary>
            通过对象已有的主键值（可以多个主键）和指定类型从数据库获取对象
            </summary>
            <typeparam name="T">指定类型</typeparam>
            <param name="entity">外部构造的对象，不能为空</param>
            <returns>从数据库中得到的对象,如果数据库中没找到对象会返回一个空对象</returns>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
            参数错误异常
            当传入的主键值为null或者为空字符串(RErrorCode.ArgmentesError -0x00000014)
            </exception>
            <exception cref="!:DatabaseErrorCode.ResultNotUnique - 0x00010110">
            查询结果错误异常,通过主键查找到得对象不唯一时会抛出该异常
            </exception>
            <exception cref="!:DatabaseErrorCode.ExecDbCommandError - 0x00010002">
             获取对象数据失败时会引发该异常，引发该异常的异常都包含在InnerException中
            </exception>
            前置条件
            传入的entity对象不能为空
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.Add(System.Object)">
            <summary>
            新增一个实体对象到数据库中
            </summary>
            <param name="entity">需要保存的实体对象</param>
            <exception cref="!:DatabaseErrorCode.AddEntityError - 0x00010003">
            添加实体对象失败,以下几种情况会引发该异常，并会包含在InnerException中
            连接数据库服务失败时（DatabaseErrorCode.ConnectDbServerError - 0x00010001）
            执行SQL语句或命令失败时(DatabaseErrorCode.ExecDbCommandError - 0x00010002)
            </exception>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
            参数错误异常,以下几种情况会引发该异常，并会包含在InnerException中
            传入的参数为null或空串时（RErrorCode.NullReference - 0x00000001）
            </exception>
            前置条件:
            1.参数entity不允许为空
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.Modify(System.Object)">
            <summary>
            修改一个数据库中已有的对象，该对象的主键必须有值
            该对象为空或主键为空或修改失败会抛出异常
            </summary>
            <param name="entity">需要修改的实体对象</param>
            <exception cref="!:DatabaseErrorCode.UpdateEntityError - 0x00010004">
            修改实体对象失败,以下几种情况会引发该异常，并会包含在InnerException中
            连接数据库服务失败时（DatabaseErrorCode.ConnectDbServerError - 0x00010001）
            执行SQL语句或命令失败时(DatabaseErrorCode.ExecDbCommandError - 0x00010002)
            </exception>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
            参数错误异常,以下几种情况会引发该异常，并会包含在InnerException中
            传入的参数为null或空串时（RErrorCode.NullReference - 0x00000001)
            </exception>
            前置条件
            参数entity不允许为空
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.Delete(System.Object)">
            <summary>
            删除一个数据库中已有的对象，该对象的主键必须有值
            该对象为空或主键为空或删除失败会抛出异常
            </summary>
            <param name="entity">需要删除的实体</param>
            <exception cref="!:DatabaseErrorCode.DeleteEntityError - 0x00010005">
            删除实体对象失败,以下几种情况会引发该异常，并会包含在InnerException中
            连接数据库服务失败时（ConnectDbServerError - 0x00010001）
            执行SQL语句或命令失败时(DatabaseErrorCode.ExecDbCommandError - 0x00010002)
            </exception>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
            参数错误异常,以下几种情况会引发该异常，并会包含在InnerException中
            传入的参数为null或空串时（RErrorCode.NullReference - 0x00000001）
            </exception>
            前置条件
            参数entity不允许为空
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.GetAll``1(LHBIS.Database.ORM.SortInfo[])">
            <summary>
            获取数据表中的所有数据集合，并按指定排序方式进行排序
            </summary>
            <typeparam name="T">指定的类型</typeparam>
            <param name="orderBy">排序方式</param>
            <returns>数据表中的所有数据集合</returns>
            <exception cref="!:DatabaseErrorCode.ExecDbCommandError - 0x00010002">
             获取所有数据集合失败时会引发该异常，引发该异常的异常都包含在InnerException中
            </exception>
            <exception cref="F:LHBIS.Common.RErrorCode.None">
              未处理异常
            </exception>
            前置条件
            传入的orderBy对象可以为空，为空的时候则不进行排序
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.GetList``1(``0,System.String[],LHBIS.Database.ORM.SortInfo[])">
            <summary>
            通过指定类型,过滤条件和排序方式从数据库中获取该指定类型的数据集合
            </summary>
            <typeparam name="T">指定类型</typeparam>
            <param name="entity">实体对象</param>
            <param name="filterProterties">字段名称，可包含多个</param>
            <param name="orderBy">排序方式</param>
            <returns>指定类型的数据集合</returns>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
            参数错误异常，以下情况会引发该异常,并会包含在InnerException中
            传入的entity对象为null，出现空引用异常（RErrorCode.NullReference - 0x00000001）
            传入的filterProterties为null或者为空字符串时，出现sql语句错误异常(DatabaseErrorCode.CommandTextIsError - 0x00010105)
            </exception>
            <exception cref="!:DatabaseErrorCode.ExecDbCommandError - 0x00010002">
             获取指定类型的数据集合失败时会引发该异常，引发该异常的异常都包含在InnerException中
            </exception>
            <exception cref="F:LHBIS.Common.RErrorCode.None">
              未处理异常
            </exception>
            前置条件
            传入的参数entity，filterProterties不允许为空
            orderBy可以为空，如果为空则不进行排序
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.GetList``1(LHBIS.Database.ORM.Criteria,LHBIS.Database.ORM.SortInfo[])">
            <summary>
            根据表达式，查询对象集合
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="criteria">表达式</param>
            <param name="orderBy">排序</param>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
            参数错误异常，以下情况会引发该异常,并会包含在InnerException中
            传入的entity对象为null，出现空引用异常（RErrorCode.NullReference - 0x00000001）
            传入的filterProterties为null或者为空字符串时，出现sql语句错误异常(DatabaseErrorCode.CommandTextIsError - 0x00010105)
            </exception>
            <exception cref="!:DatabaseErrorCode.ExecDbCommandError - 0x00010002">
             获取指定类型的数据集合失败时会引发该异常，引发该异常的异常都包含在InnerException中
            </exception>
            <exception cref="F:LHBIS.Common.RErrorCode.None">
              未处理异常
            </exception>
            <returns>指定类型的数据集合</returns>
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.GetCount(System.Object,System.String[])">
            <summary>
            通过指定类型,过滤条件和排序方式从数据库中获取该指定类型的数据条数
            </summary>
            <typeparam name="T">指定类型</typeparam>
            <param name="entity">实体对象</param>
            <param name="filterProterties">过滤条件</param>
            <param name="orderBy">排序方式</param>
            <returns>指定类型的数据条数</returns>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
            参数错误异常，以下情况会引发该异常,并会包含在InnerException中
            传入的entity对象为null或者为空字符串，出现空引用异常（RErrorCode.NullReference - 0x00000001）
            传入的filterProterties为null或者为空字符串时，出现sql语句错误异常(DatabaseErrorCode.CommandTextIsError - 0x00010105)
            </exception>
            <exception cref="!:DatabaseErrorCode.ExecDbCommandError - 0x00010002">
             获取指定类型的数据集合失败时会引发该异常，引发该异常的异常都包含在InnerException中
            </exception>
            <exception cref="F:LHBIS.Common.RErrorCode.None">
              未处理异常
            </exception>
            前置条件
            传入的参数entity不允许为空
            filterProterties,orderBy可以为空，如果为空则没有where条件查询和不进行排序
        </member>
        <member name="M:LHBIS.Database.ORM.ObjectPersistence.GetAllCount``1">
            <summary>
            获取数据库中所有的数据总数
            </summary>
            <typeparam name="T">指定类型</typeparam>
            <returns>数据总数</returns>
            <exception cref="!:DatabaseErrorCode.ExecDbCommandError - 0x00010002">
             获取指定类型的数据总数失败时会引发该异常，引发该异常的异常都包含在InnerException中
            </exception>
            <exception cref="F:LHBIS.Common.RErrorCode.None">
              未处理异常
            </exception>
        </member>
        <member name="T:LHBIS.Database.ORM.SortInfo">
            <summary>
            排序信息
            </summary>
        </member>
        <member name="M:LHBIS.Database.ORM.SortInfo.#ctor(System.String)">
            <summary>
            通过传入的字段名确定要排序的列,初始化排序对象实例
            </summary>
            <param name="propertyName">指定的要排序的属性名称，不允许为null或空串</param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入的propertyName为null或空串时。
            </exception>
        </member>
        <member name="M:LHBIS.Database.ORM.SortInfo.#ctor(System.String,LHBIS.Database.ORM.SortDirection)">
            <summary>
            通过传入的字段名称和排序方式确定要排序的列和排序的方式,初始化排序对象实例
            </summary>
            <param name="propertyName">要排序的属性名称，不允许为null或空串</param>
            <param name="direction">排序方向</param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入的propertyName为null或空串时。
            </exception>
        </member>
        <member name="P:LHBIS.Database.ORM.SortInfo.PropertyName">
            <summary>
            要排序的属性名称
            </summary>
        </member>
        <member name="P:LHBIS.Database.ORM.SortInfo.Direction">
            <summary>
            排序方向
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.SortDirection">
            <summary>
            排序方向
            </summary>
        </member>
        <member name="F:LHBIS.Database.ORM.SortDirection.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:LHBIS.Database.ORM.SortDirection.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.ModifyCommandCreator">
            <summary>
            得到修改数据库对象的DbCommand
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.DbCommandCreator">
            <summary>
            DbCommand生成器的抽象类，所有生成DbCommand的类。
            此类提供对生成DbCommand的基础函数。
            </summary>
            <remarks>Craeted by HQ, 2010/3/8</remarks>
        </member>
        <member name="M:LHBIS.Database.ORM.ModifyCommandCreator.#ctor(LHBIS.Database.DBAccess.IDBAccess)">
            <summary>
            初始化ModifyCommandCreator，dbAccess不能为空
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            传入的dbAccess为空，引发此异常
            </exception>
            <param name="dbAccess">数据库访问接口</param>
        </member>
        <member name="M:LHBIS.Database.ORM.ModifyCommandCreator.GetDbCommand">
            <summary>
            得到修改数据库中某一对象的DbCommand，modifyCommandCreator的属性Entity不能为空
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.CommandTextIsEmpty - 0x00010102)">
            属性Entity为null时，引发此异常
            </exception>
            <returns>修改数据库中某一对象的DbCommand，DbCommand的参数为所传入的Entity的属性</returns>
        </member>
        <member name="P:LHBIS.Database.ORM.ModifyCommandCreator.Entity">
            <summary>
            需要修改的实体对象，不能为空
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.DBAccessHelper.GetFormatErrorMsg(System.String,System.Object[])">
            <summary>
            组合字符串格式化的信息，并返回，不引发异常
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.EntityMappingFieldAttribute">
            <summary>
            实体类中需持久化字段的标注。
            用于配置该字段映射表字段的信息，其中映射的字段名不能为null或空串。
            只能将此特性定义到类的属性上。
            </summary>
        </member>
        <member name="M:LHBIS.Database.ORM.EntityMappingFieldAttribute.#ctor(System.String)">
            <summary>
            初始化对象实例。设置字段映射属性,字段名不能为null或空串
            默认该字段不为主键，并且需要更新
            </summary>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下情况会引发该异常：
            1.传入的fieldName为null或空串时
            </exception>
            <param name="fieldName">映射到数据库中的字段名</param>
        </member>
        <member name="P:LHBIS.Database.ORM.EntityMappingFieldAttribute.FieldName">
            <summary>
            映射到数据库的字段名，不能为null或空串
            </summary>
        </member>
        <member name="P:LHBIS.Database.ORM.EntityMappingFieldAttribute.NeedUpdate">
            <summary>
            是否需要更新到数据库中，默认为true
            </summary>
        </member>
        <member name="P:LHBIS.Database.ORM.EntityMappingFieldAttribute.IsKey">
            <summary>
            是否为数据库中的主键，默认为false
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.SelectCommandCreator">
            <summary>
            得到查找数据库对象的DbCommand
            </summary>
        </member>
        <member name="M:LHBIS.Database.ORM.SelectCommandCreator.#ctor(LHBIS.Database.DBAccess.IDBAccess)">
            <summary>
            初始化ModifyCommandCreator，dbAccess不能为空
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            传入的dbAccess为空，引发此异常
            </exception>
            <param name="dbAccess">数据库访问接口</param>
        </member>
        <member name="F:LHBIS.Database.ORM.SelectCommandCreator._Entity">
            <summary>
            需要处理的对象
            </summary>
        </member>
        <member name="M:LHBIS.Database.ORM.SelectCommandCreator.GetDbCommand">
            <summary>
            通过设定不同的属性和选择不同的生成DbCommand的方式得到不同的DbCommand
            1、设定主键KeyValue和对象类型ObjectType的值，设置SelectType为GetOneByKeyValue，则会生成一个根据该类型和主键查找到唯一对象的DbCommand
            2、通过设定实体对象Entity和SelectType为GetOneByEntityKey，则会根据Entity的主键（可能是多个主键）查找到唯一对象的DbCommand
            3、通过设定对象类型ObjectType和排序方式OrderBy的值，设置SelectType为GetAll，则会按照指定的排序方式去查找到指定类型的所有信息
            4、通过设定实体对象Entity、过滤属性FilterProterties、排序方式OrderBy和SelectType为GetList，则会根据指定的实体对象的需要过滤的值以及排序方式生成DbCommand
            上述参数除了排序方式可以为空，其余都不能为空
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.CommandTextIsEmpty - 0x00010102)">
            当指定的SelectType对应所需的类型为空时，则会引发此异常
            </exception>
            <returns>根据特定条件返回指定的DbCommand</returns>
        </member>
        <member name="M:LHBIS.Database.ORM.SelectCommandCreator.GetCountDbCommand(System.Object,System.String[])">
            <summary>
            构建select count()语句
            </summary>
            <param name="entityType">指定实体对象</param>
            <returns></returns>
        </member>
        <member name="M:LHBIS.Database.ORM.SelectCommandCreator.GetSelectStatement(LHBIS.Database.ORM.TypeSchema,System.Collections.Generic.List{System.Reflection.PropertyInfo}@,System.String[])">
            <summary>
            构建带where条件查询的sql语句
            </summary>
            <param name="fieldPropertyList"></param>
            <param name="tableName">表名</param>
            <param name="filterProterties">要查询的字段</param>
            <returns>sql语句</returns>
        </member>
        <member name="M:LHBIS.Database.ORM.SelectCommandCreator.GetSelectStatement(LHBIS.Database.ORM.TypeSchema)">
            <summary>
            构建无where条件查询的sql语句
            </summary>
            <param name="fieldPropertyList"></param>
            <param name="tableName">表名</param>
            <returns>sql语句</returns>
        </member>
        <member name="M:LHBIS.Database.ORM.SelectCommandCreator.GetCountSelectStatement(LHBIS.Database.ORM.TypeSchema,System.Collections.Generic.List{System.Reflection.PropertyInfo}@,System.String[])">
            <summary>
            给select count()语句构建带where条件查询的sql语句
            </summary>
            <param name="fieldPropertyList"></param>
            <param name="tableName"></param>
            <param name="filterProterties"></param>
            <returns></returns>
        </member>
        <member name="P:LHBIS.Database.ORM.SelectCommandCreator.ObjectType">
            <summary>
            需要处理的类型
            通常使用typeof(T) 或者 t.GetType()得到该类型
            </summary>
        </member>
        <member name="P:LHBIS.Database.ORM.SelectCommandCreator.KeyValue">
            <summary>
            对象主键的值
            </summary>
        </member>
        <member name="P:LHBIS.Database.ORM.SelectCommandCreator.FilterProterties">
            <summary>
            在使用条件过滤时设置
            需要针对特定的属性进行过滤
            </summary>
        </member>
        <member name="P:LHBIS.Database.ORM.SelectCommandCreator.OrderBy">
            <summary>
            需要针对特定的属性进行排序
            </summary>
        </member>
        <member name="P:LHBIS.Database.ORM.SelectCommandCreator.SelectType">
            <summary>
            查找选择类型，使用时不能为空，根据该值的不同调用不同方法生成特定的DbCommand
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.SelectType">
            <summary>
            选择类型
            </summary>
        </member>
        <member name="T:LHBIS.Database.DBAccess.LHDBMSSql">
            <summary>
            访问MS SQL的数据库访问对象
            </summary>
        </member>
        <member name="T:LHBIS.Database.DBAccess.LHDBAccess">
            <summary>
            数据库访问的抽象类。
            此类提供对数据库读写的基础函数。
            </summary>
            <remarks>Craeted by HQ, 2010/3/8</remarks>
        </member>
        <member name="T:LHBIS.Database.DBAccess.IDBAccess">
            <summary>
            数据库访问接口
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.GetDbObjectName(System.String)">
            <summary>
            获取对应数据库的对象名称。如对应MS Sql server，输入TableName，则返回[TableName]
            </summary>
            <param name="objectName">对象名称。可以为表名，字段名</param>
            <returns>添加数据库标识以后的数据库安全名称</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.CreateDbCommand">
            <summary>
            创建一个DbCommand对象实例，不引发异常
            </summary>
            <returns>DbCommand对象实例</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.CreateDbParameter">
            <summary>
            创建一个DbParameter对象实例，不引发异常
            </summary>
            <returns>DbParameter对象实例</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.ExecCommand(System.Data.Common.DbCommand)">
            <summary>
            执行一个数据库命令，并返回受影响的行数
            </summary>
            <param name="cmd">需要被执行的数据库命令对象，不允许为null</param>
            <returns>返回受影响的行数</returns>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入的数据库命令cmd为null时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.PrimaryKeyConflict - 0x00010106)">
            主键冲突时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.IdexConflict - 0x00010107)">
            索引冲突时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.ExecSQL(System.String,System.Object[])">
            <summary>
            执行一个不返回结果集的SQL语句，并返回受影响的行数。
            </summary>
            <param name="sqlstr">
            要执行的SQL语句。不允许为null或空串。
            如果是一个带参数的SQL语句，那么此SQL需要是有有效格式化标识的字符串。
            例如：SELECT * FROM [Table] WHERE [Name]={0}
            </param>
            <param name="values">
            SQL语句中参数的值，对应到SQL语句中的参数序号。
            如果提供的SQL不需要参数，则不需要传入此参数。
            </param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入SQL语句为null或为空串时；
            2.传入的参数列表与SQL语句的参数不匹配时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.PrimaryKeyConflict - 0x00010106)">
            主键冲突时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.IdexConflict - 0x00010107)">
            索引冲突时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.GetDataTableBySQL(System.String,System.Object[])">
            <summary>
            执行SQL语句，并返回查询到的DataTable结果集。
            </summary>
            <param name="sqlstr">
            要执行的SQL语句。不允许为null或空串。
            如果是一个带参数的SQL语句，那么此SQL需要是有有效格式化标识的字符串。
            例如：SELECT * FROM [Table] WHERE [Name]={0}
            </param>
            <param name="values">
            SQL语句中参数的值，对应到SQL语句中的参数序号。
            如果提供的SQL不需要参数，则不需要传入此参数。
            </param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入SQL语句为null或为空串时；
            2.传入的参数列表与SQL语句的参数不匹配时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
            <returns>返回查询到的DataTable结果集。如果没有查到任何数据，则返回没有数据的DataTable对象。</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.GetDataTableByCommand(System.Data.Common.DbCommand)">
            <summary>
            执行DbCommand数据库命令，并返回查询到的DataTable结果集。
            </summary>
            <param name="cmd">
            要执行的DbCommand数据库命令。不允许为nul。
            </param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入的数据库命令cmd为null时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
            <returns>返回查询到的DataTable结果集。如果没有查到任何数据，则返回没有数据的DataTable对象。</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.SaveDataTable(System.Data.DataTable)">
            <summary>
            将一个DataTable中的数据保存到数据库中
            </summary>
            <param name="datatb">
            要更新到数据库的DataTable内存表。
            此表必须包含一个表名称。
            如果传入表为null或没有任何改动，则不做任何操作。
            </param>
            <exception cref="!:RException(ArgmentesError - 0x00000014)">
            传入表没有表名称，引发此异常
            </exception>
            <exception cref="!:RException(ConnectDbServerError - 0x00010001)">
            连接数据库失败
            </exception>
            <exception cref="!:RException(ExecDbCommandError - 0x00010002)">
            执行SQL语句或命令失败
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.SaveDataRow(System.String,System.Data.DataRow)">
            <summary>
            将一个内存中的数据行保存到数据库中
            </summary>
            <param name="tablename">表名，不允许为null或空字符串</param>
            <param name="row">
            包含要更新到数据库中的数据的数据据行。
            如果为null，或状态为未改变(Unchanged)或分离(Detached)状态，则不做任何操作。
            </param>
            <exception cref="!:RException(ArgmentesError - 0x00000014)">
            传入表名为null或空字符串，引发此异常
            </exception>
            <exception cref="!:RException(ConnectDbServerError - 0x00010001)">
            连接数据库失败
            </exception>
            <exception cref="!:RException(ExecDbCommandError - 0x00010002)">
            执行SQL语句或命令失败
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.GetRC1BySQL(System.String,System.Object[])">
            <summary>
            执行一个SQL语句，并返回其结果集中第一行第一列的值
            </summary>
            <param name="sqlstr">SQL语句，不允许为null或空字符串</param>
            <param name="values">SQL语句中参数的值，对应到SQL语句中的每一个参数</param>
            <exception cref="!:RException(ArgmentesError - 0x00000014)">
            传入SQL语句为null或为空字符串时，传入的参数值与SQL语句不匹配时，引发此异常
            </exception>
            <exception cref="!:RException(ConnectDbServerError - 0x00010001)">
            连接数据库失败
            </exception>
            <exception cref="!:RException(ExecDbCommandError - 0x00010002)">
            执行SQL语句或命令失败
            </exception>
            <returns>其结果集中第一行第一列的值。如果返回的结果集没有数据，则返回null。</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.IDBAccess.GetRC1ByCommand(System.Data.Common.DbCommand)">
            <summary>
            执行一个SQL语句，并返回其结果集中第一行第一列的值
            </summary>
            <param name="sqlstr">SQL语句，不允许为null或空字符串</param>
            <param name="values">SQL语句中参数的值，对应到SQL语句中的每一个参数</param>
            <exception cref="!:RException(ArgmentesError - 0x00000014)">
            传入SQL语句为null或为空字符串时，传入的参数值与SQL语句不匹配时，引发此异常
            </exception>
            <exception cref="!:RException(ConnectDbServerError - 0x00010001)">
            连接数据库失败
            </exception>
            <exception cref="!:RException(ExecDbCommandError - 0x00010002)">
            执行SQL语句或命令失败
            </exception>
            <returns>其结果集中第一行第一列的值。如果返回的结果集没有数据，则返回null。</returns>
        </member>
        <member name="P:LHBIS.Database.DBAccess.IDBAccess.ConnectionTimeout">
            <summary>
            连接超时间时间，以秒为单位，默认为60。
            如果设置的时间为负数，则自动重置为默认值。
            </summary>
        </member>
        <member name="P:LHBIS.Database.DBAccess.IDBAccess.CommandTimeout">
            <summary>
            命令执行超时时间。以秒为单位，默认为60。
            如果设置的时间为负数，则自动重置为默认值。
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.#ctor(System.String)">
            <summary>
            根据数据库连接字符串初始化对象
            </summary>
            <param name="dbtype">数据库类型</param>
            <param name="constr">提供数据库连接字符串，不能为null或空串</param>
            <exception cref="!:RException(DatabaseErrorCode.ConnectionStringIsEmpty - 0x00010101)">
            传入数据库连接字符串为null或为空串时，引发此异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.GetParamPlaceHolder(System.Int32)">
            <summary>
            返回一个参数占位符
            </summary>
            <param name="paramindex">参数位置</param>
            <returns>参数占位符</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.CreateDbCommand">
            <summary>
            创建一个DbCommand对象实例，不引发异常
            </summary>
            <returns>DbCommand对象实例</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.CreateDbParameter">
            <summary>
            创建一个DbParameter对象实例，不引发异常
            </summary>
            <returns>DbParameter对象实例</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.GetDbObjectName(System.String)">
            <summary>
            获取对应数据库的对象名称。如对应MS Sql server，输入TableName，则返回[TableName]
            </summary>
            <param name="objectName">对象名称。可以为表名，字段名</param>
            <returns>添加数据库标识以后的数据库安全名称</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.DoTransaction(System.Action)">
            <summary>
            需要在一个事务中执行的方法，action为一个空参数的委托
            只需要传入对应委托，该方法便可以在事务中执行，会抛出需要执行的所有函数的异常
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.ExecSQL(System.String,System.Object[])">
            <summary>
            执行一个不返回结果集的SQL语句，并返回受影响的行数。
            </summary>
            <param name="sqlstr">
            要执行的SQL语句。不允许为null或空串。
            如果是一个带参数的SQL语句，那么此SQL需要是有有效格式化标识的字符串。
            例如：SELECT * FROM [Table] WHERE [Name]={0}
            </param>
            <param name="values">
            SQL语句中参数的值，对应到SQL语句中的参数序号。
            如果提供的SQL不需要参数，则不需要传入此参数。
            </param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入SQL语句为null或为空串时；
            2.传入的参数列表与SQL语句的参数不匹配时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.PrimaryKeyConflict - 0x00010106)">
            主键冲突时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.IdexConflict - 0x00010107)">
            索引冲突时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.ExecCommand(System.Data.Common.DbCommand)">
            <summary>
            执行DbCommand数据库命令，并返回受影响的行数。
            </summary>
            <param name="cmd">
            要执行的DbCommand数据库命令。不允许为null。
            </param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入的数据库命令cmd为null时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.PrimaryKeyConflict - 0x00010106)">
            主键冲突时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.IdexConflict - 0x00010107)">
            索引冲突时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.GetDataTableBySQL(System.String,System.Object[])">
            <summary>
            执行SQL语句，并返回查询到的DataTable结果集。
            </summary>
            <param name="sqlstr">
            要执行的SQL语句。不允许为null或空串。
            如果是一个带参数的SQL语句，那么此SQL需要是有有效格式化标识的字符串。
            例如：SELECT * FROM [Table] WHERE [Name]={0}
            </param>
            <param name="values">
            SQL语句中参数的值，对应到SQL语句中的参数序号。
            如果提供的SQL不需要参数，则不需要传入此参数。
            </param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入SQL语句为null或为空串时；
            2.传入的参数列表与SQL语句的参数不匹配时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
            <returns>返回查询到的DataTable结果集。如果没有查到任何数据，则返回没有数据的DataTable对象。</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.GetDataTableByCommand(System.Data.Common.DbCommand)">
            <summary>
            执行DbCommand数据库命令，并返回查询到的DataTable结果集。
            </summary>
            <param name="cmd">
            要执行的DbCommand数据库命令。不允许为nul。
            </param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入的数据库命令cmd为null时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
            <returns>返回查询到的DataTable结果集。如果没有查到任何数据，则返回没有数据的DataTable对象。</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.SaveDataTable(System.Data.DataTable)">
            <summary>
            把DataTable的数据保存到数据库中，仅保存DataTable中变动过的数据
            </summary>
            <param name="datatb">要保存到数据库的DataTable对象。不能为null，而且必须具有对应到数据库的名称。</param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入的DataTable对象为null时；
            2.传入的DataTable对象的TableName属性为null或空串。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.SaveDataRow(System.String,System.Data.DataRow)">
            <summary>
            把DataRow保存到数据库中
            判断DataRow的状态，根据不同的状态，对数据库执行相应的操作
            </summary>
            <param name="tablename">要保存到的数据库表名称。不允许为null或空串。</param>
            <param name="row">要保存到数据库的DataRow对象。不能为null。</param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入的DataTable对象为null时；
            2.传入的DataTable对象的TableName属性为null或空串。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.GetRC1BySQL(System.String,System.Object[])">
            <summary>
            执行一个返回结果集的sql语句，并返回结果集中第一行第一列的值
            </summary>
            <param name="sqlstr">
            要执行的SQL语句，不允许为null或空串。
            如果是一个带参数的SQL语句，那么此SQL需要是有有效格式化标识的字符串。
            例如：SELECT * FROM [Table] WHERE [Name]={0}
            </param>
            <param name="values">
            SQL语句中参数的值，对应到SQL语句中的参数序号。
            如果提供的SQL不需要参数，则不需要传入此参数。
            </param>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常：
            1.传入SQL语句为null或为空串时；
            2.传入的参数列表与SQL语句的参数不匹配时。
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
            其他情况导致对数据库操作失败时，会引发此异常
            </exception>
            <returns>结果集中第一行第一列的值。如果查询结果集中没有数据，则返回null</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBAccess.GetParamName(System.Int32)">
            <summary>
            获取参数名称
            </summary>
        </member>
        <member name="P:LHBIS.Database.DBAccess.LHDBAccess.ConnectionTimeout">
            <summary>
            连接超时间时间，以秒为单位，默认为60。
            如果设置的时间为负数，则自动重置为默认值。
            </summary>
        </member>
        <member name="P:LHBIS.Database.DBAccess.LHDBAccess.CommandTimeout">
            <summary>
            命令执行超时时间。以秒为单位，默认为60。
            如果设置的时间为负数，则自动重置为默认值。
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBMSSql.#ctor(System.String)">
            <summary>
            根据数据库连接字符串初始化对象
            </summary>
            <param name="constr">提供数据库连接字符串，不能为null或空串</param>
            <exception cref="!:RException(DatabaseErrorCode.ConnectionStringIsEmpty - 0x00010101)">
            传入数据库连接字符串为null或为空串时，引发此异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.Commit">
            <summary>
            提交事务
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.CommitTransactionError - 0x00010108)">
            提交事务失败时引发该异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.Rollback">
            <summary>
            事务回滚,不会产生异常
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.CreateDbCommand">
            <summary>
            创建DbCommand对象实例，不引发异常
            </summary>
            <returns>DbCommand对象实例</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.CreateDbParameter">
            <summary>
            创建一个DbParameter对象实例，不引发异常
            </summary>
            <returns>DbParameter对象实例</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.ExecCommand(System.Data.Common.DbCommand)">
            <summary>
            在事务中执行DbCommand数据库命令，并返回受影响的行数
            </summary>
            <param name="cmd">要执行的DbCommand数据库命令，参数的数据库命令cmd不允许为null</param>
            <returns>返回受影响的行数</returns>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
             其他情况导致对数据库操作失败时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.IdexConflict - 0x00010107)">
             索引冲突时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.PrimaryKeyConflict - 0x00010106)">
             主键冲突时会引发此异常
            </exception>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            传入的数据库命令cmd为null时。
            </exception>
            前置条件
            传入的cmd参数不能为null
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.ExecSQL(System.String,System.Object[])">
            <summary>
            在事务中执行一个不返回结果集的SQL语句,并返回受影响的行数
            </summary>
            <param name="sqlstr">要执行的SQL语句,参数sqlstr不允许为null或空串,传入的sqlstr语句必须与参数列表匹配。
            如果是一个带参数的SQL语句,那么此SQL需要是有有效格式化标识的字符串。
            例如#xx3ASELECT * FROM [Table] WHERE [Name]={0}</param>
            <param name="values">SQL语句中参数的值,对应到SQL语句中的参数序号。
            如果提供的SQL不需要参数,则不需要传入此参数。</param>
            <returns>返回受影响的行数</returns>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
             其他情况导致对数据库操作失败时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.IdexConflict - 0x00010107)">
             索引冲突时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.PrimaryKeyConflict - 0x00010106)">
             主键冲突时会引发此异常
            </exception>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常
            1.传入SQL语句为null或为空串时;
            2.传入的参数列表与SQL语句的参数不匹配时。
            </exception>
            前置条件
            传入的参数sqlstr不允许为空
            传入的参数values与sql语句的参数要匹配，如果sql语句中不带参数，此参数可以不填
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.GetDataTableBySQL(System.String,System.Object[])">
            <summary>
            在事务中执行SQL语句,并返回查询到的DataTable结果集
            </summary>
            <param name="sqlstr">要执行的SQL语句,参数sqlstr不允许为null或空串,传入的sqlstr语句必须与参数列表匹配。
            如果是一个带参数的SQL语句,那么此SQL需要是有有效格式化标识的字符串。
            例如#xx3ASELECT * FROM [Table] WHERE [Name]={0}</param>
            <param name="values">SQL语句中参数的值,对应到SQL语句中的参数序号。
            如果提供的SQL不需要参数,则不需要传入此参数</param>
            <returns>返回查询到的DataTable结果集。如果没有查到任何数据,则返回没有数据的DataTable对象</returns>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
             其他情况导致对数据库操作失败时会引发此异常
            </exception>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常
            1.传入SQL语句为null或为空串时;
            2.传入的参数列表与SQL语句的参数不匹配时。
            </exception>
            前置条件
            传入的参数sqlstr不允许为空
            传入的参数values与sql语句的参数要匹配,如果sql语句中不带参数，此参数可以不填
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.GetRC1BySQL(System.String,System.Object[])">
            <summary>
            在事务中执行一个返回结果集的sql语句,并返回结果集中第一行第一列的值
            </summary>
            <param name="sqlstr">要执行的SQL语句,不允许为null或空串如果是一个带参数的SQL语句,
            那么此SQL需要是有有效格式化标识的字符串。
            例如#xx3ASELECT * FROM [Table] WHERE [Name]={0}</param>
            <param name="values">SQL语句中参数的值,对应到SQL语句中的参数序号。
            如果提供的SQL不需要参数,则不需要传入此参数。</param>
            <returns>结果集中第一行第一列的值。如果查询结果集中没有数据,则返回null</returns>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
             其他情况导致对数据库操作失败时会引发此异常
            </exception>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常
            1.传入SQL语句为null或为空串时;
            2.传入的参数列表与SQL语句的参数不匹配时。
            </exception>
            前置条件
            传入的参数sqlstr不允许为空
            传入的参数values与sql语句的参数要匹配，如果sql语句中不带参数，此参数可以不填
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.SaveDataTable(System.Data.DataTable)">
            <summary>
            在事务中把DataTable的数据保存到数据库中,仅保存DataTable中变动过的数据
            </summary>
            <param name="datatb">要保存到数据库的DataTable对象。不能为null,而且必须具有对应到数据库的名称</param>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
             其他情况导致对数据库操作失败时会引发此异常
            </exception>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下几种情况会引发该异常
            1.传入的DataTable对象为null时;
            2.传入的DataTable对象的TableName属性为null或空串。。
            </exception>
            前置条件
            1.传入的DataTable对象不能为null;
            2.传入的DataTable对象的TableName属性不能为null或空串
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.SaveDataRow(System.String,System.Data.DataRow)">
            <summary>
            在事务中把DataRow保存到数据库中
            </summary>
            <param name="tablename">要保存到的数据库表名称。不允许为null或空串</param>
            <param name="row">要保存到数据库的DataRow对象。不能为null</param>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            数据库连接失败时会引发此异常
            </exception>
            <exception cref="!:RException(DatabaseErrorCode.ExecDbCommandError - 0x00010002)">
             其他情况导致对数据库操作失败时会引发此异常
            </exception>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            </exception>
            前置条件
            1.传入的DataRow对象不能为null
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBTran.GetDbObjectName(System.String)">
            <summary>
            获取对应数据库的对象名称。如对应MS Sql server，输入TableName，则返回[TableName]
            </summary>
            <param name="objectName">对象名称。可以为表名，字段名</param>
            <returns>添加数据库标识以后的数据库安全名称</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:LHBIS.Database.DBAccess.LHDBTran.GetDataTableByCommand(System.Data.Common.DbCommand)" -->
        <member name="P:LHBIS.Database.DBAccess.LHDBTran.ConnectionTimeout">
            <summary>
            连接超时间时间，以秒为单位，默认为60。
            如果设置的时间为负数，则自动重置为默认值。
            </summary>
        </member>
        <member name="P:LHBIS.Database.DBAccess.LHDBTran.CommandTimeout">
            <summary>
            命令执行超时时间。以秒为单位，默认为60。
            如果设置的时间为负数，则自动重置为默认值。
            </summary>
        </member>
        <member name="M:LHBIS.Database.ORM.ORMHelper.ConvertDataRowToEntity``1(System.Data.DataRow)">
            <summary>
            将数据库中的行数据转换成一个实体对象
            </summary>
            <typeparam name="T">指定类型</typeparam>
            <param name="dataRow">数据库中的行数据</param>
            <returns>指定类型的实体对象</returns>
            <exception cref="!:RErrorCode.ArgmentesError - 0x00000014">
             参数错误，以下情况会出现该异常，并包含在innerException中
             传入的datarow为null或者为空字符串，出现空引用异常(RErrorCode.NullReference-0x00000001)
            </exception>
        </member>
        <member name="T:LHBIS.Database.DBAccess.LHDBOleDB">
            <summary>
            以OLEDB方式访问数据库的数据库访问对象
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBOleDB.#ctor(System.String)">
            <summary>
            根据数据库连接字符串初始化对象
            </summary>
            <param name="constr">提供数据库连接字符串，不能为null或空串</param>
            <exception cref="!:RException(DatabaseErrorCode.ConnectionStringIsEmpty - 0x00010101)">
            传入数据库连接字符串为null或为空串时，引发此异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBOleDB.GetParamPlaceHolder(System.Int32)">
            <summary>
            获取参数占位符
            </summary>
            <param name="paramindex">参数位置</param>
            <returns>参数占位符</returns>
        </member>
        <member name="T:LHBIS.Database.Configuration.SqlConnectionConfiguration">
            <summary>
            MSSql数据库连接配置
            </summary>
        </member>
        <member name="T:LHBIS.Database.Configuration.ConnectionConfiguration">
            <summary>
            一个连接配置基类，包含最基本的连接配置属性
            </summary>
        </member>
        <member name="M:LHBIS.Database.Configuration.ConnectionConfiguration.GetConfiguration">
            <summary>
            获取默认配置节点的数据库连接对象配置，DefaultConnection
            </summary>
            <returns>返回数据库连接配置对象。如果不存在此节点，则返回null</returns>
        </member>
        <member name="M:LHBIS.Database.Configuration.ConnectionConfiguration.GetConfiguration(System.String)">
            <summary>
            获取指定名称的配置节点的数据库连接对象配置
            </summary>
            <param name="configName">指定配置节点名称</param>
            <returns>返回数据库连接配置对象。如果不存在此节点，则返回null</returns>
        </member>
        <member name="P:LHBIS.Database.Configuration.ConnectionConfiguration.DbAccess">
            <summary>
            获取数据库访问对象，线程单例
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.ConnectionConfiguration.DbTran">
            <summary>
            获取数据库事务访问对象，线程单例
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.ConnectionConfiguration.DatabaseType">
            <summary>
            获取数据库类型
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.ConnectionConfiguration.ConnectionString">
            <summary>
            获取完整数据库连接字符串
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.ConnectionConfiguration.CommandTimeout">
            <summary>
            执行超时时间
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.ConnectionConfiguration.ConnectionTimeout">
            <summary>
            连接超时时间
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.SqlConnectionConfiguration.PartialConnectionString">
            <summary>
            连接字符串部分，不包含敏感数据
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.SqlConnectionConfiguration.User">
            <summary>
            用户名（敏感数据）。如果为null，则忽略此项。
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.SqlConnectionConfiguration.Password">
            <summary>
            密码（敏感数据）。如果为null，则忽略此项。
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.SqlConnectionConfiguration.UseEncryption">
            <summary>
            敏感数据是否已加密
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.SqlConnectionConfiguration.DatabaseType">
            <summary>
            获取数据库类型
            </summary>
        </member>
        <member name="P:LHBIS.Database.Configuration.SqlConnectionConfiguration.ConnectionString">
            <summary>
            获取完整数据库连接字符串
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.InsertCommandCreator">
            <summary>
            得到新增数据库对象的DbCommand
            </summary>
        </member>
        <member name="M:LHBIS.Database.ORM.InsertCommandCreator.#ctor(LHBIS.Database.DBAccess.IDBAccess)">
            <summary>
            初始化ModifyCommandCreator，dbAccess不能为空
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            传入的dbAccess为空，引发此异常
            </exception>
            <param name="dbAccess">数据库访问接口</param>
        </member>
        <member name="M:LHBIS.Database.ORM.InsertCommandCreator.GetDbCommand">
            <summary>
            得到新增数据库中某一对象的DbCommand，modifyCommandCreator的属性Entity不能为空
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.CommandTextIsEmpty - 0x00010102)">
            属性Entity为null时，引发此异常
            </exception>
            <returns>新增数据库中某一对象的DbCommand，DbCommand的参数为所传入的Entity的属性</returns>
        </member>
        <member name="P:LHBIS.Database.ORM.InsertCommandCreator.Entity">
            <summary>
            需要修改的实体对象，不能为空
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.DeleteCommandCreator">
            <summary>
            得到删除数据库对象的DbCommand
            </summary>
        </member>
        <member name="M:LHBIS.Database.ORM.DeleteCommandCreator.#ctor(LHBIS.Database.DBAccess.IDBAccess)">
            <summary>
            初始化DeleteCommandCreator，dbAccess不能为空
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.ConnectDbServerError - 0x00010001)">
            传入的dbAccess为空，引发此异常
            </exception>
            <param name="dbAccess">数据库访问接口</param>
        </member>
        <member name="M:LHBIS.Database.ORM.DeleteCommandCreator.GetDbCommand">
            <summary>
            删除数据库中某一对象的DbCommand，deleteCommandCreator的属性Entity不能为空
            </summary>
            <exception cref="!:RException(DatabaseErrorCode.CommandTextIsEmpty - 0x00010102)">
            属性Entity为null时，引发此异常
            </exception>
            <returns>删除数据库中某一对象的DbCommand，DbCommand的参数为所传入的Entity的属性</returns>
        </member>
        <member name="P:LHBIS.Database.ORM.DeleteCommandCreator.Entity">
            <summary>
            需要修改的实体对象，不能为空
            </summary>
        </member>
        <member name="T:LHBIS.Database.PreconditionAssert">
            <summary>
            前置条件断言，辅助类
            </summary>
        </member>
        <member name="T:LHBIS.Database.ORM.EntityMappingTableAttribute">
            <summary>
            实体类的类标注，用于标注实体类存储在数据库中的表名
            </summary>
        </member>
        <member name="M:LHBIS.Database.ORM.EntityMappingTableAttribute.#ctor(System.String)">
            <summary>
            设置实体类映射的表名，表名不能为null或空串
            </summary>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            以下情况会引发该异常：
            1.传入的tableName为null或空串时
            </exception>
            <param name="tableName">需持久化的类映射的数据库表名</param>
        </member>
        <member name="P:LHBIS.Database.ORM.EntityMappingTableAttribute.TableName">
            <summary>
            实体类映射到数据库的表名，不能为null或空串
            </summary>
        </member>
        <member name="P:LHBIS.Database.ORM.EntityMappingTableAttribute.ReadOnly">
            <summary>
            指定映射的对象是否是一个只读对象。
            如果被指定为只读对象,在对此对象做增、删、改操作时,会抛出对应异常
            </summary>
        </member>
        <member name="T:LHBIS.Database.ErrorMessages">
            <summary>
            错误消息定义，辅助类
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.NotHandledException">
            <summary>
            未处理的异常
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.PreconditionAssertFailed">
            <summary>
            前置条件断言失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.DBConnectionStringIsNullOrEmpty">
            <summary>
            数据库连接字符串为null或空串
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.CommandTextIsNullOrEmpty">
            <summary>
            要执行的SQL命令为null或空串
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.SqlParameterNotMatchValues">
            <summary>
            提供的参数类表与SQL语句需要的参数不匹配
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.NotSupportedDatabaseType">
            <summary>
            提供的数据库类型不支持
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.NullReferenceException">
            <summary>
            提供的参数对象为null或空字符串
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.AddEntityErrorMessage">
            <summary>
            添加实体对象失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.SelectEntityErrorMessage">
            <summary>
            查询实体对象失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.ExecDbCommandErrorMessage">
            <summary>
            操作数据库失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.PrimaryKeyConflict">
            <summary>
            主键冲突
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.IndexConflict">
            <summary>
            索引冲突
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.PrimaryKeyIsNull">
            <summary>
            主键为空
            </summary>
        </member>
        <member name="F:LHBIS.Database.ErrorMessages.CommiteError">
            <summary>
            事务提交失败
            </summary>
        </member>
        <member name="T:LHBIS.Database.DBAccess.LHDBODBC">
            <summary>
            以ODBC方式访问数据库的数据库访问对象
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBODBC.#ctor(System.String)">
            <summary>
            根据数据库连接字符串初始化对象
            </summary>
            <param name="constr">提供数据库连接字符串，不能为null或空串</param>
            <exception cref="!:RException(DatabaseErrorCode.ConnectionStringIsEmpty - 0x00010101)">
            传入数据库连接字符串为null或为空串时，引发此异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBODBC.GetParamPlaceHolder(System.Int32)">
            <summary>
            返回参数占位符
            </summary>
            <param name="paramindex">参数位置</param>
            <returns>参数占位符</returns>
        </member>
        <member name="T:LHBIS.Database.DBAccess.RDatabaseType">
            <summary>
            数据库连接类型枚举
            </summary>
        </member>
        <member name="F:LHBIS.Database.DBAccess.RDatabaseType.MSSQL">
            <summary>
            MSSql
            </summary>
        </member>
        <member name="F:LHBIS.Database.DBAccess.RDatabaseType.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:LHBIS.Database.DBAccess.RDatabaseType.OLEDB">
            <summary>
            OLEDB
            </summary>
        </member>
        <member name="F:LHBIS.Database.DBAccess.RDatabaseType.ODBC">
            <summary>
            ODBC
            </summary>
        </member>
        <member name="T:LHBIS.Database.DatabaseErrorCode">
            <summary>
            提供数据库操作命名空间下的错误代码常量定义。
            </summary>
            <remarks>数据库操作的错误代码为一个32位无符号整数，其中第一字节为0x00，第二字节为0x01</remarks>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.ConnectDbServerError">
            <summary>
            连接数据库服务器失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.ExecDbCommandError">
            <summary>
            执行SQL语句或命令失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.AddEntityError">
            <summary>
            添加实体对象失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.UpdateEntityError">
            <summary>
            修改实体对象失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.DeleteEntityError">
            <summary>
            删除实体对象失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.SelectEntityError">
            <summary>
            查询实体对象失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.ConnectionStringIsEmpty">
            <summary>
            连接字符串为null或空串
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.NotSupportedDatabaseType">
            <summary>
            不支持的数据库类型
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.CommandTextIsError">
            <summary>
            sql语句错误
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.PrimaryKeyConflict">
            <summary>
            主键冲突
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.IndexConflict">
            <summary>
            索引冲突
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.CommitTransactionError">
            <summary>
            事务提交失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.NotSupportedTransaction">
            <summary>
            该数据库不支持事务
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.ResultNotUnique">
            <summary>
            通过主键查找到得对象不唯一
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.BeginTransactionError">
            <summary>
            启动事务失败
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.NotSupportCommandBuilder">
            <summary>
            不支持CommandBuilder
            </summary>
        </member>
        <member name="F:LHBIS.Database.DatabaseErrorCode.EntityNotMappingDatabase">
            <summary>
            实体映射出错
            </summary>
        </member>
        <member name="T:LHBIS.Database.DBAccess.LHDBOracle">
            <summary>
            访问Oracle数据库的数据库访问对象
            </summary>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBOracle.#ctor(System.String)">
            <summary>
            根据数据库连接字符串初始化对象
            </summary>
            <param name="constr">提供数据库连接字符串，不能为null或空串</param>
            <exception cref="!:RException(DatabaseErrorCode.ConnectionStringIsEmpty - 0x00010101)">
            传入数据库连接字符串为null或为空串时，引发此异常
            </exception>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBOracle.GetParamPlaceHolder(System.Int32)">
            <summary>
            获取参数占位符
            </summary>
            <param name="paramindex">参数位置</param>
            <returns>参数占位符</returns>
        </member>
        <member name="M:LHBIS.Database.DBAccess.LHDBFactory.CreateDBAccessInstance(LHBIS.Database.DBAccess.RDatabaseType,System.String)">
            <summary>
            根据数据库类型，以及数据库连接字符串。
            创建LHDBAccess的对象实例
            </summary>
            <param name="dbtype">数据库类型</param>
            <param name="constr">数据库连接串，不能为null或空串</param>
            <returns>LHDBAccess的实例</returns>
            <exception cref="!:RException(RErrorCode.ArgmentesError - 0x00000014)">
            传入数据库连接字符串为null或为空串时(DatabaseErrorCode.ConnectionStringIsEmpty - 0x00010101)
            </exception>
        </member>
    </members>
</doc>
