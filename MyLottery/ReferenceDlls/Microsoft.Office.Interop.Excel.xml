<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.Office.Interop.Excel</name>
	</assembly>
	<members>
		<member name="T:Microsoft.Office.Interop.Excel._Application">
			<summary>Represents the entire Microsoft Excel application.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Macro">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)">
			<param name="Time">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)">
			<summary>Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</summary>
			<param name="Index">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication"></see>. Specifies the Microsoft application to activate.XlMSApplication can be one of these XlMSApplication constants:xlMicrosoftWordxlMicrosoftPowerPointxlMicrosoftMailxlMicrosoftAccessxlMicrosoftFoxProxlMicrosoftProjectxlMicrosoftSchedulePlus</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)">
			<summary>Adds a custom chart autoformat to the list of available chart autoformats.</summary>
			<param name="Chart">Required Object. A chart that contains the format that will be applied when the new chart autoformat is applied.</param>
			<param name="Name">Required String. The name of the autoformat.</param>
			<param name="Description">Optional Object. A description of the custom autoformat.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)">
			<summary>Adds a custom list for custom autofill and/or custom sort.</summary>
			<param name="ListArray">Required Object. Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object.</param>
			<param name="ByRow">Optional Object. Only used if ListArray is a Range object. True to create a custom list from each row in the range. False to create a custom list from each column in the range. If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range. If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)">
			<summary>Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</summary>
			<param name="Centimeters">Required Double. Specifies the centimeter value to be converted to points.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)">
			<summary>Stops recalculation in a Microsoft Excel application.</summary>
			<param name="KeepAbort">Optional Object. Allows recalculation to be performed for a Range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)">
			<summary>Checks the spelling of a single word. Returns True if the word is found in one of the dictionaries; returns False if the word isn't found.</summary>
			<param name="Word">Required String. The word you want to check.</param>
			<param name="IgnoreUppercase">Optional Object. True to have Microsoft Excel ignore words that are all uppercase. False to have Microsoft Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
			<param name="CustomDictionary">Optional Object. A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)">
			<summary>Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</summary>
			<param name="Formula">Required Object. A String that contains the formula you want to convert. This must be a valid formula, and it must begin with an equal sign.</param>
			<param name="FromReferenceStyle">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle"></see>. The reference style of the formula.XlReferenceStyle can be one of these XlReferenceStyle constants:xlA1xlR1C1</param>
			<param name="ToReferenceStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle"></see>. The reference style you want returned. If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by FromReferenceStyle.XlReferenceStyle can be one of these XlReferenceStyle constants. xlA1 xlR1C1</param>
			<param name="ToAbsolute">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle"></see>. Specifies the converted reference type. If this argument is omitted, the reference type isn't changed.XlReferenceStyle can be one of these XlReferenceStyle constants:xlAbsolutexlAbsRowRelColumnxlRelRowAbsColumnxlRelative</param>
			<param name="RelativeTo">Optional Object. Optional Variant. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that contains one cell. Relative references relate to this cell.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)">
			<summary>Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</summary>
			<param name="Channel">Required Integer. The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)"></see> method.</param>
			<param name="String">Required String. The message defined in the receiving application.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)">
			<summary>Opens a DDE channel to an application.</summary>
			<param name="Topic">Required String. Describes something in the application to which you're opening a channel — usually a document of that application.</param>
			<param name="App">Required String. The application name.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)">
			<summary>Sends data to an application.</summary>
			<param name="Channel">Required Integer. The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)"></see> method.</param>
			<param name="Item">Required Object. The item to which the data is to be sent.</param>
			<param name="Data">Required Object. The data to be sent to the application.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)">
			<summary>Requests information from the specified application. This method always returns an array.</summary>
			<param name="Channel">Required Integer. The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)"></see> method.</param>
			<param name="Item">Required String. The item to be requested.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)">
			<summary>Closes a channel to another application.</summary>
			<param name="Channel">Required Integer. The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)"></see> method.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)">
			<summary>Removes a custom chart autoformat from the list of available chart autoformats.</summary>
			<param name="Name">Required String. The name of the custom autoformat to be removed.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)">
			<summary>Deletes a custom list.</summary>
			<param name="ListNum">Required Integer. The custom list number. This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)">
			<summary>Opens the XML Source task pane and displays the XML map specified by the XmlMap argument.</summary>
			<param name="XmlMap">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object. The XML map to display in the task pane.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)">
			<param name="arg">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="p2">hiddenmemberparam</param>
			<param name="p1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)">
			<summary>Converts a Microsoft Excel name to an object or a value.</summary>
			<param name="Name">Required Object. The name of the object, using the naming convention of Microsoft Excel.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)">
			<summary>Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function. The return type depends on the function.</summary>
			<param name="String">Required String. A Microsoft Excel 4.0 macro language function without the equal sign. All references must be given as R1C1 strings. If String contains embedded double quotation marks, you must double them. For example, to run the macro function =MID("sometext",1,4), String would have to be "MID(""sometext"",1,4)".</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)">
			<summary>Returns a custom list (an array of strings).</summary>
			<param name="ListNum">Required Integer. The list number.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)">
			<summary>Returns the custom list number for an array of strings. You can use this method to match both built-in lists and custom-defined lists.</summary>
			<param name="ListArray">Required Object. An array of strings.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</summary>
			<param name="FileFilter">Optional Object. A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas. Each separate pair is listed in the Files of type drop-down list box. For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</param>
			<param name="ButtonText">Optional Object. Macintosh only.</param>
			<param name="FilterIndex">Optional Object. Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in FileFilter. If this argument is omitted or greater than the number of filters present, the first file filter is used.</param>
			<param name="Title">Optional Object. Specifies the title of the dialog box. If this argument is omitted, the title is "Open."</param>
			<param name="MultiSelect">Optional Object. True to allow multiple file names to be selected. False to allow only one file name to be selected. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)">
			<summary>Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</summary>
			<param name="Text">Optional Object. Specifies the text to be converted to phonetic text. If you omit this argument, the next possible phonetic text string (if any) of the previously specified Text is returned. If there are no more possible phonetic text strings, an empty string is returned.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</summary>
			<param name="InitialFilename">Optional Object. Specifies the suggested file name. If this argument is omitted, Microsoft Excel uses the active workbook's name.</param>
			<param name="FileFilter">Optional Object. A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas. Each separate pair is listed in the Files of type drop-down list box. For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</param>
			<param name="ButtonText">Optional Object. Macintosh only.</param>
			<param name="FilterIndex">Optional Object. Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in FileFilter. If this argument is omitted or greater than the number of filters present, the first file filter is used.</param>
			<param name="Title">Optional Object. Specifies the title of the dialog box. If this argument is omitted, the default title is used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)">
			<summary>Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</summary>
			<param name="Scroll">Optional Object. True to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window. False to not scroll through the window. The default is False.</param>
			<param name="Reference">Optional Object. The destination. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name. If this argument is omitted, the destination is the last range you used the Goto method to select.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)">
			<summary>Displays a Help topic.</summary>
			<param name="HelpFile">Optional Object. The name of the online Help file you want to display. If this argument isn't specified, Microsoft Excel Help is used.</param>
			<param name="HelpContextID">Optional Object. Specifies the context ID number for the Help topic. If this argument isn't specified, the Help Topics dialog box is displayed.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)">
			<summary>Converts a measurement from inches to points.</summary>
			<param name="Inches">Required Double. Specifies the inch value to be converted to points.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Displays a dialog box for user input. Returns the information entered in the dialog box.</summary>
			<param name="Prompt">Required Object. The message to be displayed in the dialog box. This can be a string, a number, a date, or a Boolean value.</param>
			<param name="Title">Optional Object. The title for the input box. If this argument is omitted, the default title is "Input."</param>
			<param name="Default">Optional Object. Specifies a value that will appear in the text box when the dialog box is initially displayed. If this argument is omitted, the text box is left empty. This value can be a Range object.</param>
			<param name="HelpFile">Optional Object. The name of the Help file for this input box. If the HelpFile and HelpContextID arguments are present, a Help button will appear in the dialog box.</param>
			<param name="Left">Optional Object. Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</param>
			<param name="HelpContextID">Optional Object. The context ID number of the Help topic in HelpFile.</param>
			<param name="Type">Optional Object. Specifies the return data type. If this argument is omitted, the dialog box returns text. Can be one or a sum of the following values.ValueMeaning0A formula1A number2Text (a string)4A logical value (True or False)8A cell reference, as a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object16An error value, such as #N/A64An array of valuesYou can use the sum of the allowable values for Type. For example, for an input box that can accept both text and numbers, set Type to 1 + 2.</param>
			<param name="Top">Optional Object. Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents the rectangular intersection of two or more ranges.</summary>
			<param name="Arg28">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg29">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg24">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg25">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg26">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg27">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg20">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg21">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg22">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg23">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg30">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg8">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg9">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg6">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg7">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg4">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg5">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg2">Required Range. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg3">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg14">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg1">Required Range. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg12">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg11">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg10">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg16">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg15">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg13">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg19">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg18">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
			<param name="Arg17">Required Object. The intersecting ranges. At least two Range objects must be specified.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Corresponds to options in the Macro Options dialog box. You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</summary>
			<param name="ShortcutKey">Optional Object. Required if HasShortcutKey is True; ignored otherwise. The shortcut key.</param>
			<param name="StatusBar">Optional Object. The status bar text for the macro.</param>
			<param name="MenuText">Optional Object. This argument is ignored.</param>
			<param name="HelpContextID">Optional Object. An integer that specifies the context ID for the Help topic assigned to the macro.</param>
			<param name="Category">Optional Object. An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example). See the remarks section to determine the integers that are mapped to the built-in categories. You can also specify a string for a custom category. If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box. If the category name has never been used, a new category is defined with that name. If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</param>
			<param name="HelpFile">Optional Object. The name of the Help file that contains the Help topic defined by HelpContextId.</param>
			<param name="HasMenu">Optional Object. This argument is ignored.</param>
			<param name="HasShortcutKey">Optional Object. True to assign a shortcut key to the macro (ShortcutKey must also be specified). If this argument is False, no shortcut key is assigned to the macro. If the macro already has a shortcut key, setting this argument to False removes the shortcut key. The default value is False.</param>
			<param name="Macro">Optional Object. The macro name or the name of a user defined function (UDF).</param>
			<param name="Description">Optional Object. The macro description.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)">
			<summary>Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</summary>
			<param name="DownloadNewMail">Optional Object. True to download new mail immediately.</param>
			<param name="Password">Optional Object. The mail account password. This argument is ignored in Microsoft Exchange.</param>
			<param name="Name">Optional Object. The mail account name or Microsoft Exchange profile name. If this argument is omitted, the default mail account name is used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)">
			<summary>Runs a specified procedure when a particular key or key combination is pressed.</summary>
			<param name="Procedure">Optional Object. A string indicating the name of the procedure to be run. If Procedure is "" (empty text), nothing happens when Key is pressed. This form of OnKey changes the normal result of keystrokes in Microsoft Excel. If Procedure is omitted, Key reverts to its normal result in Microsoft Excel, and any special key assignments made with previous OnKey methods are cleared.</param>
			<param name="Key">Required String. A string indicating the key to be pressed.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)">
			<summary>Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</summary>
			<param name="Procedure">Required String. The name of the procedure that will be run when you choose the Repeat command (Edit menu).</param>
			<param name="Text">Required String. The text that appears with the Repeat command (Edit menu).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)">
			<summary>Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</summary>
			<param name="Procedure">Required String. The name of the procedure to be run.</param>
			<param name="Schedule">Optional Object. True to schedule a new OnTime procedure. False to clear a previously set procedure. The default value is True.</param>
			<param name="EarliestTime">Required Object. The time when you want this procedure to be run.</param>
			<param name="LatestTime">Optional Object. The latest time at which the procedure can be run. For example, if LatestTime is set to EarliestTime + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at EarliestTime because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete. If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run. If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)">
			<summary>Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</summary>
			<param name="Procedure">Required String. The name of the procedure that’s run when you choose the Undo command (Edit menu).</param>
			<param name="Text">Required String. The text that appears with the Undo command (Edit menu).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)">
			<summary>Records code if the macro recorder is on.</summary>
			<param name="BasicCode">Optional Object. A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module. The string will be recorded on one line. If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</param>
			<param name="XlmCode">Optional Object. This argument is ignored.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)">
			<summary>Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</summary>
			<param name="Filename">Required String. Specifies the name of the XLL to be loaded.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Runs a macro or calls a function.</summary>
			<param name="Arg28">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg29">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg24">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg25">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg26">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg27">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg20">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg21">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg22">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg23">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg30">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg8">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg9">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg6">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg7">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg4">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg5">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg2">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg3">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg14">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg1">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg12">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg11">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg10">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg16">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg15">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg13">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg19">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg18">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Macro">Optional Object. The macro to run. This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object indicating where the function is, or a register ID for a registered DLL (XLL) function. If a string is used, the string will be evaluated in the context of the active sheet.</param>
			<param name="Arg17">Optional Object. The arguments that should be passed to the function.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)">
			<param name="Filename">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)">
			<summary>Saves the current workspace.</summary>
			<param name="Filename">Optional Object. The saved file name.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)">
			<summary>Sends keystrokes to the active application.</summary>
			<param name="Wait">Optional Object. True to have Microsoft Excel wait for the keys to be processed before returning control to the macro. False (or omitted) to continue running the macro without waiting for the keys to be processed.</param>
			<param name="Keys">Required Object. The key or key combination you want to send to the application as text.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)">
			<summary>Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</summary>
			<param name="Gallery">Optional Object. Specifies the name of a gallery.</param>
			<param name="FormatName">Optional Object. Specifies the name of a custom autoformat. This name can be a string naming a custom autoformat, or it can be the special constant xlBuiltIn to specify the built-in chart template.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)">
			<param name="Object">hiddenmemberparam</param>
			<param name="arg">hiddenmemberparam</param>
			<param name="ID">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Returns the union of two or more ranges.</summary>
			<param name="Arg28">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg29">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg24">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg25">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg26">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg27">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg20">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg21">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg22">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg23">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg30">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg8">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg9">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg6">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg7">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg4">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg5">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg2">Required Range. At least two Range objects must be specified.</param>
			<param name="Arg3">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg14">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg1">Required Range. At least two Range objects must be specified.</param>
			<param name="Arg12">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg11">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg10">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg16">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg15">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg13">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg19">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg18">Required Object. At least two Range objects must be specified.</param>
			<param name="Arg17">Required Object. At least two Range objects must be specified.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)">
			<summary>Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</summary>
			<param name="Volatile">Optional Object. True to mark the function as volatile. False to mark the function as nonvolatile. The default value is True.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)">
			<summary>Pauses a running macro until a specified time. Returns True if the specified time has arrived.</summary>
			<param name="Time">Required Object. The time at which you want the macro to resume in Microsoft Excel date format.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)">
			<summary>Returns information about how Visual Basic was called (for more information, see the Remarks section).</summary>
			<param name="Index">Optional Object. An index to the array. This argument is used only when the property returns an array (for more information, see the Remarks section).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)">
			<summary>Returns the formats that are currently on the Clipboard as an array of numeric values. To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</summary>
			<param name="Index">Optional Object. The array element to be returned. If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard. For more information, see the Remarks section.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)">
			<summary>Returns information about installed file converters. Returns Null if there are no converters installed.</summary>
			<param name="Index1">Optional Object. The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</param>
			<param name="Index2">Optional Object. The path of the converter DLL or code resource.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)">
			<summary>Returns a <see cref="T:Microsoft.Office.Core.FileDialog"></see> object representing an instance of the file dialog.</summary>
			<param name="fileDialogType">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType"></see>. The type of file dialog.MsoFileDialogType can be one of these MsoFileDialogType constants:msoFileDialogFilePicker Allows user to select a file.msoFileDialogFolderPicker Allows user to select a folder.msoFileDialogOpen Allows user to open a file.msoFileDialogSaveAs Allows user to save a file.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)">
			<summary>Returns information about the current country/region and international settings.</summary>
			<param name="Index">Required Object. The setting to be returned. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational"></see> constants listed in the following tables.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)">
			<summary>Returns an array of the last four ranges or names selected. Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object.</summary>
			<param name="Index">Optional Object. The index number (from 1 to 4) of the previous range or name.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents a cell or a range of cells.</summary>
			<param name="Cell1">Required Object. The name of the range. This must be an A1-style reference in the language of the macro. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). It can also include dollar signs, but they’re ignored. You can use a local defined name in any part of the range. If you use a name, the name is assumed to be in the language of the macro.</param>
			<param name="Cell2">Optional Object. The cell in the upper-left and lower-right corner of the range. Can be a Range object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)">
			<summary>Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</summary>
			<param name="Index1">Optional Object. The name of the DLL or code resource.</param>
			<param name="Index2">Optional Object. The name of the function.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel._Chart">
			<summary>Represents a chart in a workbook. The chart can be either an embedded chart (contained in a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject"></see>) or a separate chart sheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
			<param name="HasLeaderLines">hiddenmemberparam</param>
			<param name="LegendKey">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="AutoText">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart._Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)">
			<summary>Applies a standard or custom chart type to a chart.</summary>
			<param name="TypeName">Optional object (used only with a <see cref="T:Microsoft.Office.Interop.Excel.Chart"></see> object). The name of the custom chart type if ChartType specifies a custom chart gallery.</param>
			<param name="ChartType">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType"></see>. A standard chart type.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Applies data labels to a point, a series, or all the series in a chart.</summary>
			<param name="ShowValue">Optional Object. The value for the data label.</param>
			<param name="ShowBubbleSize">Optional Object. The bubble size for the data label.</param>
			<param name="Separator">Optional Object. The separator for the data label.</param>
			<param name="HasLeaderLines">Optional Object. For the <see cref="T:Microsoft.Office.Interop.Excel.Chart"></see> and <see cref="T:Microsoft.Office.Interop.Excel.Series"></see> objects, True if the series has leader lines.</param>
			<param name="LegendKey">Optional Object. True to show the legend key next to the point. The default value is False.</param>
			<param name="ShowPercentage">Optional Object. The percentage for the data label.</param>
			<param name="ShowSeriesName">Optional Object. The series name for the data label.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType"></see>. The type of data label to apply.</param>
			<param name="ShowCategoryName">Optional Object. The category name for the data label.</param>
			<param name="AutoText">Optional Object. True if the object automatically generates appropriate text based on content.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Arcs(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.AreaGroups(System.Object)">
			<summary>On a 2-D chart, returns an object that represents either a single area chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of the area chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection).</summary>
			<param name="Index">Optional Object. The chart group number.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.AutoFormat(System.Int32,System.Object)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Gallery">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)">
			<summary>Returns an object that represents either a single axis or a collection of the axes on the chart.</summary>
			<param name="Type">Optional Object. Specifies the axis to return. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType"></see> constants: xlValue, xlCategory, or xlSeriesAxis (xlSeriesAxis is valid only for 3-D charts).</param>
			<param name="AxisGroup">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup"></see>. Specifies the axis group. If this argument is omitted, the primary group is used. 3-D charts have only one axis group.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.BarGroups(System.Object)">
			<summary>On a 2-D chart, returns an object that represents either a single bar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of the bar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection).</summary>
			<param name="Index">Optional Object. Specifies the chart group.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Buttons(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.ChartGroups(System.Object)">
			<summary>Returns an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> object). The returned collection includes every type of group.</summary>
			<param name="Index">Optional Object. The chart group number.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.ChartObjects(System.Object)">
			<summary>Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject"></see> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects"></see> object) on the sheet.</summary>
			<param name="Index">Optional Object. The name or number of the chart. This argument can be an array to specify more than one chart.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Modifies the properties of the given chart. You can use this method to quickly format a chart without setting all the individual properties. This method is non-interactive, and it changes only the specified properties.</summary>
			<param name="HasLegend">Optional Object. True to include a legend.</param>
			<param name="SeriesLabels">Optional object. An integer specifying the number of rows or columns within the source range that contain series labels. Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</param>
			<param name="Format">Optional Object. The option number for the built-in autoformats. Can be a number from 1 through 10, depending on the gallery type. If this argument is omitted, Microsoft Excel chooses a default value based on the gallery type and data source.</param>
			<param name="Gallery">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartType"></see>. The chart type.</param>
			<param name="CategoryLabels">Optional Object. An integer specifying the number of rows or columns within the source range that contain category labels. Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</param>
			<param name="ExtraTitle">Optional Object. The series axis title for 3-D charts or the second value axis title for 2-D charts.</param>
			<param name="Source">Optional Object. The range that contains the source data for the new chart. If this argument is omitted, Microsoft Excel edits the active chart sheet or the selected chart on the active worksheet.</param>
			<param name="Title">Optional Object. The chart title text.</param>
			<param name="ValueTitle">Optional Object. The value axis title text.</param>
			<param name="PlotBy">Optional Object. Specifies whether the data for each series is in rows or columns. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol"></see> constants: xlRows or xlColumns.</param>
			<param name="CategoryTitle">Optional Object. The category axis title text.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.CheckBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<summary>Checks the spelling of an object and displays the Spelling dialog box</summary>
			<param name="IgnoreUppercase">Optional Object. True to have Microsoft Excel ignore words that are all uppercase. False to have Microsoft Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
			<param name="CustomDictionary">Optional Object. A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
			<param name="SpellLang">Optional Object. The language of the dictionary being used. Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID"></see> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)"></see> property.</param>
			<param name="AlwaysSuggest">Optional Object. True to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found. False to have Microsoft Excel wait for you to input the correct spelling. If this argument is omitted, the current setting will be used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.ColumnGroups(System.Object)">
			<summary>On a 2-D chart, returns an object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection).</summary>
			<param name="Index">Optional Object. Specifies the chart group.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Copy(System.Object,System.Object)">
			<summary>Copies the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)">
			<summary>Copies the selected object to the Clipboard as a picture.</summary>
			<param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat"></see>. The format of the picture.</param>
			<param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance"></see>. Specifies how the picture should be copied.</param>
			<param name="Size">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance"></see>. The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
			<summary>maconlymember</summary>
			<param name="ContainsRTF">maconlyparam</param>
			<param name="ContainsPICT">maconlyparam</param>
			<param name="Edition">maconlyparam</param>
			<param name="Appearance">maconlyparam</param>
			<param name="Size">maconlyparam</param>
			<param name="ContainsVALU">maconlyparam</param>
			<param name="ContainsBIFF">maconlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.DoughnutGroups(System.Object)">
			<summary>On a 2-D chart, returns an object that represents either a single doughnut chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of the doughnut chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection).</summary>
			<param name="Index">Optional Object. Specifies the chart group.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.DrawingObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Drawings(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.DropDowns(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Evaluate(System.Object)">
			<summary>Converts a Microsoft Excel name to an object or a value.</summary>
			<param name="Name">Required Object. The name of the object, using the naming convention of Microsoft Excel.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Export(System.String,System.Object,System.Object)">
			<summary>Exports the chart in a graphic format.</summary>
			<param name="Filename">Required String. The name of the exported file.</param>
			<param name="Interactive">Optional Object. True to display the dialog box that contains the filter-specific options. If this argument is False, Microsoft Excel uses the default values for the filter. The default value is False.</param>
			<param name="FilterName">Optional Object. The language-independent name of the graphic filter as it appears in the registry.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
			<summary>Returns information about the chart element at specified X and Y coordinates. This method is unusual in that you specify values for only the first two arguments. Microsoft Excel fills in the other arguments, and your code should examine those values when the method returns.</summary>
			<param name="Arg2">Required Integer. When the method returns, this argument contains information related to the chart element. For more information, see the Remarks section.</param>
			<param name="Arg1">Required Integer. When the method returns, this argument contains information related to the chart element. For more information, see the Remarks section.</param>
			<param name="x">Required Integer. The X coordinate of the chart element.</param>
			<param name="y">Required Integer. The Y coordinate of the chart element.</param>
			<param name="ElementID">Required Integer. When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem"></see> value of the chart element at the specified coordinates. For more information, see the Remarks section.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.GroupBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.GroupObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Labels(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.LineGroups(System.Object)">
			<summary>On a 2-D chart, returns an object that represents either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection).</summary>
			<param name="Index">Optional Object. Specifies the chart group.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Lines(System.Object)">
			<summary>f</summary>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.ListBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)">
			<summary>Moves the chart to a new location.</summary>
			<param name="Where">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation"></see>. Where to move the chart.</param>
			<param name="Name">Optional Object; required if Where is xlLocationAsObject. The name of the sheet where the chart will be embedded if Where is xlLocationAsObject or the name of the new sheet if Where is xlLocationAsNewSheet.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Move(System.Object,System.Object)">
			<summary>Moves the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.OLEObjects(System.Object)">
			<summary>Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject"></see>) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects"></see> collection) on the chart or sheet.</summary>
			<param name="Index">Optional Object. The name or number of the OLE object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.OptionButtons(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Ovals(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Paste(System.Object)">
			<summary>Pastes chart data from the Clipboard into the specified chart.</summary>
			<param name="Type">Optional Object. Specifies the chart information to paste if a chart is on the Clipboard. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType"></see> constants: xlFormats, xlFormulas, or xlAll. The default value is xlAll. If there’s data other than a chart on the Clipboard, this argument cannot be used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Pictures(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.PieGroups(System.Object)">
			<summary>On a 2-D chart, returns an object that represents either a single pie chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of the pie chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection).</summary>
			<param name="Index">Optional Object. Specifies the chart group.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Prints the object.</summary>
			<param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
			<param name="Collate">Optional Object. True to collate multiple copies.</param>
			<param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
			<param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
			<param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
			<param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
			<param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
			<param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.PrintPreview(System.Object)">
			<summary>Shows a preview of the object as it would look when printed.</summary>
			<param name="EnableChanges">Optional Object. True to enable changes to the chart. </param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Protects a chart so that it cannot be modified.</summary>
			<param name="Contents">Optional Object. True to protect contents. For a chart, this protects the entire chart. For a worksheet, this protects the locked cells. The default value is True.</param>
			<param name="Password">Optional Object. A string that specifies a case-sensitive password for the worksheet or workbook. If this argument is omitted, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook. If you forget the password, you cannot unprotect the worksheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</param>
			<param name="DrawingObjects">Optional Object. True to protect shapes. The default value is False.</param>
			<param name="UserInterfaceOnly">Optional Object. True to protect the user interface, but not macros. If this argument is omitted, protection applies both to macros and to the user interface.</param>
			<param name="Scenarios">Optional Object. True to protect scenarios. This argument is valid only for worksheets. The default value is True.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.RadarGroups(System.Object)">
			<summary>On a 2-D chart, returns an object that represents either a single radar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of the radar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection).</summary>
			<param name="Index">Optional Object. Specifies the chart group.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Rectangles(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Saves changes to the chart or worksheet in a different file.</summary>
			<param name="AddToMru">Optional Object. True to add this workbook to the list of recently used files. The default value is False.</param>
			<param name="CreateBackup">Optional Object. True to create a backup file.</param>
			<param name="Password">Optional Object. A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
			<param name="Filename">Optional Object. A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</param>
			<param name="FileFormat">Optional Object. The file format to use when you save the file. For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat"></see> property. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
			<param name="WriteResPassword">Optional Object. A string that indicates the write-reservation password for this file. If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</param>
			<param name="TextCodepage">Optional Object. Not used in U.S. English Microsoft Excel.</param>
			<param name="TextVisualLayout">Optional Object. Not used in U.S. English Microsoft Excel.</param>
			<param name="ReadOnlyRecommended">Optional Object. True to display a message when the file is opened, recommending that the file be opened as read-only.</param>
			<param name="Local">Optional Object. True saves files against the language of Microsoft Excel (including control panel settings). False (default) saves files against the language of Visual Basic for Applications (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.ScrollBars(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. The object to replace.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.SeriesCollection(System.Object)">
			<summary>Returns an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series"></see> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection"></see> collection) in the chart or chart group.</summary>
			<param name="Index">Optional Object. The name or number of the series.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.SetBackgroundPicture(System.String)">
			<summary>Sets the background graphic for a worksheet or chart.</summary>
			<param name="Filename">Required String. The name of the graphic file.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)">
			<summary>Sets the source data range for the chart.</summary>
			<param name="Source">Required <see cref="T:Microsoft.Office.Interop.Excel.Range"></see>. The range that contains the source data.</param>
			<param name="PlotBy">Optional Object. Specifies the way the data is to be plotted. Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol"></see> constants: xlColumns or xlRows.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Spinners(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.TextBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.Unprotect(System.Object)">
			<summary>Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</summary>
			<param name="Password">Optional Object. A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit this argument for a workbook that's protected with a password, the method fails.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Chart.XYGroups(System.Object)">
			<summary>On a 2-D chart, returns an object that represents either a single scatter chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> object) or a collection of the scatter chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection).</summary>
			<param name="Index">Optional Object. Specifies the chart group.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Chart.HasAxis(System.Object,System.Object)">
			<summary>Returns or sets which axes exist on the chart.</summary>
			<param name="Index1">Optional Object. The axis type. Series axes apply only to 3-D charts. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType"></see> constants.</param>
			<param name="Index2">Optional Object. The axis group. 3-D charts have only one set of axes. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup"></see> constants.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global._Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Macro">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.DDEExecute(System.Int32,System.String)">
			<param name="Channel">hiddenmemberparam</param>
			<param name="String">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.DDEInitiate(System.String,System.String)">
			<param name="Topic">hiddenmemberparam</param>
			<param name="App">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.DDEPoke(System.Int32,System.Object,System.Object)">
			<param name="Channel">hiddenmemberparam</param>
			<param name="Item">hiddenmemberparam</param>
			<param name="Data">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.DDERequest(System.Int32,System.String)">
			<param name="Channel">hiddenmemberparam</param>
			<param name="Item">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.DDETerminate(System.Int32)">
			<param name="Channel">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.ExecuteExcel4Macro(System.String)">
			<param name="String">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Macro">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.SendKeys(System.Object,System.Object)">
			<param name="Wait">hiddenmemberparam</param>
			<param name="Keys">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Global.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Global.Range(System.Object,System.Object)">
			<param name="Cell1">hiddenmemberparam</param>
			<param name="Cell2">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Global.ShortcutMenus(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._IOLEObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._IOLEObject.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)">
			<param name="Verb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._IQueryTable.Refresh(System.Object)">
			<param name="BackgroundQuery">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._IQueryTable.SaveAsODC(System.String,System.Object,System.Object)">
			<param name="ODCFileName">hiddenmemberparam</param>
			<param name="Keywords">hiddenmemberparam</param>
			<param name="Description">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel._OLEObject">
			<summary>Represents an ActiveX control or a linked or embedded OLE object on a worksheet. The OLEObject object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects"></see> collection. The OLEObjects collection contains all the OLE objects on a single worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._OLEObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<summary>Copies the selected object to the Clipboard as a picture. Object.</summary>
			<param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat"></see>. The format of the picture.</param>
			<param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance"></see>. Specifies how the picture should be copied.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._OLEObject.Cut">
			<summary>Cuts the object to the Clipboard or pastes it into a specified destination.</summary>
			<param name="Destination">Optional Object. Used only with Range objects. The range where the object should be pasted. If this argument is omitted, the object is cut to the Clipboard.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._OLEObject.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._OLEObject.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)">
			<summary>Sends a verb to the server of the specified OLE object.</summary>
			<param name="Verb">Optional XlOLEVerb. The verb that the server of the OLE object should act on. If this argument is omitted, the default verb is sent. The available verbs are determined by the object's source application. Typical verbs for an OLE object are Open and Primary (represented by the XlOLEVerb constants xlOpen and xlPrimary).</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel._QueryTable">
			<summary>Represents a worksheet table built from data returned from an external data source, such as a SQL server or a Microsoft Access database. The QueryTable object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables"></see> collection.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._QueryTable.Refresh(System.Object)">
			<summary>Updates an external data range (<see cref="T:Microsoft.Office.Interop.Excel.QueryTable"></see>). Boolean.</summary>
			<param name="BackgroundQuery">Optional Object. Used only with QueryTables that are based on the results of a SQL query. True to return control to the procedure as soon as a database connection is made and the query is submitted. The QueryTable is updated in the background. False to return control to the procedure only after all data has been fetched to the worksheet. If this argument isn't specified, the setting of the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.BackgroundQuery"></see> property determines the query mode.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._QueryTable.SaveAsODC(System.String,System.Object,System.Object)">
			<summary>Saves the PivotTable cache source as a Microsoft Office Data Connection file.</summary>
			<param name="ODCFileName">Required String. Location to which the file is saved.</param>
			<param name="Keywords">Optional Object. Space-separated keywords that can be used to search for this file.</param>
			<param name="Description">Optional Object. Description that will be saved in the file.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel._Workbook">
			<summary>Represents a Microsoft Excel workbook.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)">
			<param name="Structure">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Windows">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="ConflictResolution">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
			<param name="AccessMode">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)">
			<summary>Accepts all changes in the specified shared workbook.</summary>
			<param name="When">Optional Object. Specifies when all the changes are accepted.</param>
			<param name="Where">Optional Object. Specifies where all the changes are accepted.</param>
			<param name="Who">Optional Object. Specifies by whom all the changes are accepted.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)">
			<summary>Converts formulas linked to other Microsoft Excel sources or OLE sources to values.</summary>
			<param name="Name">Required String. The name of the link.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType"></see>. The type of link.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)">
			<summary>Changes the access permissions for the workbook. This may require an updated version to be loaded from the disk.</summary>
			<param name="WritePassword">Optional Object. Specifies the write-reserved password if the file is write reserved and Mode is xlReadWrite. Ignored if there's no password for the file or if Mode is xlReadOnly.</param>
			<param name="Notify">Optional Object. True (or omitted) to notify the user if the file cannot be immediately accessed.</param>
			<param name="Mode">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess"></see>. Specifies the new access mode.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)">
			<summary>Changes a link from one document to another.</summary>
			<param name="NewName">Required String. The new name of the link.</param>
			<param name="Name">Required String. The name of the Microsoft Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)"></see> method.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType"></see>. The link type.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)">
			<summary>Returns a workbook from a local computer to a server and sets the local workbook to read-only so that it cannot be edited locally. Calling this method will also close the workbook.</summary>
			<param name="Comments">Optional Object. Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if SaveChanges equals True).</param>
			<param name="SaveChanges">Optional Object. True saves changes and checks in the document. False returns the document to a checked-in status without saving revision.</param>
			<param name="MakePublic">Optional Object. True allows the user to publish the workbook after it has been checked in. This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if SaveChanges equals True).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)">
			<summary>Closes the object.</summary>
			<param name="RouteWorkbook">Optional Object. If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored. Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaningTrueSends the workbook to the next recipient.FalseDoesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</param>
			<param name="Filename">Optional Object. Save changes under this file name.</param>
			<param name="SaveChanges">Optional Object. If there are no changes to the workbook, this argument is ignored. If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored. If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueActionTrueSaves the changes to the workbook. If there is not yet a file name associated with the workbook, then FileName is used. If FileName is omitted, the user is asked to supply a file name.FalseDoes not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)">
			<summary>Deletes a custom number format from the workbook.</summary>
			<param name="NumberFormat">Required String. Names the number format to be deleted.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)">
			<param name="calcid">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Displays a cached document if it’s already been downloaded. Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</summary>
			<param name="SubAddress">Optional Object. The location within the target document. The default value is the empty string.</param>
			<param name="Address">Required String. The address of the target document.</param>
			<param name="ExtraInfo">Optional Object. A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink. For example, you can use ExtraInfo to specify the coordinates of an image map, the contents of a form, or a FAT file name.</param>
			<param name="NewWindow">Optional Object. True to display the target application in a new window. The default value is False.</param>
			<param name="AddHistory">Optional Object. Not used. Reserved for future use.</param>
			<param name="HeaderInfo">Optional Object. A string that specifies header information for the HTTP request. The default value is an empty string.</param>
			<param name="Method">Optional Object. Specifies the way ExtraInfo is attached. Can be one of the <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod"></see> constants.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer">
			<summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)">
			<summary>Controls how changes are shown in a shared workbook.</summary>
			<param name="When">Optional Object. The changes that are shown. Can be one of the following XlHighlightChangesTime constants: xlSinceMyLastSave, xlAllChanges, or xlNotYetReviewed.</param>
			<param name="Where">Optional Object. An A1-style range reference that specifies the area to check for changes.</param>
			<param name="Who">Optional Object. The user or users whose changes are shown. Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)">
			<summary>Returns the link date and update status. Object.</summary>
			<param name="EditionRef">Optional Object. If the link is an edition, this argument specifies the edition reference as a string in R1C1 style. This argument is required if there's more than one publisher or subscriber with the same name in the workbook.</param>
			<param name="Name">Optional String.</param>
			<param name="LinkInfo">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo"></see>. The type of information to be returned.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType"></see>. The type of link to return.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)">
			<summary>Returns an array of links in the workbook. The names in the array are the names of the linked documents, editions, or DDE or OLE servers. Returns Empty if there are no links. Object.</summary>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink"></see>. The type of link to return.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)">
			<summary>Merges changes from one workbook into an open workbook.</summary>
			<param name="Filename">Required Object. The file name of the workbook that contains the changes to be merged into the open workbook.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)">
			<summary>Opens the supporting documents for a link or links.</summary>
			<param name="ReadOnly">Optional Object. True to open documents as read-only. The default value is False.</param>
			<param name="Name">Required String. The name of the Microsoft Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)"></see> method.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink"></see>. The link type.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="SourceData">hiddenmemberparam</param>
			<param name="RowGrand">hiddenmemberparam</param>
			<param name="BackgroundQuery">hiddenmemberparam</param>
			<param name="Connection">hiddenmemberparam</param>
			<param name="HasAutoFormat">hiddenmemberparam</param>
			<param name="PageFieldOrder">hiddenmemberparam</param>
			<param name="PageFieldWrapCount">hiddenmemberparam</param>
			<param name="TableDestination">hiddenmemberparam</param>
			<param name="ReadData">hiddenmemberparam</param>
			<param name="Reserved">hiddenmemberparam</param>
			<param name="AutoPage">hiddenmemberparam</param>
			<param name="ColumnGrand">hiddenmemberparam</param>
			<param name="OptimizeCache">hiddenmemberparam</param>
			<param name="SourceType">hiddenmemberparam</param>
			<param name="SaveData">hiddenmemberparam</param>
			<param name="TableName">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)">
			<summary>Posts the specified workbook to a public folder. This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</summary>
			<param name="DestName">Optional Object. This argument is ignored. The Post method prompts the user to specify the destination for the workbook.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Prints the object.</summary>
			<param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
			<param name="Collate">Optional Object. True to collate multiple copies.</param>
			<param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
			<param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
			<param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
			<param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
			<param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
			<param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)">
			<summary>Shows a preview of the object as it would look when printed.</summary>
			<param name="EnableChanges">Enables changes to the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)">
			<summary>Protects a workbook so that it cannot be modified.</summary>
			<param name="Structure">Optional Object. True to protect the structure of the workbook (the relative position of the sheets). The default value is False.</param>
			<param name="Password">Optional Object. A string that specifies a case-sensitive password for the worksheet or workbook. If this argument is omitted, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook. If you forget the password, you cannot unprotect the worksheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</param>
			<param name="Windows">Optional Object. True to protect the workbook windows. If this argument is omitted, the windows aren’t protected.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Saves the workbook and protects it for sharing.</summary>
			<param name="CreateBackup">Optional Object. True to create a backup file.</param>
			<param name="Password">Optional Object. A case-sensitive string indicating the protection password to be given to the file. Should be no longer than 15 characters.</param>
			<param name="Filename">Optional Object. A string indicating the name of the saved file. You can include a full path; if you don’t, Microsoft Excel saves the file in the current folder.</param>
			<param name="SharingPassword">Optional Object. A string indicating the password to be used to protect the file for sharing.</param>
			<param name="WriteResPassword">Optional Object. A string indicating the write-reservation password for this file. If a file is saved with the password and the password isn’t supplied when the file is opened, the file is opened read-only.</param>
			<param name="ReadOnlyRecommended">Optional Object. True to display a message when the file is opened recommending that the file be opened read-only.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)">
			<summary>Removes entries from the change log for the specified workbook.</summary>
			<param name="SharingPassword">Optional Object. The password that unprotects the workbook for sharing. If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</param>
			<param name="Days">Required Integer. The number of days that changes in the change log are to be retained.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)">
			<summary>Rejects all changes in the specified shared workbook.</summary>
			<param name="When">Optional Object. Specifies when all the changes are rejected.</param>
			<param name="Where">Optional Object. Specifies where all the changes are rejected.</param>
			<param name="Who">Optional Object. Specifies by whom all the changes are rejected.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)">
			<summary>Reloads a workbook based on an HTML document, using the specified document encoding.</summary>
			<param name="Encoding">Required <see cref="T:Microsoft.Office.Core.MsoEncoding"></see>. The encoding that is to be applied to the workbook.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)">
			<summary>Disconnects the specified user from the shared workbook.</summary>
			<param name="Index">Required Integer. The user index.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.Reply">
			<summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll">
			<summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)">
			<summary>Sends an e-mail message to the author of a workbook that has been sent out for review, notifying them that a reviewer has completed review of the workbook.</summary>
			<param name="ShowMessage">Optional Object. False does not display the message. True displays the message.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)">
			<summary>Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook. This method is included for backward compatibility. You should use the Open, Close, Activate and Deactivate events instead of these macros.</summary>
			<param name="Which">Required <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro"></see>.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Saves changes to the workbook in a different file.</summary>
			<param name="AddToMru">Optional Object. True to add this workbook to the list of recently used files. The default value is False.</param>
			<param name="ConflictResolution">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution"></see>.</param>
			<param name="CreateBackup">Optional Object. True to create a backup file.</param>
			<param name="Local">Optional Object. True saves files against the language of Microsoft Excel (including control panel settings). False (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
			<param name="Password">Optional Object. A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
			<param name="Filename">Optional Object. A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</param>
			<param name="FileFormat">Optional Object. The file format to use when you save the file. For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat"></see> property. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
			<param name="WriteResPassword">Optional Object. A string that indicates the write-reservation password for this file. If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</param>
			<param name="TextCodepage">Optional Object. Not used in U.S. English Microsoft Excel.</param>
			<param name="TextVisualLayout">Optional Object. Not used in U.S. English Microsoft Excel.</param>
			<param name="ReadOnlyRecommended">Optional Object. True to display a message when the file is opened recommending that the file be opened as read-only.</param>
			<param name="AccessMode">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode"></see>.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)">
			<summary>Exports the data that has been mapped to the specified XML schema map to an XML data file.</summary>
			<param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object. The schema map to apply to the data.</param>
			<param name="Filename">Required String. A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)">
			<summary>Saves a copy of the workbook to a file but doesn't modify the open workbook in memory.</summary>
			<param name="Filename">Required. Specifies the file name for the copy.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)">
			<param name="s">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)">
			<summary>Sends a worksheet as a fax to the specified recipients.</summary>
			<param name="Recipients">Optional Object. A string that represents the fax numbers and e-mail addresses of the people to whom the fax will be sent. Separate multiple recipients with a semicolon.</param>
			<param name="ShowMessage">Optional Object. True displays the fax message before sending it. False sends the fax without displaying the fax message.</param>
			<param name="Subject">Optional Object. A string that represents the subject line for the faxed document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)">
			<summary>Sends a workbook in an e-mail message for review to the specified recipients.</summary>
			<param name="Recipients">Optional Object. A string that lists the people to whom to send the message. These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses. Separate multiple recipients with a semicolon (;). If left blank and ShowMessage is False, you will receive an error message, and the message will not be sent.</param>
			<param name="IncludeAttachment">Optional Object. A Boolean value that indicates whether the message should include an attachment or a link to a server location. The default value is True. If set to False, the document must be stored at a shared location.</param>
			<param name="ShowMessage">Optional Object. A Boolean value that indicates whether the message should be displayed when the method is executed. The default value is True. If set to False, the message is automatically sent to the recipients without first showing the message to the sender.</param>
			<param name="Subject">Optional Object. A string for the subject of the message. If left blank, the subject will be: Please review "filename".</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)">
			<summary>Sends the workbook by using the installed mail system.</summary>
			<param name="ReturnReceipt">Optional Object. True to request a return receipt. False not to request a return receipt. The default value is False.</param>
			<param name="Recipients">Required Object. Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients. At least one recipient must be specified, and all recipients are added as To recipients.</param>
			<param name="Subject">Optional Object. Specifies the subject of the message. If this argument is omitted, the document name is used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)">
			<summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
			<param name="Priority">maconlyparam</param>
			<param name="FileFormat">maconlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)">
			<summary>Sets the name of a procedure that runs whenever a DDE link is updated.</summary>
			<param name="Procedure">Required String. The name of the procedure to be run when the link is updated. This can be either a Microsoft Excel 4.0 macro or a Visual Basic procedure. Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</param>
			<param name="Name">Required String. The name of the DDE/OLE link as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)"></see> method.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)">
			<summary>Sets the options for encrypting workbooks using passwords.</summary>
			<param name="PasswordEncryptionKeyLength">Optional Object. The encryption key length which is a multiple of 8 (40 or greater).</param>
			<param name="PasswordEncryptionProvider">Optional Object. A case sensitive string of the encryption provider.</param>
			<param name="PasswordEncryptionAlgorithm">Optional Object. A case sensitive string of the algorithmic short name (i.e. "RC4").</param>
			<param name="PasswordEncryptionFileProperties">Optional Object. True (default) to encrypt file properties.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign">
			<summary>Toggles form design mode on or off.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)">
			<summary>Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</summary>
			<param name="Password">Optional Object. A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit this argument for a workbook that's protected with a password, the method fails.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)">
			<summary>Turns off protection for sharing and saves the workbook.</summary>
			<param name="SharingPassword">Optional Object. The workbook password.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)">
			<summary>Updates a Microsoft Excel, DDE, or OLE link (or links).</summary>
			<param name="Name">Optional Object. The name of the Microsoft Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)"></see> method.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType"></see>.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)">
			<summary>Imports an XML data file into the current workbook. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult"></see>.</summary>
			<param name="ImportMap">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see>. The schema map to apply when importing the file.</param>
			<param name="Url">Required String. A uniform resource locator (URL) or a uniform naming convention (UNC) path to a XML data file.</param>
			<param name="Destination">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range"></see>. The data will be imported into a new XML list at the range specified.</param>
			<param name="Overwrite">Optional Boolean. If a value is not specified for the Destination parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the ImportMap parameter. Set to True to overwrite the data or False to append the new data to the existing data. The default value is True. If a value is specified for the Destination parameter, then this parameter specifies whether or not to overwrite existing data. Set to True to overwrite existing data or False to cancel the import if data would be overwritten. The default value is True.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)">
			<summary>Imports an XML data stream that has been previously loaded into memory. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult"></see>.</summary>
			<param name="ImportMap">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see>. The schema map to apply when importing the file.</param>
			<param name="Data">Required String. The data to import.</param>
			<param name="Destination">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range"></see>. The data will be imported into a new XML list in the range specified.</param>
			<param name="Overwrite">Optional Boolean. If a value is not specified for the Destination parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the ImportMap parameter. Set to True to overwrite the data or False to append the new data to the existing data. The default value is True. If a value is specified for the Destination parameter, then this parameter specifies whether or not to overwrite existing data. Set to True to overwrite existing data or False to cancel the import if data would be overwritten. The default value is True.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)">
			<summary>Returns or sets colors in the palette for the workbook. The palette has 56 entries, each represented by an RGB value. Read/write Object.</summary>
			<param name="Index">Optional Object. The color number (from 1 to 56). If this argument isn’t specified, this method returns an array that contains all 56 of the colors in the palette.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel._Worksheet">
			<summary>Represents a worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="SpellScript">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="IgnoreFinalYaa">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">hiddenmemberparam</param>
			<param name="DisplayAsIcon">hiddenmemberparam</param>
			<param name="Format">hiddenmemberparam</param>
			<param name="IconFileName">hiddenmemberparam</param>
			<param name="Link">hiddenmemberparam</param>
			<param name="IconIndex">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate">
			<summary>Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)">
			<summary>Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject"></see> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects"></see> object) on the sheet.</summary>
			<param name="Index">Optional Variant. The name or number of the chart. This argument can be an array to specify more than one chart.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<summary>Checks the spelling of an object. This form has no return value; Microsoft Excel displays the Spelling dialog box.</summary>
			<param name="IgnoreUppercase">Optional Object. True to have Microsoft Excel ignore words that are all uppercase. False to have Microsoft Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
			<param name="CustomDictionary">Optional Object. A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
			<param name="SpellLang">Optional Object. The language of the dictionary being used. Can be one of the MsoLanguageID values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)"></see> property.</param>
			<param name="AlwaysSuggest">Optional Object. True to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found. False to have Microsoft Excel wait for you to input the correct spelling. If this argument is omitted, the current setting will be used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)">
			<summary>Copies the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)">
			<summary>Converts a Microsoft Excel name to an object or a value.</summary>
			<param name="Name">Required String. The name of the object, using the naming convention of Microsoft Excel.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)">
			<summary>Moves the sheet to another location in the workbook</summary>
			<param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)">
			<summary>Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject"></see>) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects"></see> collection) on the chart or sheet. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the OLE object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)">
			<summary>Pastes the contents of the Clipboard onto the sheet.</summary>
			<param name="Link">Optional Object. True to establish a link to the source of the pasted data. If this argument is specified, the Destination argument cannot be used. The default value is False.</param>
			<param name="Destination">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used. This argument can be specified only if the contents of the Clipboard can be pasted into a range. If this argument is specified, the Link argument cannot be used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Pastes the contents of the Clipboard onto the sheet using a specified format. Use this method to paste data from other applications or to paste data in a specific format.</summary>
			<param name="IconLabel">Optional Object. The text label of the icon.</param>
			<param name="DisplayAsIcon">Optional Object. True to display the pasted data as an icon. The default value is False.</param>
			<param name="Format">Optional Object. A string that specifies the Clipboard format of the data.</param>
			<param name="IconFileName">Optional Object. The name of the file that contains the icon to use if DisplayAsIcon is True.</param>
			<param name="Link">Optional Object. True to establish a link to the source of the pasted data. If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored. The default value is False.</param>
			<param name="NoHTMLFormatting">Optional Object. True to remove all formatting, hyperlinks, and images from HTML. False to paste HTML as is. The default value is False.</param>
			<param name="IconIndex">Optional Object. The index number of the icon within the icon file.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)">
			<summary>Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable"></see> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables"></see> object) on a worksheet. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the report.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable"></see> object. This method doesn’t display the PivotTable Wizard. This method isn’t available for OLE DB data sources. Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)"></see> method to add a PivotTable cache, and then create a PivotTable report based on the cache. PivotTable object.</summary>
			<param name="SourceData">Optional Object. The data for the new report. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object, an array of ranges, or a text constant that represents the name of another report. For an external database, SourceData is an array of strings containing the SQL query string, where each element is up to 255 characters in length. You should use the Connection argument to specify the ODBC connection string. For compatibility with earlier versions of Excel, SourceData can be a two-element array. The first element is the connection string specifying the ODBC source for the data. The second element is the SQL query string used to get the data. If you specify SourceData, you must also specify SourceType. If the active cell is inside the SourceData range, you must specify TableDestination as well.</param>
			<param name="RowGrand">Optional Object. True to show grand totals for rows in the report.</param>
			<param name="BackgroundQuery">Optional Object. True to have Excel perform queries for the report asynchronously (in the background). The default value is False.</param>
			<param name="Connection">Optional Object. A string that contains ODBC settings that allow Excel to connect to an ODBC data source. The connection string has the form "ODBC;&lt;connection string&gt;". This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache"></see> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection"></see> property.</param>
			<param name="HasAutoFormat">Optional Object. True to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</param>
			<param name="PageFieldOrder">Optional Object. The order in which page fields are added to the PivotTable report’s layout. Can be one of the following XlOrder constants: xlDownThenOver or xlOverThenDown. The default value is xlDownThenOver.</param>
			<param name="PageFieldWrapCount">Optional Object. The number of page fields in each column or row in the PivotTable report. The default value is 0 (zero).</param>
			<param name="TableDestination">Optional Object. A Range object specifying where the report should be placed on the worksheet. If this argument is omitted, the report is placed at the active cell.</param>
			<param name="ReadData">Optional Object. True to create a PivotTable cache that contains all records from the external database; this cache can be very large. If ReadData is False, you can set some of the fields as server-based page fields before the data is actually read.</param>
			<param name="Reserved">Optional Object. Not used by Microsoft Excel.</param>
			<param name="AutoPage">Optional Object. Valid only if SourceType is xlConsolidation. True to have Microsoft Excel create a page field for the consolidation. If AutoPage is False, you must create the page field or fields.</param>
			<param name="ColumnGrand">Optional Object. True to show grand totals for columns in the report.</param>
			<param name="OptimizeCache">Optional Object. True to optimize the PivotTable cache when it's constructed. The default value is False.</param>
			<param name="SourceType">Optional Object. The source of the report data. Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType"></see>.constants.</param>
			<param name="SaveData">Optional Object. True to save data with the report. False to save only the report definition.</param>
			<param name="TableName">Optional Object. A string that specifies the name of the new report.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Prints the object.</summary>
			<param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
			<param name="Collate">Optional Object. True to collate multiple copies.</param>
			<param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
			<param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
			<param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
			<param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
			<param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
			<param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)">
			<summary>Shows a preview of the object as it would look when printed.</summary>
			<param name="EnableChanges">Optional Object. True to enable changes to the specified worksheet.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Protects a worksheet so that it cannot be modified.</summary>
			<param name="AllowInsertingColumns">Optional Object. True allows the user to insert columns on the protected worksheet. The default value is False.</param>
			<param name="Contents">Optional Object. True to protect contents. For a chart, this protects the entire chart. For a worksheet, this protects the locked cells. The default value is True.</param>
			<param name="AllowInsertingRows">Optional Object. True allows the user to insert rows on the protected worksheet. The default value is False.</param>
			<param name="Password">Optional Object. A string that specifies a case-sensitive password for the worksheet or workbook. If this argument is omitted, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook. If you forget the password, you cannot unprotect the worksheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</param>
			<param name="AllowFormattingCells">Optional Object. True allows the user to format any cell on a protected worksheet. The default value is False.</param>
			<param name="AllowFiltering">Optional Object. True allows the user to set filters on the protected worksheet. Users can change filter criteria but can not enable or disable an auto filter. Users can set filters on an existing auto filter. The default value is False.</param>
			<param name="DrawingObjects">Optional Object. True to protect shapes. The default value is False.</param>
			<param name="AllowSorting">Optional Object. True allows the user to sort on the protected worksheet. Every cell in the sort range must be unlocked or unprotected. The default value is False.</param>
			<param name="AllowDeletingRows">Optional Object. True allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked. The default value is False.</param>
			<param name="UserInterfaceOnly">Optional Object. True to protect the user interface but not macros. If this argument is omitted, protection applies both to macros and to the user interface.</param>
			<param name="AllowInsertingHyperlinks">Optional Object. True allows the user to insert hyperlinks on the worksheet. The default value is False.</param>
			<param name="AllowDeletingColumns">Optional Object. True allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked. The default value is False.</param>
			<param name="AllowFormattingColumns">Optional Object. True allows the user to format any column on a protected worksheet. The default value is False.</param>
			<param name="Scenarios">Optional Object. True to protect scenarios. This argument is valid only for worksheets. The default value is True.</param>
			<param name="AllowFormattingRows">Optional Object. True allows the user to format any row on a protected worksheet. The default value is False.</param>
			<param name="AllowUsingPivotTables">Optional Object. True allows the user to use pivot table reports on the protected worksheet. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Saves changes to the chart or worksheet in a different file.</summary>
			<param name="AddToMru">Optional Object. True to add this workbook to the list of recently used files. The default value is False.</param>
			<param name="CreateBackup">Optional Object. True to create a backup file.</param>
			<param name="Password">Optional Object. A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
			<param name="Filename">Optional Object. A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</param>
			<param name="FileFormat">Optional Object. The file format to use when you save the file. For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat"></see> property. For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
			<param name="WriteResPassword">Optional Object. A string that indicates the write-reservation password for this file. If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</param>
			<param name="TextCodepage">Optional Object. Not used in U.S. English Microsoft Excel.</param>
			<param name="TextVisualLayout">Optional Object. Not used in U.S. English Microsoft Excel.</param>
			<param name="ReadOnlyRecommended">Optional Object. True to display a message when the file is opened recommending that the file be opened as read-only.</param>
			<param name="Local">Optional Object. True saves files against the language of Microsoft Excel (including control panel settings). False (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)">
			<summary>Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario"></see> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios"></see> object) on the worksheet.</summary>
			<param name="Index">Optional Object. The name or number of the scenario. Use an array to specify more than one scenario.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. The object to replace.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)">
			<summary>Sets the background graphic for a worksheet or chart.</summary>
			<param name="Filename">Required String. The name of the graphic file.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)">
			<summary>Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</summary>
			<param name="Password">Optional Object. A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit this argument for a workbook that's protected with a password, the method fails.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents the cells mapped to a particular XPath. Returns Nothing if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</summary>
			<param name="Map">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see>. Specify an XML map if you want to query for the XPath within a specific map.</param>
			<param name="SelectionNamespaces">Optional Object. A space-delimited String that contains the namespaces referenced in the XPath parameter. A run-time error will be generated if one of the specified namespaces cannot be resolved.</param>
			<param name="XPath">Required Object. The XPath to query for.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents the cells mapped to a particular XPath. Returns Nothing if the specified XPath has not been mapped to the worksheet.</summary>
			<param name="Map">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see>. Specify an XML map if you want to query for the XPath within a specific map.</param>
			<param name="SelectionNamespaces">Optional Object. A space-delimited String that contains the namespaces referenced in the XPath parameter. A run-time error will be generated if one of the specified namespaces cannot be resolved.</param>
			<param name="XPath">Required Object. The XPath to query for.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents a cell or a range of cells.</summary>
			<param name="Cell1">Required Object. The name of the range. This must be an A1-style reference in the language of the macro. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). It can also include dollar signs, but they’re ignored. You can use a local defined name in any part of the range. If you use a name, the name is assumed to be in the language of the macro.</param>
			<param name="Cell2">Optional Object. The cell in the upper-left and lower-right corner of the range. Can be a Range object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AddIn">
			<summary>Represents a single add-in, either installed or not installed.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AddIns">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIn"></see> objects that represents all the add-ins available to Microsoft Excel, regardless of whether they’re installed. This list corresponds to the list of add-ins displayed in the Add-Ins dialog box (Tools menu).</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AddIns.Add(System.String,System.Object)">
			<summary>Adds a new add-in file to the list of add-ins. Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIn"></see> object.</summary>
			<param name="Filename">Required String. The name of the file that contains the add-in you want to add to the list in the add-in manager.</param>
			<param name="CopyFile">Optional Object. Ignored if the add-in file is on a hard disk. True to copy the add-in to your hard disk if the add-in is on a removable medium (a floppy disk or compact disc). False to have the add-in remain on the removable medium. If this argument is omitted, Microsoft Excel displays a dialog box and asks you to choose.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.AddIns._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.AddIns.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Adjustments">
			<summary>Contains a collection of adjustment values for the specified AutoShape, WordArt object, or connector.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Adjustments.Item(System.Int32)">
			<summary>Returns or sets the specified adjustment value.</summary>
			<param name="Index">Required Integer. The index number of the adjustment.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AllowEditRange">
			<summary>Represents the cells that can be edited on a protected worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AllowEditRange.ChangePassword(System.String)">
			<summary>Changes the password for a range that can be edited on a protected worksheet.</summary>
			<param name="Password">Required String. The new password.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AllowEditRange.Unprotect(System.Object)">
			<summary>Removes protection from a sheet or workbook.</summary>
			<param name="Password">Optional Object. A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit this argument for a workbook that's protected with a password, the method fails.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AllowEditRanges">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRange"></see> objects that represent the cells that can be edited on a protected worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AllowEditRanges.Add(System.String,Microsoft.Office.Interop.Excel.Range,System.Object)">
			<summary>Adds a range that can be edited on a protected worksheet.</summary>
			<param name="Password">Required <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object. The range allowed to be edited.</param>
			<param name="Range">Required String. The title of range.</param>
			<param name="Title">Optional Object. The password for the range.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.AllowEditRanges._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.AllowEditRanges.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.NewWorkbook(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetActivate(System.Object)">
			<param name="Sh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetCalculate(System.Object)">
			<param name="Sh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetDeactivate(System.Object)">
			<param name="Sh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WindowActivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WindowResize(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookActivate(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAddinInstall(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)">
			<param name="Map">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
			<param name="Result">internaluseonlyparam</param>
			<param name="Url">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)">
			<param name="Map">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
			<param name="Result">internaluseonlyparam</param>
			<param name="IsRefresh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforeClose(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforePrint(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforeSave(Microsoft.Office.Interop.Excel.Workbook,System.Boolean,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
			<param name="SaveAsUI">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)">
			<param name="Map">internaluseonlyparam</param>
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
			<param name="Url">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)">
			<param name="Map">internaluseonlyparam</param>
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
			<param name="Url">internaluseonlyparam</param>
			<param name="IsRefresh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookDeactivate(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookNewSheet(Microsoft.Office.Interop.Excel.Workbook,System.Object)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookOpen(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Wb">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Wb">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AppEvents.WorkbookSync(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Core.MsoSyncEventType)">
			<param name="SyncEventType">internaluseonlyparam</param>
			<param name="Wb">internaluseonlyparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_Event">
			<summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.Application"></see> object events.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.NewWorkbook">
			<summary>Occurs when a new workbook is created.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetActivate">
			<summary>Occurs when any sheet is activated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetBeforeDoubleClick">
			<summary>Occurs when any worksheet is double-clicked, before the default double-click action.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetBeforeRightClick">
			<summary>Occurs when any worksheet is right-clicked, before the default right-click action.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetCalculate">
			<summary>Occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetChange">
			<summary>Occurs when cells in any worksheet are changed by the user or by an external link.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetDeactivate">
			<summary>Occurs when any sheet is deactivated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetFollowHyperlink">
			<summary>Occurs when you click any hyperlink in Microsoft Excel.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableUpdate">
			<summary>Occurs after the sheet of the PivotTable report has been updated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetSelectionChange">
			<summary>Occurs when the selection changes on any worksheet (doesn't occur if the selection is on a chart sheet).</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowActivate">
			<summary>Occurs when any workbook window is activated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowDeactivate">
			<summary>Occurs when any workbook window is deactivated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowResize">
			<summary>Occurs when any workbook window is resized.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookActivate">
			<summary>Occurs when any workbook is activated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAddinInstall">
			<summary>Occurs when a workbook is installed as an add-in.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAddinUninstall">
			<summary>Occurs when any add-in workbook is uninstalled.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterXmlExport">
			<summary>Occurs after Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterXmlImport">
			<summary>Occurs after an existing XML data connection is refreshed or new XML data is imported into any open Microsoft Excel workbook.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeClose">
			<summary>Occurs immediately before any open workbook closes.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforePrint">
			<summary>Occurs before any open workbook is printed.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeSave">
			<summary>Occurs before any open workbook is saved.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlExport">
			<summary>Occurs before Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlImport">
			<summary>Occurs before an existing XML data connection is refreshed or new XML data is imported into any open Microsoft Excel workbook.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookDeactivate">
			<summary>Occurs when any open workbook is deactivated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookNewSheet">
			<summary>Occurs when a new sheet is created in any open workbook.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookOpen">
			<summary>Occurs when a workbook is opened.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookPivotTableCloseConnection">
			<summary>Occurs after a PivotTable report connection has been closed.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookPivotTableOpenConnection">
			<summary>Occurs after a PivotTable report connection has been opened.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookSync">
			<summary>Occurs when the local copy of a workbook that is part of a Document Workspace is synchronized with the copy on the server.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_NewWorkbookEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.NewWorkbook"></see> event. The NewWorkbook event occurs when a new workbook is created.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetActivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetActivate"></see> event. The SheetActivate event occurs when any sheet is activated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeDoubleClickEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetBeforeDoubleClick"></see> event. The SheetBeforeDoubleClick event occurs when any worksheet is double-clicked, before the default double-click action.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeRightClickEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetBeforeRightClick"></see> event. The SheetBeforeRightClick event occurs when any worksheet is right-clicked, before the default right-click action.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetCalculateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetCalculate"></see> event. The SheetCalculate event occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetChangeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetChange"></see> event. The SheetChange event occurs when cells in any worksheet are changed by the user or by an external link.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetDeactivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetDeactivate"></see> event. The SheetDeactivate event occurs when any sheet is deactivated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetFollowHyperlinkEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetFollowHyperlink"></see> event. The SheetFollowHyperlink event occurs when you click any hyperlink in Microsoft Excel.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableUpdateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetPivotTableUpdate"></see> event. The SheetPivotTableUpdate event occurs after the sheet of the PivotTable report has been updated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_SheetSelectionChangeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.SheetSelectionChange"></see> event. The SheetSelectionChange event occurs when the selection changes on any worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WindowActivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowActivate"></see> event. The WindowActivate event occurs when any workbook window is activated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WindowDeactivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowDeactivate"></see> event. The WindowDeactivate event occurs when any workbook window is deactivated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WindowResizeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WindowResize"></see> event. The WindowResize event occurs when any workbook window is resized.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookActivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookActivate"></see> event. The WorkbookActivate event occurs when any workbook is activated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinInstallEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAddinInstall"></see> event. The WorkbookAddinInstall event occurs when a workbook is installed as an add-in.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinUninstallEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAddinUninstall"></see> event. The WorkbookAddinUninstall event occurs when any add-in workbook is uninstalled.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlExportEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterXmlExport"></see> event. The WorkbookAfterXmlExport event occurs after Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlImportEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookAfterXmlImport"></see> event. The WorkbookAfterXmlImport event occurs after an existing XML data connection is refreshed, or new XML data is imported into any open Microsoft Excel workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeCloseEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeClose"></see> event. The WorkbookBeforeClose event occurs immediately before any open workbook closes.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforePrintEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforePrint"></see> event. The WorkbookBeforePrint event occurs before any open workbook is printed.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeSaveEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeSave"></see> event. The WorkbookBeforeSave event occurs before any open workbook is saved.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlExportEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlExport"></see> event. The WorkbookBeforeXmlExport event occurs before Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlImport"></see> event. The WorkbookBeforeXmlImport event occurs before an existing XML data connection is refreshed, or new XML data is imported into any open Microsoft Excel workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookDeactivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookDeactivate"></see> event. The WorkbookDeactivate event occurs when any open workbook is deactivated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewSheetEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookNewSheet"></see> event. The WorkbookNewSheet event occurs when a new sheet is created in any open workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookOpenEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookOpen"></see> event. The WorkbookOpen event occurs when a workbook is opened.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableCloseConnectionEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookPivotTableCloseConnection"></see> event. The WorkbookPivotTableCloseConnection event occurs after a PivotTable report connection has been closed.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableOpenConnectionEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookPivotTableOpenConnection"></see> event. The WorkbookPivotTableOpenConnection event occurs after a PivotTable report connection has been opened.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookSyncEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookSync"></see> event. The WorkbookSync event occurs when the local copy of a workbook that is part of a Document Workspace is synchronized with the copy on the server.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._Evaluate(System.Object)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Macro">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._Wait(System.Object)">
			<param name="Time">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_NewWorkbook(Microsoft.Office.Interop.Excel.AppEvents_NewWorkbookEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetActivate(Microsoft.Office.Interop.Excel.AppEvents_SheetActivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeDoubleClickEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeRightClickEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetCalculate(Microsoft.Office.Interop.Excel.AppEvents_SheetCalculateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetChange(Microsoft.Office.Interop.Excel.AppEvents_SheetChangeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetDeactivate(Microsoft.Office.Interop.Excel.AppEvents_SheetDeactivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.AppEvents_SheetFollowHyperlinkEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableUpdateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_SheetSelectionChange(Microsoft.Office.Interop.Excel.AppEvents_SheetSelectionChangeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WindowActivate(Microsoft.Office.Interop.Excel.AppEvents_WindowActivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WindowDeactivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WindowResize(Microsoft.Office.Interop.Excel.AppEvents_WindowResizeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookActivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookActivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAddinInstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinInstallEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinUninstallEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlExportEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlImportEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeCloseEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforePrint(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforePrintEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforeSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeSaveEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlExportEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookDeactivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookNewSheet(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewSheetEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookOpen(Microsoft.Office.Interop.Excel.AppEvents_WorkbookOpenEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableCloseConnectionEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableOpenConnectionEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.add_WorkbookSync(Microsoft.Office.Interop.Excel.AppEvents_WorkbookSyncEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.AddChartAutoFormat(System.Object,System.String,System.Object)">
			<param name="Chart">classclassparam</param>
			<param name="Name">classclassparam</param>
			<param name="Description">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.AddCustomList(System.Object,System.Object)">
			<param name="ListArray">classclassparam</param>
			<param name="ByRow">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CentimetersToPoints(System.Double)">
			<param name="Centimeters">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CheckAbort(System.Object)">
			<param name="KeepAbort">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.CheckSpelling(System.String,System.Object,System.Object)">
			<param name="Word">classclassparam</param>
			<param name="IgnoreUppercase">classclassparam</param>
			<param name="CustomDictionary">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)">
			<param name="Formula">classclassparam</param>
			<param name="FromReferenceStyle">classclassparam</param>
			<param name="ToReferenceStyle">classclassparam</param>
			<param name="ToAbsolute">classclassparam</param>
			<param name="RelativeTo">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDEExecute(System.Int32,System.String)">
			<param name="Channel">classclassparam</param>
			<param name="String">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDEInitiate(System.String,System.String)">
			<param name="Topic">classclassparam</param>
			<param name="App">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDEPoke(System.Int32,System.Object,System.Object)">
			<param name="Channel">classclassparam</param>
			<param name="Item">classclassparam</param>
			<param name="Data">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDERequest(System.Int32,System.String)">
			<param name="Channel">classclassparam</param>
			<param name="Item">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DDETerminate(System.Int32)">
			<param name="Channel">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DeleteChartAutoFormat(System.String)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DeleteCustomList(System.Int32)">
			<param name="ListNum">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.DisplayXMLSourcePane(System.Object)">
			<param name="XmlMap">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy1(System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg4">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg1">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy10(System.Object)">
			<param name="arg">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="p2">classclassparam</param>
			<param name="p1">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg8">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg1">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg13">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Dummy8(System.Object)">
			<param name="Arg1">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Evaluate(System.Object)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.ExecuteExcel4Macro(System.String)">
			<param name="String">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetCustomListContents(System.Int32)">
			<param name="ListNum">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetCustomListNum(System.Object)">
			<param name="ListArray">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="FileFilter">classclassparam</param>
			<param name="ButtonText">classclassparam</param>
			<param name="FilterIndex">classclassparam</param>
			<param name="Title">classclassparam</param>
			<param name="MultiSelect">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetPhonetic(System.Object)">
			<param name="Text">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="InitialFilename">classclassparam</param>
			<param name="FileFilter">classclassparam</param>
			<param name="ButtonText">classclassparam</param>
			<param name="FilterIndex">classclassparam</param>
			<param name="Title">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Goto(System.Object,System.Object)">
			<param name="Scroll">classclassparam</param>
			<param name="Reference">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Help(System.Object,System.Object)">
			<param name="HelpFile">classclassparam</param>
			<param name="HelpContextID">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.InchesToPoints(System.Double)">
			<param name="Inches">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Prompt">classclassparam</param>
			<param name="Title">classclassparam</param>
			<param name="Default">classclassparam</param>
			<param name="HelpFile">classclassparam</param>
			<param name="Left">classclassparam</param>
			<param name="HelpContextID">classclassparam</param>
			<param name="Type">classclassparam</param>
			<param name="Top">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="ShortcutKey">classclassparam</param>
			<param name="StatusBar">classclassparam</param>
			<param name="MenuText">classclassparam</param>
			<param name="HelpContextID">classclassparam</param>
			<param name="Category">classclassparam</param>
			<param name="HelpFile">classclassparam</param>
			<param name="HasMenu">classclassparam</param>
			<param name="HasShortcutKey">classclassparam</param>
			<param name="Macro">classclassparam</param>
			<param name="Description">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.MailLogon(System.Object,System.Object,System.Object)">
			<param name="DownloadNewMail">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.OnKey(System.String,System.Object)">
			<param name="Procedure">classclassparam</param>
			<param name="Key">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.OnRepeat(System.String,System.String)">
			<param name="Procedure">classclassparam</param>
			<param name="Text">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.OnTime(System.Object,System.String,System.Object,System.Object)">
			<param name="Procedure">classclassparam</param>
			<param name="Schedule">classclassparam</param>
			<param name="EarliestTime">classclassparam</param>
			<param name="LatestTime">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.OnUndo(System.String,System.String)">
			<param name="Procedure">classclassparam</param>
			<param name="Text">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.RecordMacro(System.Object,System.Object)">
			<param name="BasicCode">classclassparam</param>
			<param name="XlmCode">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.RegisterXLL(System.String)">
			<param name="Filename">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_NewWorkbook(Microsoft.Office.Interop.Excel.AppEvents_NewWorkbookEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetActivate(Microsoft.Office.Interop.Excel.AppEvents_SheetActivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetBeforeDoubleClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeDoubleClickEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetBeforeRightClick(Microsoft.Office.Interop.Excel.AppEvents_SheetBeforeRightClickEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetCalculate(Microsoft.Office.Interop.Excel.AppEvents_SheetCalculateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetChange(Microsoft.Office.Interop.Excel.AppEvents_SheetChangeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetDeactivate(Microsoft.Office.Interop.Excel.AppEvents_SheetDeactivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetFollowHyperlink(Microsoft.Office.Interop.Excel.AppEvents_SheetFollowHyperlinkEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetPivotTableUpdate(Microsoft.Office.Interop.Excel.AppEvents_SheetPivotTableUpdateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_SheetSelectionChange(Microsoft.Office.Interop.Excel.AppEvents_SheetSelectionChangeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WindowActivate(Microsoft.Office.Interop.Excel.AppEvents_WindowActivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WindowDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WindowDeactivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WindowResize(Microsoft.Office.Interop.Excel.AppEvents_WindowResizeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookActivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookActivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAddinInstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinInstallEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAddinUninstallEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlExportEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookAfterXmlImportEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforeClose(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeCloseEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforePrint(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforePrintEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforeSave(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeSaveEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlExportEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookDeactivate(Microsoft.Office.Interop.Excel.AppEvents_WorkbookDeactivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookNewSheet(Microsoft.Office.Interop.Excel.AppEvents_WorkbookNewSheetEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookOpen(Microsoft.Office.Interop.Excel.AppEvents_WorkbookOpenEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableCloseConnectionEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.AppEvents_WorkbookPivotTableOpenConnectionEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.remove_WorkbookSync(Microsoft.Office.Interop.Excel.AppEvents_WorkbookSyncEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Macro">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Save(System.Object)">
			<param name="Filename">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.SaveWorkspace(System.Object)">
			<param name="Filename">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.SendKeys(System.Object,System.Object)">
			<param name="Wait">classclassparam</param>
			<param name="Keys">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.SetDefaultChart(System.Object,System.Object)">
			<param name="Gallery">classclassparam</param>
			<param name="FormatName">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Support(System.Object,System.Int32,System.Object)">
			<param name="Object">classclassparam</param>
			<param name="arg">classclassparam</param>
			<param name="ID">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Volatile(System.Object)">
			<param name="Volatile">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ApplicationClass.Wait(System.Object)">
			<param name="Time">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Caller(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ClipboardFormats(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileConverters(System.Object,System.Object)">
			<param name="Index1">classclassparam</param>
			<param name="Index2">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.FileDialog(Microsoft.Office.Core.MsoFileDialogType)">
			<param name="fileDialogType">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.International(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.PreviousSelections(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.Range(System.Object,System.Object)">
			<param name="Cell1">classclassparam</param>
			<param name="Cell2">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.RegisteredFunctions(System.Object,System.Object)">
			<param name="Index1">classclassparam</param>
			<param name="Index2">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ApplicationClass.ShortcutMenus(System.Int32)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Arc.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Arc.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Arc.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Arc.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Arcs.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Y2">hiddenmemberparam</param>
			<param name="X2">hiddenmemberparam</param>
			<param name="X1">hiddenmemberparam</param>
			<param name="Y1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Arcs.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Arcs.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Arcs.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Arcs.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Arcs.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Areas">
			<summary>A collection of the areas, or contiguous blocks of cells, within a selection.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Areas._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Areas.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AutoCorrect">
			<summary>Contains Microsoft Excel AutoCorrect attributes (capitalization of names of days, correction of two initial capital letters, automatic correction list, and so on).</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AutoCorrect.AddReplacement(System.String,System.String)">
			<summary>Adds an entry to the array of AutoCorrect replacements.</summary>
			<param name="Replacement">Required String. The replacement text.</param>
			<param name="What">Required String. The text to be replaced. If this string already exists in the array of AutoCorrect replacements, the existing substitute text is replaced by the new text.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.AutoCorrect.DeleteReplacement(System.String)">
			<summary>Deletes an entry from the array of AutoCorrect replacements.</summary>
			<param name="What">Required String. The text to be replaced, as it appears in the row to be deleted from the array of AutoCorrect replacements. If this string doesn't exist in the array of AutoCorrect replacements, this method fails.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.AutoCorrect.ReplacementList(System.Object)">
			<summary>Returns the array of AutoCorrect replacements.</summary>
			<param name="Index">Optional Object. The row index of the array of AutoCorrect replacements to be returned. The row is returned as a one-dimensional array with two elements: The first element is the text in column 1, and the second element is the text in column 2.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AutoFilter">
			<summary>Represents autofiltering for the specified worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AutoRecover">
			<summary>Represents the automatic recovery features of a workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Axes">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Axis"></see> objects in the specified chart.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Axes.Item(Microsoft.Office.Interop.Excel.XlAxisType,Microsoft.Office.Interop.Excel.XlAxisGroup)">
			<summary>Returns a single <see cref="T:Microsoft.Office.Interop.Excel.Axis"></see> object from an <see cref="T:Microsoft.Office.Interop.Excel.Axes"></see> collection.</summary>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType"></see>. The axis type.XlAxisType can be one of these constants:xlCategory.xlSeriesAxis Valid only for 3-D charts.xlValue.</param>
			<param name="AxisGroup">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup"></see>. The axis.XlAxisGroup can be one of these constants:xlPrimary DefaultxlSecondary</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Axis">
			<summary>Represents a single axis in a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.AxisTitle">
			<summary>Represents a chart axis title.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.AxisTitle.Characters(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters"></see> object that represents a range of characters within the object text. You can use the Characters object to format characters within a text string.</summary>
			<param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the Start character).</param>
			<param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Border">
			<summary>Represents the border of an object.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Borders">
			<summary>A collection of four <see cref="T:Microsoft.Office.Interop.Excel.Border"></see> objects that represent the four borders of a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> or <see cref="T:Microsoft.Office.Interop.Excel.Style"></see> object.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Borders._Default(Microsoft.Office.Interop.Excel.XlBordersIndex)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Borders.Item(Microsoft.Office.Interop.Excel.XlBordersIndex)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border"></see> object that represents one of the borders of either a range of cells or a style.</summary>
			<param name="Index">Required <see cref="T:Microsoft.Office.Interop.Excel.XlBordersIndex"></see>.Can be one of these XlBordersIndex constants:xlDiagonalDownxlDiagonalUpxlEdgeBottomxlEdgeLeftxlEdgeRightxlEdgeTopxlInsideHorizontalxlInsideVertical</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Button.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Button.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Button.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Button.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Buttons.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Buttons.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Buttons.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Buttons.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Buttons.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Buttons.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CalculatedFields">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> objects that represents all the calculated fields in the specified PivotTable report.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalculatedFields._Add(System.String,System.String)">
			<param name="Formula">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalculatedFields.Add(System.String,System.String,System.Object)">
			<summary>Creates a new calculated field. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object.</summary>
			<param name="Formula">Required String. The formula for the field.</param>
			<param name="UseStandardFormula">Optional Object. False (default) for upward compatibility. True for strings contained in any arguments that are field names (will be interpreted as having been formatted in standard U.S. English instead of local settings).</param>
			<param name="Name">Required String. The name of the field.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalculatedFields.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CalculatedFields._Default(System.Object)">
			<param name="Field">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CalculatedItems">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> objects that represent all the calculated items in the specified PivotTable report.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalculatedItems._Add(System.String,System.String)">
			<param name="Formula">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalculatedItems.Add(System.String,System.String,System.Object)">
			<summary>Creates a new calculated item. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> object.</summary>
			<param name="Formula">Required String. The formula for the item.</param>
			<param name="UseStandardFormula">Optional Object. False (default) for upward compatibility. True for strings contained in any arguments that are item names (will be interpreted as having been formatted in standard U.S. English instead of local settings).</param>
			<param name="Name">Required String. The name of the item.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalculatedItems.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CalculatedItems._Default(System.Object)">
			<param name="Field">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CalculatedMember">
			<summary>Represents the calculated fields and calculated items for PivotTables with Online Analytical Processing (OLAP) data sources.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CalculatedMembers">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember"></see> objects on the specified PivotTable. Each CalculatedMember object represents a calculated member or calculated measure.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)">
			<summary>Adds a calculated field or calculated item to a PivotTable.</summary>
			<param name="Formula">Required String. The formula of the calculated member.</param>
			<param name="Name">Required String. The name of the calculated member.</param>
			<param name="Type">Optional Object. The type of calculated member.</param>
			<param name="SolveOrder">Optional Object. The solve order for the calculated member.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CalculatedMembers._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CalloutFormat">
			<summary>Contains properties and methods that apply to line callouts.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)">
			<summary>Sets the vertical distance (in points) from the edge of the text bounding box to the place where the callout line attaches to the text box.</summary>
			<param name="Drop">Required Single. The drop distance, in points.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomLength(System.Single)">
			<summary>Specifies that the first segment of the callout line (the segment attached to the text callout box) retains a fixed length whenever the callout is moved.</summary>
			<param name="Length">Required Single. The length of the first segment of the callout in points.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CalloutFormat.PresetDrop(Microsoft.Office.Core.MsoCalloutDropType)">
			<summary>Specifies whether the callout line attaches to the top, bottom, or center of the callout text box or whether it attaches at a point that’s a specified distance from the top or bottom of the text box.</summary>
			<param name="DropType">Required <see cref="T:Microsoft.Office.Interop.Office.MsoCalloutDropType"></see>. The starting position of the callout line relative to the text bounding box. Can be one of these MsoCalloutDropType constants:msoCalloutDropBottommsoCalloutDropCentermsoCalloutDropCustom Specifying msoCalloutDropCustom for this argument will cause your code to fail.msoCalloutDropMixedmsoCalloutDropTop</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CellFormat">
			<summary>Represents the search criteria for the cell format.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Characters">
			<summary>Represents characters in an object that contains text. The Characters object lets you modify any sequence of characters contained in the full text string.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Characters.Insert(System.String)">
			<summary>Inserts a string preceding the selected characters.</summary>
			<param name="String">Required String. The string to insert.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Chart">
			<summary>Represents a chart in a workbook. The chart can be either an embedded chart (contained in a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject"></see>) or a separate chart sheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartArea">
			<summary>Represents the chart area of a chart. The chart area on a 2-D chart contains the axes, the chart title, the axis titles, and the legend. The chart area on a 3-D chart contains the chart title and the legend; it doesn’t include the plot area (the area within the chart area where the data is plotted). For information about formatting the plot area, see the <see cref="T:Microsoft.Office.Interop.Excel.PlotArea"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
			<param name="HasLeaderLines">classclassparam</param>
			<param name="LegendKey">classclassparam</param>
			<param name="Type">classclassparam</param>
			<param name="AutoText">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass._Evaluate(System.Object)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">classclassparam</param>
			<param name="Collate">classclassparam</param>
			<param name="To">classclassparam</param>
			<param name="PrintToFile">classclassparam</param>
			<param name="Copies">classclassparam</param>
			<param name="ActivePrinter">classclassparam</param>
			<param name="From">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="DrawingObjects">classclassparam</param>
			<param name="UserInterfaceOnly">classclassparam</param>
			<param name="Scenarios">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">classclassparam</param>
			<param name="CreateBackup">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Filename">classclassparam</param>
			<param name="FileFormat">classclassparam</param>
			<param name="WriteResPassword">classclassparam</param>
			<param name="TextCodepage">classclassparam</param>
			<param name="TextVisualLayout">classclassparam</param>
			<param name="ReadOnlyRecommended">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Activate(Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_BeforeDoubleClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_BeforeRightClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Calculate(Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Deactivate(Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_DragOver(Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_DragPlot(Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_MouseDown(Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_MouseMove(Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_MouseUp(Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Resize(Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_Select(Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.add_SeriesChange(Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)">
			<param name="TypeName">classclassparam</param>
			<param name="ChartType">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="ShowValue">classclassparam</param>
			<param name="ShowBubbleSize">classclassparam</param>
			<param name="Separator">classclassparam</param>
			<param name="HasLeaderLines">classclassparam</param>
			<param name="LegendKey">classclassparam</param>
			<param name="ShowPercentage">classclassparam</param>
			<param name="ShowSeriesName">classclassparam</param>
			<param name="Type">classclassparam</param>
			<param name="ShowCategoryName">classclassparam</param>
			<param name="AutoText">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Arcs(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.AreaGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.AutoFormat(System.Int32,System.Object)">
			<param name="Format">classclassparam</param>
			<param name="Gallery">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)">
			<param name="Type">classclassparam</param>
			<param name="AxisGroup">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.BarGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Buttons(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.ChartGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.ChartObjects(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="HasLegend">classclassparam</param>
			<param name="SeriesLabels">classclassparam</param>
			<param name="Format">classclassparam</param>
			<param name="Gallery">classclassparam</param>
			<param name="CategoryLabels">classclassparam</param>
			<param name="ExtraTitle">classclassparam</param>
			<param name="Source">classclassparam</param>
			<param name="Title">classclassparam</param>
			<param name="ValueTitle">classclassparam</param>
			<param name="PlotBy">classclassparam</param>
			<param name="CategoryTitle">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.CheckBoxes(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">classclassparam</param>
			<param name="CustomDictionary">classclassparam</param>
			<param name="SpellLang">classclassparam</param>
			<param name="AlwaysSuggest">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.ColumnGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Copy(System.Object,System.Object)">
			<param name="Before">classclassparam</param>
			<param name="After">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)">
			<param name="Format">classclassparam</param>
			<param name="Appearance">classclassparam</param>
			<param name="Size">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
			<param name="ContainsRTF">classclassparam</param>
			<param name="ContainsPICT">classclassparam</param>
			<param name="Edition">classclassparam</param>
			<param name="Appearance">classclassparam</param>
			<param name="Size">classclassparam</param>
			<param name="ContainsVALU">classclassparam</param>
			<param name="ContainsBIFF">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.DoughnutGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.DrawingObjects(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Drawings(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.DropDowns(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Evaluate(System.Object)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Export(System.String,System.Object,System.Object)">
			<param name="Filename">classclassparam</param>
			<param name="Interactive">classclassparam</param>
			<param name="FilterName">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
			<param name="Arg2">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="x">classclassparam</param>
			<param name="y">classclassparam</param>
			<param name="ElementID">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.GroupBoxes(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.GroupObjects(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Labels(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.LineGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Lines(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.ListBoxes(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)">
			<param name="Where">classclassparam</param>
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Move(System.Object,System.Object)">
			<param name="Before">classclassparam</param>
			<param name="After">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.OLEObjects(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.OptionButtons(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Ovals(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Paste(System.Object)">
			<param name="Type">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Pictures(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.PieGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">classclassparam</param>
			<param name="Collate">classclassparam</param>
			<param name="PrToFileName">classclassparam</param>
			<param name="To">classclassparam</param>
			<param name="PrintToFile">classclassparam</param>
			<param name="Copies">classclassparam</param>
			<param name="ActivePrinter">classclassparam</param>
			<param name="From">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.PrintPreview(System.Object)">
			<param name="EnableChanges">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="DrawingObjects">classclassparam</param>
			<param name="UserInterfaceOnly">classclassparam</param>
			<param name="Scenarios">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.RadarGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Rectangles(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Activate(Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_BeforeDoubleClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_BeforeRightClick(Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Calculate(Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Deactivate(Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_DragOver(Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_DragPlot(Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_MouseDown(Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_MouseMove(Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_MouseUp(Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Resize(Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_Select(Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.remove_SeriesChange(Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">classclassparam</param>
			<param name="CreateBackup">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Filename">classclassparam</param>
			<param name="FileFormat">classclassparam</param>
			<param name="WriteResPassword">classclassparam</param>
			<param name="TextCodepage">classclassparam</param>
			<param name="TextVisualLayout">classclassparam</param>
			<param name="ReadOnlyRecommended">classclassparam</param>
			<param name="Local">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.ScrollBars(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Select(System.Object)">
			<param name="Replace">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.SeriesCollection(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.SetBackgroundPicture(System.String)">
			<param name="Filename">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)">
			<param name="Source">classclassparam</param>
			<param name="PlotBy">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Spinners(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.TextBoxes(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.Unprotect(System.Object)">
			<param name="Password">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartClass.XYGroups(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ChartClass.HasAxis(System.Object,System.Object)">
			<param name="Index1">classclassparam</param>
			<param name="Index2">classclassparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartColorFormat">
			<summary>Used only with charts. Represents the color of a one-color object or the foreground or background color of an object with a gradient or patterned fill.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartEvents.BeforeDoubleClick(System.Int32,System.Int32,System.Int32,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Arg2">internaluseonlyparam</param>
			<param name="Arg1">internaluseonlyparam</param>
			<param name="ElementID">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartEvents.BeforeRightClick(System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartEvents.MouseDown(System.Int32,System.Int32,System.Int32,System.Int32)">
			<param name="x">internaluseonlyparam</param>
			<param name="y">internaluseonlyparam</param>
			<param name="Shift">internaluseonlyparam</param>
			<param name="Button">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartEvents.MouseMove(System.Int32,System.Int32,System.Int32,System.Int32)">
			<param name="x">internaluseonlyparam</param>
			<param name="y">internaluseonlyparam</param>
			<param name="Shift">internaluseonlyparam</param>
			<param name="Button">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartEvents.MouseUp(System.Int32,System.Int32,System.Int32,System.Int32)">
			<param name="x">internaluseonlyparam</param>
			<param name="y">internaluseonlyparam</param>
			<param name="Shift">internaluseonlyparam</param>
			<param name="Button">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartEvents.Select(System.Int32,System.Int32,System.Int32)">
			<param name="Arg2">internaluseonlyparam</param>
			<param name="Arg1">internaluseonlyparam</param>
			<param name="ElementID">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartEvents.SeriesChange(System.Int32,System.Int32)">
			<param name="PointIndex">internaluseonlyparam</param>
			<param name="SeriesIndex">internaluseonlyparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Activate"></see> event. The Activate event occurs when a chart sheet or embedded chart is activated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.BeforeDoubleClick"></see> event. The BeforeDoubleClick event occurs when an embedded chart is double-clicked, before the default double-click action.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.BeforeRightClick"></see> event. The BeforeRightClick event occurs when an embedded chart is right-clicked, before the default right-click action.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Calculate"></see> event. The Calculate event occurs after the chart plots new or changed data.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Deactivate"></see> event. The Deactivate event occurs when the chart is deactivated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.DragOver"></see> event. The DragOver event occurs when a range of cells is dragged over a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.DragPlot"></see> event. The DragPlot event occurs when a range of cells is dragged and dropped on a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_Event">
			<summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.Chart"></see> object events.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Activate">
			<summary>Occurs when a chart sheet or embedded chart is activated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.BeforeDoubleClick">
			<summary>Occurs when an embedded chart is double-clicked, before the default double-click action.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.BeforeRightClick">
			<summary>Occurs when an embedded chart is right-clicked, before the default right-click action.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Calculate">
			<summary>Occurs after the chart plots new or changed data.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Deactivate">
			<summary>Occurs when the chart is deactivated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.DragOver">
			<summary>Occurs when a range of cells is dragged over a chart.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.DragPlot">
			<summary>Occurs when a range of cells is dragged and dropped on a chart.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseDown">
			<summary>Occurs when a mouse button is pressed while the pointer is over a chart.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseMove">
			<summary>Occurs when the position of the mouse pointer changes over a chart.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseUp">
			<summary>Occurs when a mouse button is released while the pointer is over a chart.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Resize">
			<summary>Occurs when the chart is resized.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Select">
			<summary>Occurs when a chart element is selected.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.SeriesChange">
			<summary>Occurs when the user changes the value of a chart data point.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseDown"></see> event. The MouseDown event occurs when a mouse button is pressed while the pointer is over a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseMove"></see> event. The MouseMove event occurs when the position of the mouse pointer changes over a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.MouseUp"></see> event. The MouseUp event occurs when a mouse button is released while the pointer is over a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Resize"></see> event. The Resize event occurs when the chart is resized.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.Select"></see> event. The Select event occurs when a chart element is selected.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.ChartEvents_Event.SeriesChange"></see> event. The SeriesChange event occurs when the user changes the value of a chart data point.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartFillFormat">
			<summary>Used only with charts. Represents fill formatting for chart elements.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.OneColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,System.Single)">
			<summary>Sets the specified fill to a one-color gradient.</summary>
			<param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle"></see>.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
			<param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If GradientStyle is msoGradientFromCenter, the Variant argument can only be 1 or 2.</param>
			<param name="Degree">Required Single. The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.Patterned(Microsoft.Office.Core.MsoPatternType)">
			<summary>Sets the specified fill to a pattern.</summary>
			<param name="Pattern">Required <see cref="T:Microsoft.Office.Core.MsoPatternType"></see>.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.PresetGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,Microsoft.Office.Core.MsoPresetGradientType)">
			<summary>Sets the specified fill to a preset gradient.</summary>
			<param name="PresetGradientType">Required <see cref="T:Microsoft.Office.Core.MsoPresetGradientType"></see>.</param>
			<param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle"></see>.Can be one of the following MsoGradientStyle constants.msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
			<param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If GradientStyle is msoGradientFromCenter, the Variant argument can only be 1 or 2.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.PresetTextured(Microsoft.Office.Core.MsoPresetTexture)">
			<summary>Sets the specified fill format to a preset texture.</summary>
			<param name="PresetTexture">Required <see cref="T:Microsoft.Office.Core.MsoPresetTexture"></see>.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.TwoColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32)">
			<summary>Sets the specified fill to a two-color gradient.</summary>
			<param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle"></see>.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
			<param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If Style is msoGradientFromCenter, the Variant argument can only be 1 or 2.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.UserPicture(System.Object,System.Object,System.Object,System.Object)">
			<summary>Fills the specified shape with an image.</summary>
			<param name="PicturePlacement">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartPicturePlacement"></see>.Can be one of the following XlChartPicturePlacement constants:xlAllFacesxlEndxlEndSidesxlFrontxlFrontEndxlFrontSidesxlSides</param>
			<param name="PictureFormat">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType"></see>.Can be one of the following XlChartPictureType constants:xlStackxlStackScalexlStretch</param>
			<param name="PictureStackUnit">Optional Integer. The picture stack or scale unit (depends on the PictureFormat argument).</param>
			<param name="PictureFile">Required Object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartFillFormat.UserTextured(System.String)">
			<summary>Fills the specified shape with small tiles of an image.</summary>
			<param name="TextureFile">Required String. The name of the picture file.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartGroup">
			<summary>Represents one or more series plotted in a chart with the same format. The ChartGroup object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups"></see> collection.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartGroup.SeriesCollection(System.Object)">
			<summary>Returns an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series"></see> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection"></see> collection) in the chart or chart group.</summary>
			<param name="Index">Optional Object. The name or number of the series.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartGroups">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup"></see> objects in the specified chart.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartGroups.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartObject">
			<summary>Represents an embedded chart on a worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<summary>Copies the selected object to the Clipboard as a picture.</summary>
			<param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat"></see>. The format of the picture.</param>
			<param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance"></see>. Specifies how the picture should be copied.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartObject.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartObjects">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ChartObject"></see> objects on the specified chart sheet, dialog sheet, or worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Add(System.Double,System.Double,System.Double,System.Double)">
			<summary>Creates a new embedded chart. Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject"></see> object.</summary>
			<param name="Width">Required Double. The initial size of the new object in points.</param>
			<param name="Height">Required Double. The initial size of the new object in points.</param>
			<param name="Left">Required Double. The initial coordinates of the new object (in points), relative to the upper-left corner of cell A1 on a worksheet or to the upper-left corner of a chart.</param>
			<param name="Top">Required Double. The initial coordinates of the new object (in points), relative to the upper-left corner of cell A1 on a worksheet or to the upper-left corner of a chart.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<summary>Copies the selected object to the Clipboard as a picture.</summary>
			<param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat"></see>. The format of the picture.</param>
			<param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance"></see>. Specifies how the picture should be copied.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ChartObjects.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Charts">
			<summary>A collection of all the chart sheets in the specified or active workbook. Each chart sheet is represented by a <see cref="T:Microsoft.Office.Interop.Excel.Chart"></see> object. This doesn’t include charts embedded on worksheets or dialog sheets. For information about embedded charts, see the <see cref="T:Microsoft.Office.Interop.Excel.ChartObject"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Charts._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Charts.Add(System.Object,System.Object,System.Object)">
			<summary>Creates a new chart sheet. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart"></see> object.</summary>
			<param name="Before">Optional Object. An object that specifies the sheet before which the new sheet is added.</param>
			<param name="Count">Optional Object. The number of sheets to be added. The default value is 1.</param>
			<param name="After">Optional Object. An object that specifies the sheet after which the new sheet is added.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Charts.Copy(System.Object,System.Object)">
			<summary>Copies the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Charts.Move(System.Object,System.Object)">
			<summary>Moves the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Charts.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Prints the object.</summary>
			<param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
			<param name="Collate">Optional Object. True to collate multiple copies.</param>
			<param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
			<param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
			<param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
			<param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
			<param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
			<param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Charts.PrintPreview(System.Object)">
			<summary>Shows a preview of the object as it would look when printed.</summary>
			<param name="EnableChanges">Optional Object. True to enable changes to the specified charts.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Charts.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. The object to replace.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Charts._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Charts.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ChartTitle">
			<summary>Represents the chart title.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ChartTitle.Characters(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters"></see> object that represents a range of characters within the object text. You can use the Characters object to format characters within a text string.</summary>
			<param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the Start character).</param>
			<param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CheckBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CheckBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CheckBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CheckBox.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CheckBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CheckBoxes.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ColorFormat">
			<summary>Represents the color of a one-color object, the foreground or background color of an object with a gradient or patterned fill, or the pointer color.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Comment">
			<summary>Represents a cell comment.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Comment.Text(System.Object,System.Object,System.Object)">
			<summary>Sets comment text.</summary>
			<param name="Text">Optional Object. The text to be added.</param>
			<param name="Start">Optional Object. The character number where the added text will be placed. If this argument is omitted, any existing text in the comment is deleted.</param>
			<param name="Overwrite">Optional Object. True to overwrite the existing text. The default value is False (text is inserted).</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Comments">
			<summary>A collection of cell comments. Each comment is represented by a <see cref="T:Microsoft.Office.Interop.Excel.Comment"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Comments.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Comments._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ConnectorFormat">
			<summary>Contains properties and methods that apply to connectors.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)">
			<summary>Attaches the beginning of the specified connector to a specified shape.</summary>
			<param name="ConnectionSite">Required Integer. A connection site on the shape specified by ConnectedShape. Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount"></see> property of the specified shape. If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections"></see> method after the connector is attached to shapes at both ends.</param>
			<param name="ConnectedShape">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object. The shape to attach the beginning of the connector to. The specified Shape object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes"></see> collection as the connector.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)">
			<summary>Attaches the end of the specified connector to a specified shape.</summary>
			<param name="ConnectionSite">Required Integer. A connection site on the shape specified by ConnectedShape. Must be an integer between 1 and the integer returned by the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount"></see> property of the specified shape. If you want the connector to automatically find the shortest path between the two shapes it connects, specify any valid integer for this argument and then use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections"></see> method after the connector is attached to shapes at both ends.</param>
			<param name="ConnectedShape">Required <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object. The shape to attach the end of the connector to. The specified Shape object must be in the same <see cref="T:Microsoft.Office.Interop.Excel.Shapes"></see> collection as the connector.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Constants">
			<summary>Specifies global constants used in Microsoft Excel.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xl3DBar">
			<summary>-4099</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xl3DEffects1">
			<summary>13</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xl3DEffects2">
			<summary>14</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xl3DSurface">
			<summary>-4103</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAbove">
			<summary>0</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAccounting1">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAccounting2">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAccounting3">
			<summary>6</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAccounting4">
			<summary>17</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAdd">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAll">
			<summary>-4104</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAllExceptBorders">
			<summary>7</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlAutomatic">
			<summary>-4105</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlBar">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlBelow">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlBidi">
			<summary>-5000</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlBidiCalendar">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlBoth">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlBottom">
			<summary>-4107</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCascade">
			<summary>7</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCenter">
			<summary>-4108</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCenterAcrossSelection">
			<summary>7</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlChart4">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlChartSeries">
			<summary>17</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlChartShort">
			<summary>6</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlChartTitles">
			<summary>18</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlChecker">
			<summary>9</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCircle">
			<summary>8</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlClassic1">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlClassic2">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlClassic3">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlClosed">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlColor1">
			<summary>7</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlColor2">
			<summary>8</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlColor3">
			<summary>9</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlColumn">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCombination">
			<summary>-4111</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlComplete">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlConstants">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlContents">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlContext">
			<summary>-5002</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCorner">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCrissCross">
			<summary>16</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCross">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlCustom">
			<summary>-4114</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDebugCodePane">
			<summary>13</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDefaultAutoFormat">
			<summary>-1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDesktop">
			<summary>9</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDiamond">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDirect">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDistributed">
			<summary>-4117</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDivide">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDoubleAccounting">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDoubleClosed">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDoubleOpen">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDoubleQuote">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlDrawingObject">
			<summary>14</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlEntireChart">
			<summary>20</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlExcelMenus">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlExtended">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlFill">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlFirst">
			<summary>0</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlFixedValue">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlFloating">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlFormats">
			<summary>-4122</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlFormula">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlFullScript">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGeneral">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray16">
			<summary>17</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray25">
			<summary>-4124</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray50">
			<summary>-4125</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray75">
			<summary>-4126</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGray8">
			<summary>18</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGregorian">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGrid">
			<summary>15</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlGridline">
			<summary>22</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlHigh">
			<summary>-4127</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlHindiNumerals">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlIcons">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlImmediatePane">
			<summary>12</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlInside">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlInteger">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlJustify">
			<summary>-4130</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLast">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLastCell">
			<summary>11</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLatin">
			<summary>-5001</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLeft">
			<summary>-4131</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLeftToRight">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLightDown">
			<summary>13</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLightHorizontal">
			<summary>11</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLightUp">
			<summary>14</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLightVertical">
			<summary>12</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlList1">
			<summary>10</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlList2">
			<summary>11</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlList3">
			<summary>12</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLocalFormat1">
			<summary>15</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLocalFormat2">
			<summary>16</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLogicalCursor">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLong">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLotusHelp">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLow">
			<summary>-4134</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlLTR">
			<summary>-5003</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlMacrosheetCell">
			<summary>7</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlManual">
			<summary>-4135</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlMaximum">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlMinimum">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlMinusValues">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlMixed">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlMixedAuthorizedScript">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlMixedScript">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlModule">
			<summary>-4141</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlMultiply">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlNarrow">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlNextToAxis">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlNoDocuments">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlNone">
			<summary>-4142</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlNotes">
			<summary>-4144</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlOff">
			<summary>-4146</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlOn">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlOpaque">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlOpen">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlOutside">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlPartial">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlPartialScript">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlPercent">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlPlus">
			<summary>9</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlPlusValues">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlReference">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlRight">
			<summary>-4152</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlRTL">
			<summary>-5004</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlScale">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSemiautomatic">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSemiGray75">
			<summary>10</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlShort">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlShowLabel">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlShowLabelAndPercent">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlShowPercent">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlShowValue">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSimple">
			<summary>-4154</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSingle">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSingleAccounting">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSingleQuote">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSolid">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSquare">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlStar">
			<summary>5</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlStError">
			<summary>4</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlStrict">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSubtract">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlSystem">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlTextBox">
			<summary>16</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlTiled">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlTitleBar">
			<summary>8</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlToolbar">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlToolbarButton">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlTop">
			<summary>-4160</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlTopToBottom">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlTransparent">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlTriangle">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlVeryHidden">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlVisible">
			<summary>12</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlVisualCursor">
			<summary>2</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlWatchPane">
			<summary>11</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlWide">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlWorkbookTab">
			<summary>6</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlWorksheet4">
			<summary>1</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlWorksheetCell">
			<summary>3</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.Constants.xlWorksheetShort">
			<summary>5</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ControlFormat">
			<summary>Contains Microsoft Excel control properties.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ControlFormat.AddItem(System.String,System.Object)">
			<summary>Adds an item to a list box or a combo box.</summary>
			<param name="Text">Required String. The text to be added</param>
			<param name="Index">Optional Object. The position of the new entry. If the list has fewer entries than the specified index, blank items from the end of the list are added to the specified position. If this argument is omitted, the item is appended to the existing list.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ControlFormat.RemoveItem(System.Int32,System.Object)">
			<summary>Removes one or more items from a list box or combo box.</summary>
			<param name="Count">Optional Object. The number of items to be removed, starting at item Index. If this argument is omitted, one item is removed. If Index + Count exceeds the number of items in the list, all items from Index through the end of the list are removed without an error.</param>
			<param name="Index">Required Integer. The number of the first item to be removed. Valid values are from 1 to the number of items in the list (returned by the <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListCount"></see> property).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ControlFormat.List(System.Object)">
			<summary>Returns or sets the text entries in the specified list box or a combo box, as an array of strings, or returns or sets a single text entry. An error occurs if there are no entries in the list.</summary>
			<param name="Index">Optional Object. The index number of a single text entry to be set or returned. If this argument is omitted, the entire list is returned or set as an array of strings.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Corners">
			<summary>Represents the corners of a 3-D chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CubeField">
			<summary>Represents a hierarchy or measure field from an OLAP cube.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CubeField.AddMemberPropertyField(System.String,System.Object)">
			<summary>Adds a member property field to the display for the cube field.</summary>
			<param name="PropertyOrder">Optional Object. Sets the <see cref="P:Microsoft.Office.Interop.Excel.PivotField.PropertyOrder"></see> property value for a <see cref="T:Microsoft.Office.Interop.Excel.CubeField"></see> object. The actual position in the collection will be immediately before the PivotTable field that currently has the same PropertyOrder value that is given in the argument. If no field has the given property order value, the range of acceptable values is from 1 to the number of member properties already showing for the hierarchy plus one. This argument is one-based. If omitted, the property goes to the end of the list.</param>
			<param name="Property">Required String. The unique name of the member property. For balanced hierarchies, a unique name can be created by appending the "quoted" member property name to the unique name of the level the member property is associated with. For unbalanced hierarchies, a unique name can be created by appending the "quoted" member property name to the unique name of the hierarchy.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CubeFields">
			<summary>A collection of all <see cref="T:Microsoft.Office.Interop.Excel.CubeField"></see> objects in a PivotTable report that is based on an OLAP cube.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CubeFields.AddSet(System.String,System.String)">
			<summary>Adds a new <see cref="T:Microsoft.Office.Interop.Excel.CubeField"></see> object to the <see cref="T:Microsoft.Office.Interop.Excel.CubeFields"></see> collection.</summary>
			<param name="Caption">Required String. A string representing the field that will be displayed in the PivotTable view.</param>
			<param name="Name">Required String. A valid name in the SETS schema rowset.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CubeFields._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CubeFields.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CustomProperties">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.CustomProperty"></see> objects that represent additional information. The information can be used as metadata for XML.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CustomProperties.Add(System.String,System.Object)">
			<summary>Adds custom property information. Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperty"></see> object.</summary>
			<param name="Value">Required Object. The value of the custom property.</param>
			<param name="Name">Required String. The name of the custom property.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CustomProperties._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CustomProperties.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CustomProperty">
			<summary>Represents identifier information. Identifier information can be used as metadata for XML.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CustomView">
			<summary>Represents a custom workbook view.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.CustomViews">
			<summary>A collection of custom workbook views. Each view is represented by a <see cref="T:Microsoft.Office.Interop.Excel.CustomView"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CustomViews.Add(System.String,System.Object,System.Object)">
			<summary>Creates a new custom view. Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomView"></see> object that represents the new view.</summary>
			<param name="PrintSettings">Optional Object. True to include print settings in the custom view.</param>
			<param name="ViewName">Required String. The name of the new view.</param>
			<param name="RowColSettings">Optional Object. True to include settings for hidden rows and columns (including filter information) in the custom view.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.CustomViews.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="ViewName">Required Object. The name or index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.CustomViews._Default(System.Object)">
			<param name="ViewName">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DataLabel">
			<summary>Represents the data label on a chart point or trendline.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DataLabel.Characters(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters"></see> object that represents a range of characters within the object text. You can use the Characters object to format characters within a text string.</summary>
			<param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the Start character).</param>
			<param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DataLabels">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.DataLabel"></see> objects for the specified series. Each DataLabel object represents a data label for a point or trendline. For a series without definable points (such as an area series), the DataLabels collection contains a single data label.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DataLabels.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DataTable">
			<summary>Represents a chart data table.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DefaultWebOptions">
			<summary>Contains global application-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Diagram">
			<summary>Represents a diagram.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Diagram.Convert(Microsoft.Office.Core.MsoDiagramType)">
			<summary>Converts the current diagram to a different diagram.</summary>
			<param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoDiagramType"></see>. The type of diagram to convert to.MsoDiagramType can be one of these constants. msoDiagramCycle A process diagram with a continuous cycle diagram type.msoDiagramMixed A mixed diagram type.msoDiagramOrgChart A hierarchical relationship diagram type.msoDiagramPyramid A foundation based relationships diagram type.msoDiagramRadial A diagram type showing relationships of a core element.msoDiagramTarget A diagram type showing steps toward a goal.msoDiagramVenn A diagram type showing areas of overlap between elements.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Diagram.FitText">
			<summary>Adjusts the size of the text in the nodes in a diagram to fit within the boundaries of the nodes.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DiagramNode">
			<summary>Represents a node in a diagram.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)">
			<summary>Creates a diagram node. Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> object that represents the new node.</summary>
			<param name="pos">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton"></see>. Where the node will be added, relative to another node.MsoRelativeNodePosition can be one of these constants:msoAfterLastSiblingmsoAfterNode DefaultmsoBeforeFirstSiblingmsoBeforeNode</param>
			<param name="nodeType">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType"></see>. The type of node. Can be one of these MsoDiagramNodeType constants:msoDiagramAssistantmsoDiagramNode Default</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)">
			<summary>Clones a diagram node. Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> object representing the cloned node.</summary>
			<param name="pTargetNode">Required DiagramNode object. An expression that returns a DiagramNode object that represents the node where the new node will be placed.</param>
			<param name="pos">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton"></see>. If pTargetNode is specified, indicates where the node will be added relative to pTargetNode.MsoRelativeNodePosition can be one of these constants:msoAfterLastSiblingmsoAfterNode DefaultmsoBeforeFirstSiblingmsoBeforeNode</param>
			<param name="copyChildren">Required Boolean. True to clone the diagram node's children as well.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNode.MoveNode(Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)">
			<summary>Moves a diagram node and any of its child nodes within a diagram.</summary>
			<param name="pTargetNode">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> object. The diagram node where the specified node will be moved.</param>
			<param name="pos">Required <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton"></see>. The position to move the node, relative to TargetNode.MsoRelativeNodePosition can be one of these constants:msoAfterLastSiblingmsoAfterNodemsoBeforeFirstSiblingmsoBeforeNode</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNode.ReplaceNode(Microsoft.Office.Interop.Excel.DiagramNode)">
			<summary>Replaces a target diagram node with the source diagram node.</summary>
			<param name="pTargetNode">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> object. The target diagram node to be replaced.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNode.SwapNode(Microsoft.Office.Interop.Excel.DiagramNode,System.Boolean)">
			<summary>Swaps the source diagram node with a target diagram node.</summary>
			<param name="pTargetNode">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> object. The target diagram node to be replaced.</param>
			<param name="swapChildren">Optional Boolean. The child nodes of the target and source nodes being swapped. Any child diagram nodes are moved along with their corresponding root nodes. Default is True, which swaps the child nodes.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNode.TransferChildren(Microsoft.Office.Interop.Excel.DiagramNode)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object representing the shape of the text box associated with a diagram node.</summary>
			<param name="pReceivingNode">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> object. The diagram node receiving the child nodes being transferred from the specified node.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> objects that represents child nodes in a diagram.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.AddNode(System.Object,Microsoft.Office.Core.MsoDiagramNodeType)">
			<summary>Creates a diagram node. Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> object that represents the new node.</summary>
			<param name="Index">Optional Object. The position of the node.</param>
			<param name="nodeType">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType"></see>. The type of node.MsoDiagramNodeType can be one of these constants:msoDiagramAssistantmsoDiagramNode Default</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DiagramNodes">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode"></see> objects that represents all the nodes in a diagram.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNodes.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DiagramNodes.SelectAll">
			<summary>Selects all the shapes in the specified collection.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Dialog">
			<summary>Represents a built-in Microsoft Excel dialog box.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Dialog.Show(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Displays the built-in dialog box and waits for the user to input data.</summary>
			<param name="Arg28">Optional Object. The initial arguments for the command.</param>
			<param name="Arg29">Optional Object. The initial arguments for the command.</param>
			<param name="Arg24">Optional Object. The initial arguments for the command.</param>
			<param name="Arg25">Optional Object. The initial arguments for the command.</param>
			<param name="Arg26">Optional Object. The initial arguments for the command.</param>
			<param name="Arg27">Optional Object. The initial arguments for the command.</param>
			<param name="Arg20">Optional Object. The initial arguments for the command.</param>
			<param name="Arg21">Optional Object. The initial arguments for the command.</param>
			<param name="Arg22">Optional Object. The initial arguments for the command.</param>
			<param name="Arg23">Optional Object. The initial arguments for the command.</param>
			<param name="Arg30">Optional Object. The initial arguments for the command.</param>
			<param name="Arg8">Optional Object. The initial arguments for the command.</param>
			<param name="Arg9">Optional Object. The initial arguments for the command.</param>
			<param name="Arg6">Optional Object. The initial arguments for the command.</param>
			<param name="Arg7">Optional Object. The initial arguments for the command.</param>
			<param name="Arg4">Optional Object. The initial arguments for the command.</param>
			<param name="Arg5">Optional Object. The initial arguments for the command.</param>
			<param name="Arg2">Optional Object. The initial arguments for the command.</param>
			<param name="Arg3">Optional Object. The initial arguments for the command.</param>
			<param name="Arg14">Optional Object. The initial arguments for the command.</param>
			<param name="Arg1">Optional Object. The initial arguments for the command.</param>
			<param name="Arg12">Optional Object. The initial arguments for the command.</param>
			<param name="Arg11">Optional Object. The initial arguments for the command.</param>
			<param name="Arg10">Optional Object. The initial arguments for the command.</param>
			<param name="Arg16">Optional Object. The initial arguments for the command.</param>
			<param name="Arg15">Optional Object. The initial arguments for the command.</param>
			<param name="Arg13">Optional Object. The initial arguments for the command.</param>
			<param name="Arg19">Optional Object. The initial arguments for the command.</param>
			<param name="Arg18">Optional Object. The initial arguments for the command.</param>
			<param name="Arg17">Optional Object. The initial arguments for the command.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogFrame.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogFrame.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogFrame.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DialogFrame.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Dialogs">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Dialog"></see> objects in Microsoft Excel.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Dialogs._Default(Microsoft.Office.Interop.Excel.XlBuiltInDialog)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Dialogs.Item(Microsoft.Office.Interop.Excel.XlBuiltInDialog)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="SpellScript">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="IgnoreFinalYaa">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">hiddenmemberparam</param>
			<param name="DisplayAsIcon">hiddenmemberparam</param>
			<param name="Format">hiddenmemberparam</param>
			<param name="IconFileName">hiddenmemberparam</param>
			<param name="Link">hiddenmemberparam</param>
			<param name="IconIndex">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Arcs(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Buttons(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ChartObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.CheckBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.DrawingObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Drawings(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.DropDowns(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.EditBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.GroupBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.GroupObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Hide(System.Object)">
			<param name="Cancel">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Labels(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Lines(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ListBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.OLEObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.OptionButtons(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Ovals(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Paste(System.Object,System.Object)">
			<param name="Link">hiddenmemberparam</param>
			<param name="Destination">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">hiddenmemberparam</param>
			<param name="DisplayAsIcon">hiddenmemberparam</param>
			<param name="Format">hiddenmemberparam</param>
			<param name="IconFileName">hiddenmemberparam</param>
			<param name="Link">hiddenmemberparam</param>
			<param name="NoHTMLFormatting">hiddenmemberparam</param>
			<param name="IconIndex">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Pictures(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.PrintPreview(System.Object)">
			<param name="EnableChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AllowInsertingColumns">hiddenmemberparam</param>
			<param name="Contents">hiddenmemberparam</param>
			<param name="AllowInsertingRows">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="AllowFormattingCells">hiddenmemberparam</param>
			<param name="AllowFiltering">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="AllowSorting">hiddenmemberparam</param>
			<param name="AllowDeletingRows">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="AllowInsertingHyperlinks">hiddenmemberparam</param>
			<param name="AllowDeletingColumns">hiddenmemberparam</param>
			<param name="AllowFormattingColumns">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
			<param name="AllowFormattingRows">hiddenmemberparam</param>
			<param name="AllowUsingPivotTables">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Rectangles(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
			<param name="Local">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.ScrollBars(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Spinners(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.TextBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheet.Unprotect(System.Object)">
			<param name="Password">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Add(System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Count">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheets.PrintPreview(System.Object)">
			<param name="EnableChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DialogSheets.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DialogSheets._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DialogSheets.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DisplayUnitLabel">
			<summary>Represents a unit label on an axis in the specified chart.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DisplayUnitLabel.Characters(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters"></see> object that represents a range of characters within the object text. You can use the Characters object to format characters within a text string.</summary>
			<param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the Start character).</param>
			<param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DocEvents.BeforeDoubleClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DocEvents.BeforeRightClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DocEvents.Change(Microsoft.Office.Interop.Excel.Range)">
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DocEvents.FollowHyperlink(Microsoft.Office.Interop.Excel.Hyperlink)">
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DocEvents.PivotTableUpdate(Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DocEvents.SelectionChange(Microsoft.Office.Interop.Excel.Range)">
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Activate"></see> event. The Activate event occurs when a worksheet is activated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.BeforeDoubleClick"></see> event. The BeforeDoubleClick event occurs when a worksheet is double-clicked, before the default double-click action.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.BeforeRightClick"></see> event. The BeforeRightClick event occurs when a worksheet is right-clicked, before the default right-click action.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Calculate"></see> event. The Calculate event occurs after the worksheet is recalculated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Change"></see> event. The Change event occurs when cells on the worksheet are changed by the user or by an external link.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Deactivate"></see> event. The Deactivate event occurs when the worksheet is deactivated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_Event">
			<summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.Worksheet"></see> object events.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Activate">
			<summary>Occurs when a worksheet is activated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.BeforeDoubleClick">
			<summary>Occurs when a worksheet is double-clicked, before the default double-click action.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.BeforeRightClick">
			<summary>Occurs when a worksheet is right-clicked, before the default right-click action.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Calculate">
			<summary>Occurs after the worksheet is recalculated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Change">
			<summary>Occurs when cells on the worksheet are changed by the user or by an external link.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.Deactivate">
			<summary>Occurs when the worksheet is deactivated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.FollowHyperlink">
			<summary>Occurs when you click any hyperlink on a worksheet. For application- and workbook-level events, see the SheetFollowHyperlink event.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableUpdate">
			<summary>Occurs after a PivotTable report is updated on a worksheet.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.DocEvents_Event.SelectionChange">
			<summary>Occurs when the selection changes on a worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.FollowHyperlink"></see> event. The FollowHyperlink event occurs when you click any hyperlink on a worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.PivotTableUpdate"></see> event. The PivotTableUpdate event occurs after a PivotTable report is updated on a worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.DocEvents_Event.SelectionChange"></see> event. The SelectionChange event occurs when the selection changes on a worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DownBars">
			<summary>Represents the down bars in a chart group.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawing.AddVertex(System.Double,System.Double)">
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawing.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawing.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawing.Reshape(System.Int32,System.Boolean,System.Object,System.Object)">
			<param name="Insert">hiddenmemberparam</param>
			<param name="Vertex">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawing.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Drawing.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Drawing.Vertices(System.Object,System.Object)">
			<param name="Index1">hiddenmemberparam</param>
			<param name="Index2">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.LinkCombo(System.Object)">
			<param name="Link">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Reshape(System.Int32,System.Object,System.Object,System.Object)">
			<param name="Insert">hiddenmemberparam</param>
			<param name="Vertex">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DrawingObjects.Vertices(System.Object,System.Object)">
			<param name="Index1">hiddenmemberparam</param>
			<param name="Index2">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DrawingObjects.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawings.Add(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
			<param name="Y2">hiddenmemberparam</param>
			<param name="Closed">hiddenmemberparam</param>
			<param name="X2">hiddenmemberparam</param>
			<param name="X1">hiddenmemberparam</param>
			<param name="Y1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawings.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawings.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawings.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawings.Reshape(System.Int32,System.Boolean,System.Object,System.Object)">
			<param name="Insert">hiddenmemberparam</param>
			<param name="Vertex">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Drawings.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Drawings.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDown.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDown.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDown.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDown.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DropDown.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DropDown.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DropDown.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDowns.Add(System.Double,System.Double,System.Double,System.Double,System.Object)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Editable">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDowns.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDowns.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDowns.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDowns.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.DropDowns.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DropDowns.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DropDowns.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.DropDowns.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.DropLines">
			<summary>Represents the drop lines in a chart group.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.EditBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.EditBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.EditBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.EditBox.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.EditBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.EditBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.EditBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.EditBoxes.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Error">
			<summary>Represents a spreadsheet error for a range.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ErrorBars">
			<summary>Represents the error bars on a chart series.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions">
			<summary>Represents the error-checking options for an application.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Errors">
			<summary>Represents the various spreadsheet errors for a range.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Errors._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Errors.Item(System.Object)">
			<summary>Returns a single member of the <see cref="T:Microsoft.Office.Interop.Excel.Error"></see> object.</summary>
			<param name="Index">Required Object. The Index can also be one of these constants:xlEvaluateToError The cell evaluates to an error value.xlTextDate The cell contains a text date with 2 digit years.xlNumberAsText The cell contains a number stored as text.xlInconsistentFormula The cell contains an inconsistent formula for a region.xlOmittedCells The cell contains a formula omitting a cell for a region.xlUnlockedFormulaCells The cell which is unlocked contains a formula.xlEmptyCellReferences The cell contains a formula referring to empty cells.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.FillFormat">
			<summary>Represents fill formatting for a shape.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FillFormat.OneColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,System.Single)">
			<summary>Sets the specified fill to a one-color gradient.</summary>
			<param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle"></see>.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
			<param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If GradientStyle is msoGradientFromCenter, the Variant argument can only be 1 or 2.</param>
			<param name="Degree">Required Single. The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FillFormat.Patterned(Microsoft.Office.Core.MsoPatternType)">
			<summary>Sets the specified fill to a pattern.</summary>
			<param name="Pattern">Required <see cref="T:Microsoft.Office.Core.MsoPatternType"></see>.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FillFormat.PresetGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,Microsoft.Office.Core.MsoPresetGradientType)">
			<summary>Sets the specified fill to a preset gradient.</summary>
			<param name="PresetGradientType">Required <see cref="T:Microsoft.Office.Core.MsoPresetGradientType"></see>.</param>
			<param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle"></see>.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
			<param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If GradientStyle is msoGradientFromCenter, the Variant argument can only be 1 or 2.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FillFormat.PresetTextured(Microsoft.Office.Core.MsoPresetTexture)">
			<summary>Sets the specified fill format to a preset texture.</summary>
			<param name="PresetTexture">Required <see cref="T:Microsoft.Office.Core.MsoPresetTexture"></see>.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FillFormat.TwoColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32)">
			<summary>Sets the specified fill to a two-color gradient.</summary>
			<param name="Style">Required <see cref="T:Microsoft.Office.Core.MsoGradientStyle"></see>.Can be one of the following MsoGradientStyle constants:msoGradientDiagonalDownmsoGradientDiagonalUpmsoGradientFromCentermsoGradientFromCornermsoGradientFromTitlemsoGradientHorizontalmsoGradientMixedmsoGradientVertical</param>
			<param name="Variant">Required Integer. The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If Style is msoGradientFromCenter, the Variant argument can only be 1 or 2.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FillFormat.UserPicture(System.String)">
			<summary>Fills the specified shape with an image.</summary>
			<param name="PictureFile">Required String. The name of the picture file.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FillFormat.UserTextured(System.String)">
			<summary>Fills the specified shape with small tiles of an image.</summary>
			<param name="TextureFile">Required String. The name of the picture file.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Filter">
			<summary>Represents a filter for a single column. The Filter object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Filters"></see> collection. The Filters collection contains all the filters in an autofiltered range.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Filters">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.Filter"></see> objects that represents all the filters in an autofiltered range.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Filters._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Filters.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Floor">
			<summary>Represents the floor of a 3-D chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Font">
			<summary>Contains the font attributes (font name, font size, color, and so on) for an object.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.FormatCondition">
			<summary>Represents a conditional format.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)">
			<summary>Modifies an existing conditional format.</summary>
			<param name="Formula1">Optional Object. The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
			<param name="Formula2">Optional Object. The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
			<param name="Operator">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator"></see>. The conditional format operator. Can be one of the following XlFormatConditionOperator constants:xlBetweenxlEqualxlGreaterxlGreaterEqualxlLessxlLessEqualxlNotBetweenxlNotEqualIf Type, is xlExpression, the Operator argument is ignored.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType"></see>. Specifies whether the conditional format is based on a cell value or an expression. Can be one of the following XlFormatCondition constants:xlCellValuexlExpression</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.FormatConditions">
			<summary>Represents the collection of conditional formats for a single range.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)">
			<summary>Adds a new conditional format. Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatCondition"></see> object that represents the new conditional format.</summary>
			<param name="Formula1">Optional Object. The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
			<param name="Formula2">Optional Object. The value or expression associated with the second part of the conditional format when Operator is xlBetween or xlNotBetween (otherwise, this argument is ignored). Can be a constant value, a string value, a cell reference, or a formula.</param>
			<param name="Operator">Optional Object. The conditional format operator. Can be one of the following XlFormatConditionOperator constants: xlBetween, xlEqual, xlGreater, xlGreaterEqual, xlLess, xlLessEqual, xlNotBetween, or xlNotEqual. If Type is xlExpression, the Operator argument is ignored.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType"></see>. Specifies whether the conditional format is based on a cell value or an expression. Can be one of the following XlFormatConditionType constants:xlCellValue The conditional format is based on a cell value.xlExpression The conditional format is based on an expression.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FormatConditions.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.FormatConditions._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.FreeformBuilder">
			<summary>Represents the geometry of a freeform while it’s being built.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)">
			<summary>Adds a node to a freeform.</summary>
			<param name="Y2">Optional Object.If the EditingType of the new segment is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the second control point for the new segment.If the EditingType of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
			<param name="SegmentType">Required <see cref="T:Microsoft.Office.Interop.Office.MsoSegmentType"></see>. The type of segment to be added.MsoSegmentType can be one of these constants:msoSegmentLinemsoSegmentCurve</param>
			<param name="EditingType">Required <see cref="T:Microsoft.Office.Interop.Office.MsoEditingType"></see>. The editing property of the vertex.MsoEditingType can be one of these constants:msoEditingAutomsoEditingCornerCannot be msoEditingSmooth or msoEditingSymmetric.If SegmentType is msoSegmentLine, EditingType must be msoEditingAuto.</param>
			<param name="X2">Optional Object.If the EditingType of the new segment is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the second control point for the new segment.If the EditingType of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
			<param name="X3">Optional Object.If the EditingType of the new segment is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the EditingType of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
			<param name="Y3">Optional Object.If the EditingType of the new segment is msoEditingCorner, this argument specifies the vertical distance (in points) from the upper-left corner of the document to the end point of the new segment.If the EditingType of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
			<param name="X1">Required Single.If the EditingType of the new segment is msoEditingAuto, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the EditingType of the new node is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the first control point for the new segment.</param>
			<param name="Y1">Required Single.If the EditingType of the new segment is msoEditingAuto, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the end point of the new segment.If the EditingType of the new node is msoEditingCorner, this argument specifies the horizontal distance (in points) from the upper-left corner of the document to the first control point for the new segment.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass._Evaluate(System.Object)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Macro">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDEExecute(System.Int32,System.String)">
			<param name="Channel">classclassparam</param>
			<param name="String">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDEInitiate(System.String,System.String)">
			<param name="Topic">classclassparam</param>
			<param name="App">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDEPoke(System.Int32,System.Object,System.Object)">
			<param name="Channel">classclassparam</param>
			<param name="Item">classclassparam</param>
			<param name="Data">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDERequest(System.Int32,System.String)">
			<param name="Channel">classclassparam</param>
			<param name="Item">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.DDETerminate(System.Int32)">
			<param name="Channel">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Evaluate(System.Object)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.ExecuteExcel4Macro(System.String)">
			<param name="String">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Macro">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.SendKeys(System.Object,System.Object)">
			<param name="Wait">classclassparam</param>
			<param name="Keys">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GlobalClass.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">classclassparam</param>
			<param name="Arg29">classclassparam</param>
			<param name="Arg24">classclassparam</param>
			<param name="Arg25">classclassparam</param>
			<param name="Arg26">classclassparam</param>
			<param name="Arg27">classclassparam</param>
			<param name="Arg20">classclassparam</param>
			<param name="Arg21">classclassparam</param>
			<param name="Arg22">classclassparam</param>
			<param name="Arg23">classclassparam</param>
			<param name="Arg30">classclassparam</param>
			<param name="Arg8">classclassparam</param>
			<param name="Arg9">classclassparam</param>
			<param name="Arg6">classclassparam</param>
			<param name="Arg7">classclassparam</param>
			<param name="Arg4">classclassparam</param>
			<param name="Arg5">classclassparam</param>
			<param name="Arg2">classclassparam</param>
			<param name="Arg3">classclassparam</param>
			<param name="Arg14">classclassparam</param>
			<param name="Arg1">classclassparam</param>
			<param name="Arg12">classclassparam</param>
			<param name="Arg11">classclassparam</param>
			<param name="Arg10">classclassparam</param>
			<param name="Arg16">classclassparam</param>
			<param name="Arg15">classclassparam</param>
			<param name="Arg13">classclassparam</param>
			<param name="Arg19">classclassparam</param>
			<param name="Arg18">classclassparam</param>
			<param name="Arg17">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.GlobalClass.Range(System.Object,System.Object)">
			<param name="Cell1">classclassparam</param>
			<param name="Cell2">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.GlobalClass.ShortcutMenus(System.Int32)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Graphic">
			<summary>Contains properties that apply to header and footer picture objects.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Gridlines">
			<summary>Represents major or minor gridlines on a chart axis.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.GroupBox.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.GroupBoxes.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupObject.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupObject.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupObjects.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupObjects.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.GroupShapes">
			<summary>Represents the individual shapes within a grouped shape.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupShapes._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.GroupShapes.Range(System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange"></see> object that represents a subset of the shapes in a <see cref="T:Microsoft.Office.Interop.Excel.Shapes"></see> collection.</summary>
			<param name="Index">Required Object. The individual shapes to be included in the range. Can be an integer that specifies the index number of the shape, a string that specifies the name of the shape, or an array that contains either integers or strings.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.HiLoLines">
			<summary>Represents the high-low lines in a chart group.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.HPageBreak">
			<summary>Represents a horizontal page break.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.HPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)">
			<summary>Drags a page break out of the print area.</summary>
			<param name="RegionIndex">Required Integer. The print-area region index for the page break (the region where the mouse pointer is located when the mouse button is pressed if the user drags the page break). If the print area is contiguous, there’s only one print region. If the print area is noncontiguous, there’s more than one print region.</param>
			<param name="Direction">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection"></see>. The direction in which the page break is dragged. XlDirection can be one of these constants:xlDownxlToRightxlToLeftxlUp</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.HPageBreaks">
			<summary>The collection of horizontal page breaks within the print area. Each horizontal page break is represented by an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreak"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.HPageBreaks.Add(System.Object)">
			<summary>Adds a horizontal page break. Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreak"></see> object.</summary>
			<param name="Before">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object. The range above which the new page break will be added.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.HPageBreaks._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.HPageBreaks.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Hyperlink">
			<summary>Represents a hyperlink.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Hyperlink.AddToFavorites">
			<summary>Adds a shortcut to the workbook or hyperlink to the Favorites folder.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Hyperlink.CreateNewDocument(System.String,System.Boolean,System.Boolean)">
			<summary>Creates a new document linked to the specified hyperlink.</summary>
			<param name="EditNow">Required Boolean. True to have the specified document open immediately in its associated editing environment. The default value is True.</param>
			<param name="Filename">Required String. The file name of the specified document.</param>
			<param name="Overwrite">Required Boolean. True to overwrite any existing file of the same name in the same folder. False if any existing file of the same name is preserved and the Filename argument specifies a new file name. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Hyperlink.Follow(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Displays a cached document if it’s already been downloaded. Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</summary>
			<param name="ExtraInfo">Optional Object. A String or byte array that specifies additional information for HTTP to use to resolve the hyperlink. For example, you can use ExtraInfo to specify the coordinates of an image map, the contents of a form, or a FAT file name.</param>
			<param name="NewWindow">Optional Object. True to display the target application in a new window. The default value is False.</param>
			<param name="AddHistory">Optional Object. Not used. Reserved for future use.</param>
			<param name="HeaderInfo">Optional Object. A String that specifies header information for the HTTP request. The default value is an empty string.</param>
			<param name="Method">Optional Object. Specifies the way ExtraInfo is attached. Can be one of the following <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod"></see> constants.ConstantDescriptionmsoMethodGetExtraInfo is a String that’s appended to the address.msoMethodPostExtraInfo is posted as a String or byte array.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Hyperlinks">
			<summary>Represents the collection of hyperlinks for a worksheet or range. Each hyperlink is represented by a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Hyperlinks.Add(System.Object,System.String,System.Object,System.Object,System.Object)">
			<summary>Adds a hyperlink to the specified range or shape. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink"></see> object.</summary>
			<param name="SubAddress">Optional Object. The subaddress of the hyperlink.</param>
			<param name="Address">Required String. The address of the hyperlink.</param>
			<param name="Anchor">Required Object. The anchor for the hyperlink. Can be either a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> or <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object.</param>
			<param name="ScreenTip">Optional Object. The screen tip to be displayed when the mouse pointer is paused over the hyperlink.</param>
			<param name="TextToDisplay">Optional Object. The text to be displayed for the hyperlink.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Hyperlinks.Delete">
			<summary>Deletes the object.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Hyperlinks._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Hyperlinks.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAddIns.Add(System.String,System.Object)">
			<param name="Filename">hiddenmemberparam</param>
			<param name="CopyFile">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IAddIns._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IAddIns.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAllowEditRange.ChangePassword(System.String)">
			<param name="Password">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAllowEditRange.Unprotect(System.Object)">
			<param name="Password">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAllowEditRanges.Add(System.String,Microsoft.Office.Interop.Excel.Range,System.Object)">
			<param name="Password">hiddenmemberparam</param>
			<param name="Range">hiddenmemberparam</param>
			<param name="Title">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IAllowEditRanges._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IAllowEditRanges.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.NewWorkbook(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetActivate(System.Object)">
			<param name="Sh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetCalculate(System.Object)">
			<param name="Sh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetDeactivate(System.Object)">
			<param name="Sh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WindowActivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WindowResize(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookActivate(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAddinInstall(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAddinUninstall(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAfterXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
			<param name="Result">hiddenmemberparam</param>
			<param name="Url">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookAfterXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
			<param name="Result">hiddenmemberparam</param>
			<param name="IsRefresh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforeClose(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforePrint(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforeSave(Microsoft.Office.Interop.Excel.Workbook,System.Boolean,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
			<param name="SaveAsUI">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforeXmlExport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
			<param name="Url">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookBeforeXmlImport(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
			<param name="Url">hiddenmemberparam</param>
			<param name="IsRefresh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookDeactivate(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookNewSheet(Microsoft.Office.Interop.Excel.Workbook,System.Object)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookOpen(Microsoft.Office.Interop.Excel.Workbook)">
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookPivotTableCloseConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Wb">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookPivotTableOpenConnection(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Wb">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAppEvents.WorkbookSync(Microsoft.Office.Interop.Excel.Workbook,Microsoft.Office.Core.MsoSyncEventType)">
			<param name="SyncEventType">hiddenmemberparam</param>
			<param name="Wb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IArc.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IArc.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IArc.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IArc.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IArcs.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Y2">hiddenmemberparam</param>
			<param name="X2">hiddenmemberparam</param>
			<param name="X1">hiddenmemberparam</param>
			<param name="Y1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IArcs.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IArcs.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IArcs.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IArcs.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IArcs.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IAreas._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IAreas.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAutoCorrect.AddReplacement(System.String,System.String)">
			<param name="Replacement">hiddenmemberparam</param>
			<param name="What">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAutoCorrect.DeleteReplacement(System.String)">
			<param name="What">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IAutoCorrect.ReplacementList(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IAxes.Item(Microsoft.Office.Interop.Excel.XlAxisType,Microsoft.Office.Interop.Excel.XlAxisGroup)">
			<param name="Type">hiddenmemberparam</param>
			<param name="AxisGroup">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IAxisTitle.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IBorders._Default(Microsoft.Office.Interop.Excel.XlBordersIndex)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IBorders.Item(Microsoft.Office.Interop.Excel.XlBordersIndex)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IButton.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IButton.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IButton.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IButton.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IButtons.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IButtons.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IButtons.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IButtons.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IButtons.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IButtons.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICalculatedFields._Add(System.String,System.String)">
			<param name="Formula">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICalculatedFields.Add(System.String,System.String,System.Object)">
			<param name="Formula">hiddenmemberparam</param>
			<param name="UseStandardFormula">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICalculatedFields.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICalculatedFields._Default(System.Object)">
			<param name="Field">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICalculatedItems._Add(System.String,System.String)">
			<param name="Formula">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICalculatedItems.Add(System.String,System.String,System.Object)">
			<param name="Formula">hiddenmemberparam</param>
			<param name="UseStandardFormula">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICalculatedItems.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICalculatedItems._Default(System.Object)">
			<param name="Field">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICalculatedMembers.Add(System.String,System.String,System.Object,System.Object)">
			<param name="Formula">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="SolveOrder">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICalculatedMembers._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICalculatedMembers.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICharacters.Insert(System.String)">
			<param name="String">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartEvents.BeforeDoubleClick(System.Int32,System.Int32,System.Int32,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="ElementID">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartEvents.BeforeRightClick(System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartEvents.MouseDown(System.Int32,System.Int32,System.Int32,System.Int32)">
			<param name="x">hiddenmemberparam</param>
			<param name="y">hiddenmemberparam</param>
			<param name="Shift">hiddenmemberparam</param>
			<param name="Button">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartEvents.MouseMove(System.Int32,System.Int32,System.Int32,System.Int32)">
			<param name="x">hiddenmemberparam</param>
			<param name="y">hiddenmemberparam</param>
			<param name="Shift">hiddenmemberparam</param>
			<param name="Button">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartEvents.MouseUp(System.Int32,System.Int32,System.Int32,System.Int32)">
			<param name="x">hiddenmemberparam</param>
			<param name="y">hiddenmemberparam</param>
			<param name="Shift">hiddenmemberparam</param>
			<param name="Button">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartEvents.Select(System.Int32,System.Int32,System.Int32)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="ElementID">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartEvents.SeriesChange(System.Int32,System.Int32)">
			<param name="PointIndex">hiddenmemberparam</param>
			<param name="SeriesIndex">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.OneColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,System.Single)">
			<param name="Style">hiddenmemberparam</param>
			<param name="Variant">hiddenmemberparam</param>
			<param name="Degree">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.Patterned(Microsoft.Office.Core.MsoPatternType)">
			<param name="Pattern">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.PresetGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32,Microsoft.Office.Core.MsoPresetGradientType)">
			<param name="PresetGradientType">hiddenmemberparam</param>
			<param name="Style">hiddenmemberparam</param>
			<param name="Variant">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.PresetTextured(Microsoft.Office.Core.MsoPresetTexture)">
			<param name="PresetTexture">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.TwoColorGradient(Microsoft.Office.Core.MsoGradientStyle,System.Int32)">
			<param name="Style">hiddenmemberparam</param>
			<param name="Variant">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.UserPicture(System.Object,System.Object,System.Object,System.Object)">
			<param name="PicturePlacement">hiddenmemberparam</param>
			<param name="PictureFormat">hiddenmemberparam</param>
			<param name="PictureStackUnit">hiddenmemberparam</param>
			<param name="PictureFile">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartFillFormat.UserTextured(System.String)">
			<param name="TextureFile">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartGroup.SeriesCollection(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartGroups.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartObject.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IChartObjects.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICharts._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICharts.Add(System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Count">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICharts.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICharts.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICharts.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICharts.PrintPreview(System.Object)">
			<param name="EnableChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICharts.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICharts._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICharts.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IChartTitle.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICheckBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICheckBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICheckBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICheckBox.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICheckBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICheckBoxes.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IComment.Text(System.Object,System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
			<param name="Overwrite">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IComments.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IComments._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)">
			<param name="ConnectionSite">hiddenmemberparam</param>
			<param name="ConnectedShape">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)">
			<param name="ConnectionSite">hiddenmemberparam</param>
			<param name="ConnectedShape">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IControlFormat.AddItem(System.String,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IControlFormat.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IControlFormat.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICustomProperties.Add(System.String,System.Object)">
			<param name="Value">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICustomProperties._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICustomProperties.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICustomViews.Add(System.String,System.Object,System.Object)">
			<param name="PrintSettings">hiddenmemberparam</param>
			<param name="ViewName">hiddenmemberparam</param>
			<param name="RowColSettings">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ICustomViews.Item(System.Object)">
			<param name="ViewName">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ICustomViews._Default(System.Object)">
			<param name="ViewName">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDataLabel.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDataLabels.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDiagram.Convert(Microsoft.Office.Core.MsoDiagramType)">
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialog.Show(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogFrame.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogFrame.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogFrame.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDialogFrame.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDialogs._Default(Microsoft.Office.Interop.Excel.XlBuiltInDialog)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDialogs.Item(Microsoft.Office.Interop.Excel.XlBuiltInDialog)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="SpellScript">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="IgnoreFinalYaa">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">hiddenmemberparam</param>
			<param name="DisplayAsIcon">hiddenmemberparam</param>
			<param name="Format">hiddenmemberparam</param>
			<param name="IconFileName">hiddenmemberparam</param>
			<param name="Link">hiddenmemberparam</param>
			<param name="IconIndex">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Arcs(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Buttons(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ChartObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.CheckBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.DrawingObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Drawings(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.DropDowns(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.EditBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Evaluate(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.GroupBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.GroupObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Hide(System.Object)">
			<param name="Cancel">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Labels(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Lines(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ListBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.OLEObjects(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.OptionButtons(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Ovals(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Paste(System.Object,System.Object)">
			<param name="Link">hiddenmemberparam</param>
			<param name="Destination">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">hiddenmemberparam</param>
			<param name="DisplayAsIcon">hiddenmemberparam</param>
			<param name="Format">hiddenmemberparam</param>
			<param name="IconFileName">hiddenmemberparam</param>
			<param name="Link">hiddenmemberparam</param>
			<param name="NoHTMLFormatting">hiddenmemberparam</param>
			<param name="IconIndex">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Pictures(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.PrintPreview(System.Object)">
			<param name="EnableChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AllowInsertingColumns">hiddenmemberparam</param>
			<param name="Contents">hiddenmemberparam</param>
			<param name="AllowInsertingRows">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="AllowFormattingCells">hiddenmemberparam</param>
			<param name="AllowFiltering">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="AllowSorting">hiddenmemberparam</param>
			<param name="AllowDeletingRows">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="AllowInsertingHyperlinks">hiddenmemberparam</param>
			<param name="AllowDeletingColumns">hiddenmemberparam</param>
			<param name="AllowFormattingColumns">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
			<param name="AllowFormattingRows">hiddenmemberparam</param>
			<param name="AllowUsingPivotTables">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Rectangles(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
			<param name="Local">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.ScrollBars(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Spinners(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.TextBoxes(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheet.Unprotect(System.Object)">
			<param name="Password">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Add(System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Count">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.PrintPreview(System.Object)">
			<param name="EnableChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDialogSheets.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDialogSheets._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDialogSheets.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDisplayUnitLabel.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDocEvents.BeforeDoubleClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDocEvents.BeforeRightClick(Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDocEvents.Change(Microsoft.Office.Interop.Excel.Range)">
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDocEvents.FollowHyperlink(Microsoft.Office.Interop.Excel.Hyperlink)">
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDocEvents.PivotTableUpdate(Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDocEvents.SelectionChange(Microsoft.Office.Interop.Excel.Range)">
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawing.AddVertex(System.Double,System.Double)">
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawing.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawing.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawing.Reshape(System.Int32,System.Boolean,System.Object,System.Object)">
			<param name="Insert">hiddenmemberparam</param>
			<param name="Vertex">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawing.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDrawing.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDrawing.Vertices(System.Object,System.Object)">
			<param name="Index1">hiddenmemberparam</param>
			<param name="Index2">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.LinkCombo(System.Object)">
			<param name="Link">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Reshape(System.Int32,System.Object,System.Object,System.Object)">
			<param name="Insert">hiddenmemberparam</param>
			<param name="Vertex">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawingObjects.Vertices(System.Object,System.Object)">
			<param name="Index1">hiddenmemberparam</param>
			<param name="Index2">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDrawingObjects.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawings.Add(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
			<param name="Y2">hiddenmemberparam</param>
			<param name="Closed">hiddenmemberparam</param>
			<param name="X2">hiddenmemberparam</param>
			<param name="X1">hiddenmemberparam</param>
			<param name="Y1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawings.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawings.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawings.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawings.Reshape(System.Int32,System.Boolean,System.Object,System.Object)">
			<param name="Insert">hiddenmemberparam</param>
			<param name="Vertex">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDrawings.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDrawings.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDown.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDown.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDown.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDown.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDropDown.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDropDown.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDropDown.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Add(System.Double,System.Double,System.Double,System.Double,System.Object)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Editable">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDowns.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDowns.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDowns.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IDropDowns.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDropDowns.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IDropDowns.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IEditBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IEditBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IEditBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IEditBox.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IEditBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IEditBoxes.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IErrors._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IErrors.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IFilters._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IFilters.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IFormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)">
			<param name="Formula1">hiddenmemberparam</param>
			<param name="Formula2">hiddenmemberparam</param>
			<param name="Operator">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)">
			<param name="Formula1">hiddenmemberparam</param>
			<param name="Formula2">hiddenmemberparam</param>
			<param name="Operator">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IFormatConditions.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IFormatConditions._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IFreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)">
			<param name="Y2">hiddenmemberparam</param>
			<param name="SegmentType">hiddenmemberparam</param>
			<param name="EditingType">hiddenmemberparam</param>
			<param name="X2">hiddenmemberparam</param>
			<param name="X3">hiddenmemberparam</param>
			<param name="Y3">hiddenmemberparam</param>
			<param name="X1">hiddenmemberparam</param>
			<param name="Y1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IGroupBox.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IGroupBoxes.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupObject.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupObject.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupObject.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupObjects.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupShapes._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IGroupShapes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IGroupShapes.Range(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IHPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)">
			<param name="RegionIndex">hiddenmemberparam</param>
			<param name="Direction">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IHPageBreaks.Add(System.Object)">
			<param name="Before">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IHPageBreaks._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IHPageBreaks.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IHyperlink.CreateNewDocument(System.String,System.Boolean,System.Boolean)">
			<param name="EditNow">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="Overwrite">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IHyperlink.Follow(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="ExtraInfo">hiddenmemberparam</param>
			<param name="NewWindow">hiddenmemberparam</param>
			<param name="AddHistory">hiddenmemberparam</param>
			<param name="HeaderInfo">hiddenmemberparam</param>
			<param name="Method">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IHyperlinks.Add(System.Object,System.String,System.Object,System.Object,System.Object)">
			<param name="SubAddress">hiddenmemberparam</param>
			<param name="Address">hiddenmemberparam</param>
			<param name="Anchor">hiddenmemberparam</param>
			<param name="ScreenTip">hiddenmemberparam</param>
			<param name="TextToDisplay">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IHyperlinks._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IHyperlinks.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILabel.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILabel.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILabel.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ILabel.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILabels.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILabels.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILabels.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILabels.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILabels.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ILabels.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILegend.LegendEntries(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILegendEntries.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILine.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILine.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILines.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Y2">hiddenmemberparam</param>
			<param name="X2">hiddenmemberparam</param>
			<param name="X1">hiddenmemberparam</param>
			<param name="Y1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILines.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILines.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ILines.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBox.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBox.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListBox.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListBox.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBoxes.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBoxes.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListBoxes.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListBoxes.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListColumns.Add(System.Object)">
			<param name="Position">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListColumns._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListColumns.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListObject.Publish(System.Object,System.Boolean)">
			<param name="LinkSource">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListObject.Resize(Microsoft.Office.Interop.Excel.Range)">
			<param name="Range">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListObject.UpdateChanges(Microsoft.Office.Interop.Excel.XlListConflict)">
			<param name="iConflictType">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListObjects.Add(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object)">
			<param name="LinkSource">hiddenmemberparam</param>
			<param name="Source">hiddenmemberparam</param>
			<param name="XlListObjectHasHeaders">hiddenmemberparam</param>
			<param name="SourceType">hiddenmemberparam</param>
			<param name="Destination">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListObjects._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IListRows.Add(System.Object)">
			<param name="Position">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListRows._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IListRows.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IMenuBars.Add(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IMenuBars._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IMenuBars.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IMenuItems.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="ShortcutKey">hiddenmemberparam</param>
			<param name="StatusBar">hiddenmemberparam</param>
			<param name="Caption">hiddenmemberparam</param>
			<param name="HelpContextID">hiddenmemberparam</param>
			<param name="HelpFile">hiddenmemberparam</param>
			<param name="Restore">hiddenmemberparam</param>
			<param name="OnAction">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IMenuItems.AddMenu(System.String,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Caption">hiddenmemberparam</param>
			<param name="Restore">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IMenuItems._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IMenuItems.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IMenus.Add(System.String,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Caption">hiddenmemberparam</param>
			<param name="Restore">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IMenus._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IMenus.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule.InsertFile(System.Object,System.Object)">
			<param name="Filename">hiddenmemberparam</param>
			<param name="Merge">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModule.Unprotect(System.Object)">
			<param name="Password">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModules._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModules.Add(System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Count">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModules.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModules.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModules.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IModules.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IModules._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IModules.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.INames._Default(System.Object,System.Object,System.Object)">
			<param name="RefersTo">hiddenmemberparam</param>
			<param name="IndexLocal">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.INames.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="RefersTo">hiddenmemberparam</param>
			<param name="Visible">hiddenmemberparam</param>
			<param name="ShortcutKey">hiddenmemberparam</param>
			<param name="Category">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
			<param name="MacroType">hiddenmemberparam</param>
			<param name="RefersToR1C1Local">hiddenmemberparam</param>
			<param name="RefersToLocal">hiddenmemberparam</param>
			<param name="NameLocal">hiddenmemberparam</param>
			<param name="CategoryLocal">hiddenmemberparam</param>
			<param name="RefersToR1C1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.INames.Item(System.Object,System.Object,System.Object)">
			<param name="RefersTo">hiddenmemberparam</param>
			<param name="IndexLocal">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Interior">
			<summary>Represents the interior of an object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IODBCErrors.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IODBCErrors._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOLEDBErrors.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IOLEDBErrors._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOLEFormat.Verb(System.Object)">
			<param name="Verb">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
			<param name="DisplayAsIcon">hiddenmemberparam</param>
			<param name="IconFileName">hiddenmemberparam</param>
			<param name="Link">hiddenmemberparam</param>
			<param name="ClassType">hiddenmemberparam</param>
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="IconIndex">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOLEObjects.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOptionButton.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOptionButton.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOptionButton.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IOptionButton.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOptionButtons.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IOptionButtons.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOutline.ShowLevels(System.Object,System.Object)">
			<param name="ColumnLevels">hiddenmemberparam</param>
			<param name="RowLevels">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOval.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOval.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOval.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IOval.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOvals.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOvals.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOvals.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOvals.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IOvals.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IOvals.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPageSetup.PrintQuality(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPane.LargeScroll(System.Object,System.Object,System.Object,System.Object)">
			<param name="ToRight">hiddenmemberparam</param>
			<param name="Up">hiddenmemberparam</param>
			<param name="ToLeft">hiddenmemberparam</param>
			<param name="Down">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPane.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPane.SmallScroll(System.Object,System.Object,System.Object,System.Object)">
			<param name="ToRight">hiddenmemberparam</param>
			<param name="Up">hiddenmemberparam</param>
			<param name="ToLeft">hiddenmemberparam</param>
			<param name="Down">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPanes._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPanes.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IParameter.SetParam(Microsoft.Office.Interop.Excel.XlParameterType,System.Object)">
			<param name="Value">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IParameters.Add(System.String,System.Object)">
			<param name="iDataType">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IParameters.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IParameters._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPhonetics.Add(System.Int32,System.Int32,System.String)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Text">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPhonetics._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPhonetics.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPicture.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPicture.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPictures.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPictures.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPictures.Insert(System.String,System.Object)">
			<param name="Filename">hiddenmemberparam</param>
			<param name="Converter">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPictures.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPictures.Paste(System.Object)">
			<param name="Link">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPictures.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotCache.CreatePivotTable(System.Object,System.Object,System.Object,System.Object)">
			<param name="TableDestination">hiddenmemberparam</param>
			<param name="DefaultVersion">hiddenmemberparam</param>
			<param name="ReadData">hiddenmemberparam</param>
			<param name="TableName">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotCache.SaveAsODC(System.String,System.Object,System.Object)">
			<param name="ODCFileName">hiddenmemberparam</param>
			<param name="Keywords">hiddenmemberparam</param>
			<param name="Description">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotCaches.Add(Microsoft.Office.Interop.Excel.XlPivotTableSourceType,System.Object)">
			<param name="SourceData">hiddenmemberparam</param>
			<param name="SourceType">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotCaches.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotCaches._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotField.AddPageItem(System.String,System.Object)">
			<param name="ClearList">hiddenmemberparam</param>
			<param name="Item">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotField.AutoShow(System.Int32,System.Int32,System.Int32,System.String)">
			<param name="Range">hiddenmemberparam</param>
			<param name="Count">hiddenmemberparam</param>
			<param name="Field">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotField.AutoSort(System.Int32,System.String)">
			<param name="Field">hiddenmemberparam</param>
			<param name="Order">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotField.PivotItems(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotField.ChildItems(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotField.HiddenItems(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotField.ParentItems(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotField.Subtotals(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotField.VisibleItems(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotFields.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotFormulas._Add(System.String)">
			<param name="Formula">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotFormulas.Add(System.String,System.Object)">
			<param name="Formula">hiddenmemberparam</param>
			<param name="UseStandardFormula">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotFormulas.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotFormulas._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotItem.ChildItems(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotItemList.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotItemList._Default(System.Object)">
			<param name="Field">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotItems.Add(System.String)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotItems.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotLayout.AddFields(System.Object,System.Object,System.Object,System.Object)">
			<param name="PageFields">hiddenmemberparam</param>
			<param name="ColumnFields">hiddenmemberparam</param>
			<param name="RowFields">hiddenmemberparam</param>
			<param name="AppendField">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.ColumnFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.DataFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.HiddenFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.PageFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.PivotFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.RowFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotLayout.VisibleFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable._PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode)">
			<param name="Name">hiddenmemberparam</param>
			<param name="Mode">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.AddDataField(System.Object,System.Object,System.Object)">
			<param name="Caption">hiddenmemberparam</param>
			<param name="Field">hiddenmemberparam</param>
			<param name="Function">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.AddFields(System.Object,System.Object,System.Object,System.Object)">
			<param name="PageFields">hiddenmemberparam</param>
			<param name="ColumnFields">hiddenmemberparam</param>
			<param name="RowFields">hiddenmemberparam</param>
			<param name="AddToTable">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.CreateCubeFile(System.String,System.Object,System.Object,System.Object,System.Object)">
			<param name="Members">hiddenmemberparam</param>
			<param name="Measures">hiddenmemberparam</param>
			<param name="Properties">hiddenmemberparam</param>
			<param name="File">hiddenmemberparam</param>
			<param name="Levels">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.Dummy15(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)">
			<param name="Format">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.GetData(System.String)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.GetPivotData(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Field8">hiddenmemberparam</param>
			<param name="Field9">hiddenmemberparam</param>
			<param name="Field1">hiddenmemberparam</param>
			<param name="Field2">hiddenmemberparam</param>
			<param name="Field3">hiddenmemberparam</param>
			<param name="Field4">hiddenmemberparam</param>
			<param name="Field5">hiddenmemberparam</param>
			<param name="Field6">hiddenmemberparam</param>
			<param name="Field7">hiddenmemberparam</param>
			<param name="Field11">hiddenmemberparam</param>
			<param name="Field10">hiddenmemberparam</param>
			<param name="Field13">hiddenmemberparam</param>
			<param name="Field12">hiddenmemberparam</param>
			<param name="Item14">hiddenmemberparam</param>
			<param name="Item12">hiddenmemberparam</param>
			<param name="Item13">hiddenmemberparam</param>
			<param name="Item10">hiddenmemberparam</param>
			<param name="Item11">hiddenmemberparam</param>
			<param name="Item1">hiddenmemberparam</param>
			<param name="Item9">hiddenmemberparam</param>
			<param name="Item8">hiddenmemberparam</param>
			<param name="Item7">hiddenmemberparam</param>
			<param name="Item6">hiddenmemberparam</param>
			<param name="Item5">hiddenmemberparam</param>
			<param name="Item4">hiddenmemberparam</param>
			<param name="Item3">hiddenmemberparam</param>
			<param name="Item2">hiddenmemberparam</param>
			<param name="DataField">hiddenmemberparam</param>
			<param name="Field14">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.PivotFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)">
			<param name="Name">hiddenmemberparam</param>
			<param name="UseStandardName">hiddenmemberparam</param>
			<param name="Mode">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="SourceData">hiddenmemberparam</param>
			<param name="RowGrand">hiddenmemberparam</param>
			<param name="BackgroundQuery">hiddenmemberparam</param>
			<param name="Connection">hiddenmemberparam</param>
			<param name="HasAutoFormat">hiddenmemberparam</param>
			<param name="PageFieldOrder">hiddenmemberparam</param>
			<param name="PageFieldWrapCount">hiddenmemberparam</param>
			<param name="TableDestination">hiddenmemberparam</param>
			<param name="ReadData">hiddenmemberparam</param>
			<param name="Reserved">hiddenmemberparam</param>
			<param name="AutoPage">hiddenmemberparam</param>
			<param name="ColumnGrand">hiddenmemberparam</param>
			<param name="OptimizeCache">hiddenmemberparam</param>
			<param name="SourceType">hiddenmemberparam</param>
			<param name="SaveData">hiddenmemberparam</param>
			<param name="TableName">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTable.ShowPages(System.Object)">
			<param name="PageField">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotTable.ColumnFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotTable.DataFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotTable.HiddenFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotTable.PageFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotTable.RowFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPivotTable.VisibleFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTables.Add(Microsoft.Office.Interop.Excel.PivotCache,System.Object,System.Object,System.Object,System.Object)">
			<param name="PivotCache">hiddenmemberparam</param>
			<param name="TableDestination">hiddenmemberparam</param>
			<param name="DefaultVersion">hiddenmemberparam</param>
			<param name="ReadData">hiddenmemberparam</param>
			<param name="TableName">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPivotTables.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPoint._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
			<param name="HasLeaderLines">hiddenmemberparam</param>
			<param name="LegendKey">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="AutoText">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPoint.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="ShowValue">hiddenmemberparam</param>
			<param name="ShowBubbleSize">hiddenmemberparam</param>
			<param name="Separator">hiddenmemberparam</param>
			<param name="HasLeaderLines">hiddenmemberparam</param>
			<param name="LegendKey">hiddenmemberparam</param>
			<param name="ShowPercentage">hiddenmemberparam</param>
			<param name="ShowSeriesName">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="ShowCategoryName">hiddenmemberparam</param>
			<param name="AutoText">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPoints.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IPublishObjects.Add(Microsoft.Office.Interop.Excel.XlSourceType,System.String,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="HtmlType">hiddenmemberparam</param>
			<param name="Sheet">hiddenmemberparam</param>
			<param name="Title">hiddenmemberparam</param>
			<param name="Source">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="SourceType">hiddenmemberparam</param>
			<param name="DivID">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPublishObjects._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IPublishObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IQueryTables.Add(System.Object,Microsoft.Office.Interop.Excel.Range,System.Object)">
			<param name="Connection">hiddenmemberparam</param>
			<param name="Sql">hiddenmemberparam</param>
			<param name="Destination">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IQueryTables.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IQueryTables._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
			<param name="Transpose">hiddenmemberparam</param>
			<param name="Paste">hiddenmemberparam</param>
			<param name="SkipBlanks">hiddenmemberparam</param>
			<param name="Operation">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.AddComment(System.Object)">
			<param name="Text">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)">
			<param name="CopyToRange">hiddenmemberparam</param>
			<param name="Unique">hiddenmemberparam</param>
			<param name="CriteriaRange">hiddenmemberparam</param>
			<param name="Action">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)">
			<param name="IgnoreRelativeAbsolute">hiddenmemberparam</param>
			<param name="UseRowColumnNames">hiddenmemberparam</param>
			<param name="AppendLast">hiddenmemberparam</param>
			<param name="OmitColumn">hiddenmemberparam</param>
			<param name="Names">hiddenmemberparam</param>
			<param name="Order">hiddenmemberparam</param>
			<param name="OmitRow">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.AutoComplete(System.String)">
			<param name="String">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)">
			<param name="Type">hiddenmemberparam</param>
			<param name="Destination">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)">
			<param name="Operator">hiddenmemberparam</param>
			<param name="VisibleDropDown">hiddenmemberparam</param>
			<param name="Field">hiddenmemberparam</param>
			<param name="Criteria1">hiddenmemberparam</param>
			<param name="Criteria2">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Number">hiddenmemberparam</param>
			<param name="Format">hiddenmemberparam</param>
			<param name="Font">hiddenmemberparam</param>
			<param name="Pattern">hiddenmemberparam</param>
			<param name="Width">hiddenmemberparam</param>
			<param name="Border">hiddenmemberparam</param>
			<param name="Alignment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)">
			<param name="Weight">hiddenmemberparam</param>
			<param name="LineStyle">hiddenmemberparam</param>
			<param name="ColorIndex">hiddenmemberparam</param>
			<param name="Color">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.ColumnDifferences(System.Object)">
			<param name="Comparison">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="CreateLinks">hiddenmemberparam</param>
			<param name="TopRow">hiddenmemberparam</param>
			<param name="Sources">hiddenmemberparam</param>
			<param name="LeftColumn">hiddenmemberparam</param>
			<param name="Function">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Copy(System.Object)">
			<param name="Destination">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.CopyFromRecordset(System.Object,System.Object,System.Object)">
			<param name="MaxColumns">hiddenmemberparam</param>
			<param name="MaxRows">hiddenmemberparam</param>
			<param name="Data">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.CreateNames(System.Object,System.Object,System.Object,System.Object)">
			<param name="Bottom">hiddenmemberparam</param>
			<param name="Right">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
			<param name="ContainsRTF">hiddenmemberparam</param>
			<param name="ContainsPICT">hiddenmemberparam</param>
			<param name="Edition">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
			<param name="ContainsVALU">hiddenmemberparam</param>
			<param name="ContainsBIFF">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Cut(System.Object)">
			<param name="Destination">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)">
			<param name="Stop">hiddenmemberparam</param>
			<param name="Rowcol">hiddenmemberparam</param>
			<param name="Date">hiddenmemberparam</param>
			<param name="Trend">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="Step">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Delete(System.Object)">
			<param name="Shift">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Option">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
			<param name="Reference">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="ChartSize">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)">
			<param name="SearchOrder">hiddenmemberparam</param>
			<param name="What">hiddenmemberparam</param>
			<param name="LookIn">hiddenmemberparam</param>
			<param name="MatchByte">hiddenmemberparam</param>
			<param name="LookAt">hiddenmemberparam</param>
			<param name="SearchFormat">hiddenmemberparam</param>
			<param name="SearchDirection">hiddenmemberparam</param>
			<param name="MatchCase">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.FindNext(System.Object)">
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.FindPrevious(System.Object)">
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="ChangingCell">hiddenmemberparam</param>
			<param name="Goal">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Group(System.Object,System.Object,System.Object,System.Object)">
			<param name="End">hiddenmemberparam</param>
			<param name="Periods">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
			<param name="By">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Insert(System.Object,System.Object)">
			<param name="Shift">hiddenmemberparam</param>
			<param name="CopyOrigin">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.InsertIndent(System.Int32)">
			<param name="InsertAmount">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Merge(System.Object)">
			<param name="Across">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.NavigateArrow(System.Object,System.Object,System.Object)">
			<param name="ArrowNumber">hiddenmemberparam</param>
			<param name="LinkNumber">hiddenmemberparam</param>
			<param name="TowardPrecedent">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.NoteText(System.Object,System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Text">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Parse(System.Object,System.Object)">
			<param name="ParseLine">hiddenmemberparam</param>
			<param name="Destination">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
			<param name="Transpose">hiddenmemberparam</param>
			<param name="Paste">hiddenmemberparam</param>
			<param name="SkipBlanks">hiddenmemberparam</param>
			<param name="Operation">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.PrintPreview(System.Object)">
			<param name="EnableChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Replacement">hiddenmemberparam</param>
			<param name="SearchOrder">hiddenmemberparam</param>
			<param name="What">hiddenmemberparam</param>
			<param name="MatchCase">hiddenmemberparam</param>
			<param name="MatchByte">hiddenmemberparam</param>
			<param name="LookAt">hiddenmemberparam</param>
			<param name="SearchFormat">hiddenmemberparam</param>
			<param name="ReplaceFormat">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.RowDifferences(System.Object)">
			<param name="Comparison">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.ShowDependents(System.Object)">
			<param name="Remove">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.ShowPrecedents(System.Object)">
			<param name="Remove">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)">
			<param name="Key3">hiddenmemberparam</param>
			<param name="MatchCase">hiddenmemberparam</param>
			<param name="DataOption1">hiddenmemberparam</param>
			<param name="DataOption3">hiddenmemberparam</param>
			<param name="DataOption2">hiddenmemberparam</param>
			<param name="Header">hiddenmemberparam</param>
			<param name="SortMethod">hiddenmemberparam</param>
			<param name="Order1">hiddenmemberparam</param>
			<param name="Order2">hiddenmemberparam</param>
			<param name="Order3">hiddenmemberparam</param>
			<param name="Orientation">hiddenmemberparam</param>
			<param name="Key1">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="Key2">hiddenmemberparam</param>
			<param name="OrderCustom">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)">
			<param name="Key3">hiddenmemberparam</param>
			<param name="MatchCase">hiddenmemberparam</param>
			<param name="DataOption1">hiddenmemberparam</param>
			<param name="DataOption3">hiddenmemberparam</param>
			<param name="DataOption2">hiddenmemberparam</param>
			<param name="Header">hiddenmemberparam</param>
			<param name="SortMethod">hiddenmemberparam</param>
			<param name="Order1">hiddenmemberparam</param>
			<param name="Order2">hiddenmemberparam</param>
			<param name="Order3">hiddenmemberparam</param>
			<param name="Orientation">hiddenmemberparam</param>
			<param name="Key1">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="Key2">hiddenmemberparam</param>
			<param name="OrderCustom">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Speak(System.Object,System.Object)">
			<param name="SpeakDirection">hiddenmemberparam</param>
			<param name="SpeakFormulas">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)">
			<param name="Value">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Edition">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)">
			<param name="PageBreaks">hiddenmemberparam</param>
			<param name="TotalList">hiddenmemberparam</param>
			<param name="SummaryBelowData">hiddenmemberparam</param>
			<param name="GroupBy">hiddenmemberparam</param>
			<param name="Replace">hiddenmemberparam</param>
			<param name="Function">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.Table(System.Object,System.Object)">
			<param name="RowInput">hiddenmemberparam</param>
			<param name="ColumnInput">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRange.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="OtherChar">hiddenmemberparam</param>
			<param name="DataType">hiddenmemberparam</param>
			<param name="Tab">hiddenmemberparam</param>
			<param name="DecimalSeparator">hiddenmemberparam</param>
			<param name="Semicolon">hiddenmemberparam</param>
			<param name="Comma">hiddenmemberparam</param>
			<param name="TrailingMinusNumbers">hiddenmemberparam</param>
			<param name="Space">hiddenmemberparam</param>
			<param name="ConsecutiveDelimiter">hiddenmemberparam</param>
			<param name="Other">hiddenmemberparam</param>
			<param name="TextQualifier">hiddenmemberparam</param>
			<param name="ThousandsSeparator">hiddenmemberparam</param>
			<param name="Destination">hiddenmemberparam</param>
			<param name="FieldInfo">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange._Default(System.Object,System.Object)">
			<param name="ColumnIndex">hiddenmemberparam</param>
			<param name="RowIndex">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
			<param name="External">hiddenmemberparam</param>
			<param name="ColumnAbsolute">hiddenmemberparam</param>
			<param name="RowAbsolute">hiddenmemberparam</param>
			<param name="RelativeTo">hiddenmemberparam</param>
			<param name="ReferenceStyle">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
			<param name="External">hiddenmemberparam</param>
			<param name="ColumnAbsolute">hiddenmemberparam</param>
			<param name="RowAbsolute">hiddenmemberparam</param>
			<param name="RelativeTo">hiddenmemberparam</param>
			<param name="ReferenceStyle">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.End(Microsoft.Office.Interop.Excel.XlDirection)">
			<param name="Direction">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.Item(System.Object,System.Object)">
			<param name="ColumnIndex">hiddenmemberparam</param>
			<param name="RowIndex">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.Offset(System.Object,System.Object)">
			<param name="RowOffset">hiddenmemberparam</param>
			<param name="ColumnOffset">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.Range(System.Object,System.Object)">
			<param name="Cell1">hiddenmemberparam</param>
			<param name="Cell2">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.Resize(System.Object,System.Object)">
			<param name="RowSize">hiddenmemberparam</param>
			<param name="ColumnSize">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRange.Value(System.Object)">
			<param name="RangeValueDataType">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRecentFiles.Add(System.String)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRecentFiles._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRecentFiles.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRectangle.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRectangle.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRectangle.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRectangle.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRectangles.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRectangles.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRectangles.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRectangles.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRectangles.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRectangles.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRefreshEvents.AfterRefresh(System.Boolean)">
			<param name="Success">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRefreshEvents.BeforeRefresh(System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IRoutingSlip.Recipients(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.IRtdServer">
			<summary>Represents an interface for a real-time data server.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ConnectData(System.Int32,System.Array@,System.Boolean@)">
			<summary>Adds new topics from a real-time data server. The ConnectData method is called when a file is opened that contains real-time data functions or when a user types in a new formula which contains the RTD function.</summary>
			<param name="TopicID">Required Integer. A unique value, assigned by Microsoft Excel, which identifies the topic.</param>
			<param name="GetNewValues">Required Boolean. True to determine if new values are to be acquired.</param>
			<param name="Strings">Required Object. A single-dimensional array of strings identifying the topic.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRtdServer.DisconnectData(System.Int32)">
			<summary>Notifies a real-time data (RTD) server application that a topic is no longer in use.</summary>
			<param name="TopicID">Required Integer. A unique value assigned to the topic assigned by Microsoft Excel.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRtdServer.RefreshData(System.Int32@)">
			<summary>This method is called by Microsoft Excel to get new data.</summary>
			<param name="TopicCount">Required Integer. The RTD server must change the value of the TopicCount to the number of elements in the array returned.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ServerStart(Microsoft.Office.Interop.Excel.IRTDUpdateEvent)">
			<summary>The ServerStart method is called immediately after a real-time data server is instantiated. Negative value or zero indicates failure to start the server; positive value indicates success.</summary>
			<param name="CallbackObject">Required <see cref="T:Microsoft.Office.Interop.Excel.IRTDUpdateEvent"></see> object. The callback object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRtdServer.ServerTerminate">
			<summary>Terminates the connection to the real-time data server.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.IRTDUpdateEvent">
			<summary>Represents real-time data update events.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IRTDUpdateEvent.Disconnect">
			<summary>Instructs the real-time data server (RTD) to disconnect from the specified <see cref="T:Microsoft.Office.Interop.Excel.IRTDUpdateEvent"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScenario.ChangeScenario(System.Object,System.Object)">
			<param name="ChangingCells">hiddenmemberparam</param>
			<param name="Values">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IScenario.Values(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Comment">hiddenmemberparam</param>
			<param name="Hidden">hiddenmemberparam</param>
			<param name="ChangingCells">hiddenmemberparam</param>
			<param name="Locked">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
			<param name="Values">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScenarios.CreateSummary(Microsoft.Office.Interop.Excel.XlSummaryReportType,System.Object)">
			<param name="ReportType">hiddenmemberparam</param>
			<param name="ResultCells">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScenarios.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScenarios.Merge(System.Object)">
			<param name="Source">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScrollBar.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScrollBar.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScrollBars.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IScrollBars.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeries._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
			<param name="HasLeaderLines">hiddenmemberparam</param>
			<param name="LegendKey">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="AutoText">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeries.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType)">
			<param name="ChartType">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeries.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="ShowValue">hiddenmemberparam</param>
			<param name="ShowBubbleSize">hiddenmemberparam</param>
			<param name="Separator">hiddenmemberparam</param>
			<param name="HasLeaderLines">hiddenmemberparam</param>
			<param name="LegendKey">hiddenmemberparam</param>
			<param name="ShowPercentage">hiddenmemberparam</param>
			<param name="ShowSeriesName">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="ShowCategoryName">hiddenmemberparam</param>
			<param name="AutoText">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeries.DataLabels(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeries.ErrorBar(Microsoft.Office.Interop.Excel.XlErrorBarDirection,Microsoft.Office.Interop.Excel.XlErrorBarInclude,Microsoft.Office.Interop.Excel.XlErrorBarType,System.Object,System.Object)">
			<param name="Direction">hiddenmemberparam</param>
			<param name="Include">hiddenmemberparam</param>
			<param name="MinusValues">hiddenmemberparam</param>
			<param name="Amount">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeries.Points(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeries.Trendlines(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.Add(System.Object,Microsoft.Office.Interop.Excel.XlRowCol,System.Object,System.Object,System.Object)">
			<param name="SeriesLabels">hiddenmemberparam</param>
			<param name="CategoryLabels">hiddenmemberparam</param>
			<param name="Source">hiddenmemberparam</param>
			<param name="Rowcol">hiddenmemberparam</param>
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.Extend(System.Object,System.Object,System.Object)">
			<param name="CategoryLabels">hiddenmemberparam</param>
			<param name="Source">hiddenmemberparam</param>
			<param name="Rowcol">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISeriesCollection.Paste(Microsoft.Office.Interop.Excel.XlRowCol,System.Object,System.Object,System.Object,System.Object)">
			<param name="CategoryLabels">hiddenmemberparam</param>
			<param name="SeriesLabels">hiddenmemberparam</param>
			<param name="Rowcol">hiddenmemberparam</param>
			<param name="Replace">hiddenmemberparam</param>
			<param name="NewSeries">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.CanvasCropBottom(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.CanvasCropLeft(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.CanvasCropRight(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.CanvasCropTop(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.CopyPicture(System.Object,System.Object)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.Flip(Microsoft.Office.Core.MsoFlipCmd)">
			<param name="FlipCmd">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.IncrementLeft(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.IncrementRotation(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.IncrementTop(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
			<param name="Scale">hiddenmemberparam</param>
			<param name="Factor">hiddenmemberparam</param>
			<param name="RelativeToOriginalSize">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
			<param name="Scale">hiddenmemberparam</param>
			<param name="Factor">hiddenmemberparam</param>
			<param name="RelativeToOriginalSize">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)">
			<param name="ZOrderCmd">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Align(Microsoft.Office.Core.MsoAlignCmd,Microsoft.Office.Core.MsoTriState)">
			<param name="AlignCmd">hiddenmemberparam</param>
			<param name="RelativeTo">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.CanvasCropBottom(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.CanvasCropLeft(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.CanvasCropRight(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.CanvasCropTop(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Distribute(Microsoft.Office.Core.MsoDistributeCmd,Microsoft.Office.Core.MsoTriState)">
			<param name="DistributeCmd">hiddenmemberparam</param>
			<param name="RelativeTo">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Flip(Microsoft.Office.Core.MsoFlipCmd)">
			<param name="FlipCmd">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.IncrementLeft(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.IncrementRotation(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.IncrementTop(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
			<param name="Scale">hiddenmemberparam</param>
			<param name="Factor">hiddenmemberparam</param>
			<param name="RelativeToOriginalSize">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
			<param name="Scale">hiddenmemberparam</param>
			<param name="Factor">hiddenmemberparam</param>
			<param name="RelativeToOriginalSize">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)">
			<param name="ZOrderCmd">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddCanvas(System.Single,System.Single,System.Single,System.Single)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddConnector(Microsoft.Office.Core.MsoConnectorType,System.Single,System.Single,System.Single,System.Single)">
			<param name="BeginY">hiddenmemberparam</param>
			<param name="BeginX">hiddenmemberparam</param>
			<param name="EndY">hiddenmemberparam</param>
			<param name="EndX">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddCurve(System.Object)">
			<param name="SafeArrayOfPoints">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddFormControl(Microsoft.Office.Interop.Excel.XlFormControl,System.Int32,System.Int32,System.Int32,System.Int32)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Orientation">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddLine(System.Single,System.Single,System.Single,System.Single)">
			<param name="BeginY">hiddenmemberparam</param>
			<param name="BeginX">hiddenmemberparam</param>
			<param name="EndY">hiddenmemberparam</param>
			<param name="EndX">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddOLEObject(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
			<param name="DisplayAsIcon">hiddenmemberparam</param>
			<param name="IconFileName">hiddenmemberparam</param>
			<param name="Link">hiddenmemberparam</param>
			<param name="ClassType">hiddenmemberparam</param>
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="IconIndex">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddPicture(System.String,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Single,System.Single)">
			<param name="Width">hiddenmemberparam</param>
			<param name="LinkToFile">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="SaveWithDocument">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddPolyline(System.Object)">
			<param name="SafeArrayOfPoints">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType,System.Single,System.Single,System.Single,System.Single)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Orientation">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single)">
			<param name="FontName">hiddenmemberparam</param>
			<param name="FontBold">hiddenmemberparam</param>
			<param name="FontSize">hiddenmemberparam</param>
			<param name="Text">hiddenmemberparam</param>
			<param name="FontItalic">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="PresetTextEffect">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)">
			<param name="EditingType">hiddenmemberparam</param>
			<param name="X1">hiddenmemberparam</param>
			<param name="Y1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IShapes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IShapes.Range(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ISmartTagActions._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ISmartTagActions.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ISmartTagRecognizers.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISmartTags.Add(System.String)">
			<param name="SmartTagType">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ISmartTags._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISoundNote.Import(System.String)">
			<param name="Filename">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISpeech.Speak(System.String,System.Object,System.Object,System.Object)">
			<param name="Purge">hiddenmemberparam</param>
			<param name="Text">hiddenmemberparam</param>
			<param name="SpeakAsync">hiddenmemberparam</param>
			<param name="SpeakXML">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISpinner.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISpinner.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISpinners.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISpinners.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISpinners.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ISpinners.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IStyles.Add(System.String,System.Object)">
			<param name="BasedOn">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IStyles.Merge(System.Object)">
			<param name="Workbook">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IStyles._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IStyles.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ITextBox.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ITextBoxes.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITextFrame.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.Copy(Microsoft.Office.Interop.Excel.Toolbar,System.Int32)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Toolbar">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IToolbarButton.Move(Microsoft.Office.Interop.Excel.Toolbar,System.Int32)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Toolbar">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IToolbarButtons.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Enabled">hiddenmemberparam</param>
			<param name="Pushed">hiddenmemberparam</param>
			<param name="HelpContextID">hiddenmemberparam</param>
			<param name="HelpFile">hiddenmemberparam</param>
			<param name="StatusBar">hiddenmemberparam</param>
			<param name="Button">hiddenmemberparam</param>
			<param name="OnAction">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IToolbarButtons._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IToolbarButtons.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IToolbars.Add(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IToolbars._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IToolbars.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITrendlines.Add(Microsoft.Office.Interop.Excel.XlTrendlineType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Name">hiddenmemberparam</param>
			<param name="DisplayRSquared">hiddenmemberparam</param>
			<param name="Intercept">hiddenmemberparam</param>
			<param name="Period">hiddenmemberparam</param>
			<param name="DisplayEquation">hiddenmemberparam</param>
			<param name="Forward">hiddenmemberparam</param>
			<param name="Order">hiddenmemberparam</param>
			<param name="Backward">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ITrendlines.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IUsedObjects._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IUsedObjects.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IUserAccessList.Add(System.String,System.Boolean)">
			<param name="AllowEdit">hiddenmemberparam</param>
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IUserAccessList._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IUserAccessList.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IValidation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)">
			<param name="Formula1">hiddenmemberparam</param>
			<param name="Formula2">hiddenmemberparam</param>
			<param name="Operator">hiddenmemberparam</param>
			<param name="AlertStyle">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IValidation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Formula1">hiddenmemberparam</param>
			<param name="Formula2">hiddenmemberparam</param>
			<param name="Operator">hiddenmemberparam</param>
			<param name="AlertStyle">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IVPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)">
			<param name="RegionIndex">hiddenmemberparam</param>
			<param name="Direction">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IVPageBreaks.Add(System.Object)">
			<param name="Before">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IVPageBreaks._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IVPageBreaks.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWatches.Add(System.Object)">
			<param name="Source">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IWatches._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IWatches.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.Close(System.Object,System.Object,System.Object)">
			<param name="RouteWorkbook">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="SaveChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.LargeScroll(System.Object,System.Object,System.Object,System.Object)">
			<param name="ToRight">hiddenmemberparam</param>
			<param name="Up">hiddenmemberparam</param>
			<param name="ToLeft">hiddenmemberparam</param>
			<param name="Down">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.PointsToScreenPixelsX(System.Int32)">
			<param name="Points">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.PointsToScreenPixelsY(System.Int32)">
			<param name="Points">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.PrintPreview(System.Object)">
			<param name="EnableChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.RangeFromPoint(System.Int32,System.Int32)">
			<param name="x">hiddenmemberparam</param>
			<param name="y">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.ScrollWorkbookTabs(System.Object,System.Object)">
			<param name="Position">hiddenmemberparam</param>
			<param name="Sheets">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindow.SmallScroll(System.Object,System.Object,System.Object,System.Object)">
			<param name="ToRight">hiddenmemberparam</param>
			<param name="Up">hiddenmemberparam</param>
			<param name="ToLeft">hiddenmemberparam</param>
			<param name="Down">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindows.Arrange(Microsoft.Office.Interop.Excel.XlArrangeStyle,System.Object,System.Object,System.Object)">
			<param name="SyncHorizontal">hiddenmemberparam</param>
			<param name="SyncVertical">hiddenmemberparam</param>
			<param name="ArrangeStyle">hiddenmemberparam</param>
			<param name="ActiveWorkbook">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWindows.CompareSideBySideWith(System.Object)">
			<param name="WindowName">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IWindows._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IWindows.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AfterXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Result">hiddenmemberparam</param>
			<param name="Url">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AfterXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Result">hiddenmemberparam</param>
			<param name="IsRefresh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeClose(System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforePrint(System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeSave(System.Boolean,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="SaveAsUI">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Url">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Url">hiddenmemberparam</param>
			<param name="IsRefresh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.NewSheet(System.Object)">
			<param name="Sh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.PivotTableCloseConnection(Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.PivotTableOpenConnection(Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetActivate(System.Object)">
			<param name="Sh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">hiddenmemberparam</param>
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetCalculate(System.Object)">
			<param name="Sh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetDeactivate(System.Object)">
			<param name="Sh">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="Sh">hiddenmemberparam</param>
			<param name="Target">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Sync(Microsoft.Office.Core.MsoSyncEventType)">
			<param name="SyncEventType">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowActivate(Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowResize(Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Acos(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Acosh(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.And(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Asc(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Asin(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Asinh(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Atan2(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Atanh(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.AveDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Average(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BahtText(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BetaInv(System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.BinomDist(System.Double,System.Double,System.Double,System.Boolean)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ceiling(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiDist(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiInv(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ChiTest(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Choose(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Clean(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Combin(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Confidence(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Correl(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Cosh(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CountBlank(Microsoft.Office.Interop.Excel.Range)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CountIf(Microsoft.Office.Interop.Excel.Range,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Covar(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.CritBinom(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DAverage(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Days360(System.Object,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Db(System.Double,System.Double,System.Double,System.Double,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dbcs(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DCount(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DCountA(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Degrees(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DevSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DGet(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DMax(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DMin(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Dollar(System.Double,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DProduct(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DStDev(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DStDevP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DSum(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DVar(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.DVarP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Even(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ExponDist(System.Double,System.Double,System.Boolean)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Fact(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FDist(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Find(System.String,System.String,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FindB(System.String,System.String,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FInv(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Fisher(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FisherInv(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Fixed(System.Double,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Floor(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Forecast(System.Double,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Frequency(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.FTest(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Fv(System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GammaInv(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GammaLn(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.GeoMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.HarMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.HypGeomDist(System.Double,System.Double,System.Double,System.Double)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Index(System.Object,System.Double,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Intercept(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ipmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Irr(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsErr(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsError(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsLogical(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsNA(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsNonText(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsNumber(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ispmt(System.Double,System.Double,System.Double,System.Double)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsText(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.IsThaiDigit(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Kurt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Large(System.Object,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ln(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Log(System.Double,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Log10(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LogInv(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.LogNormDist(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Lookup(System.Object,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Match(System.Object,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MDeterm(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MInverse(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MIrr(System.Object,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.MMult(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Mode(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NegBinomDist(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NormInv(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NormSDist(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NormSInv(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.NPer(System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Odd(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Or(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Pearson(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Percentile(System.Object,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.PercentRank(System.Object,System.Double,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Permut(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Phonetic(Microsoft.Office.Interop.Excel.Range)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Pmt(System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Poisson(System.Double,System.Double,System.Boolean)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Power(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Ppmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Prob(System.Object,System.Object,System.Double,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Product(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Proper(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Quartile(System.Object,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Radians(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Rank(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Rate(System.Double,System.Double,System.Double,System.Object,System.Object,System.Object)">
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Rept(System.String,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Roman(System.Double,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Round(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RoundBahtDown(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RoundBahtUp(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RoundDown(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RoundUp(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RSq(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.RTD(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="topic24">hiddenmemberparam</param>
			<param name="topic27">hiddenmemberparam</param>
			<param name="topic26">hiddenmemberparam</param>
			<param name="topic21">hiddenmemberparam</param>
			<param name="topic20">hiddenmemberparam</param>
			<param name="topic23">hiddenmemberparam</param>
			<param name="topic22">hiddenmemberparam</param>
			<param name="topic25">hiddenmemberparam</param>
			<param name="topic8">hiddenmemberparam</param>
			<param name="topic16">hiddenmemberparam</param>
			<param name="topic17">hiddenmemberparam</param>
			<param name="topic18">hiddenmemberparam</param>
			<param name="topic19">hiddenmemberparam</param>
			<param name="topic12">hiddenmemberparam</param>
			<param name="topic13">hiddenmemberparam</param>
			<param name="topic10">hiddenmemberparam</param>
			<param name="topic11">hiddenmemberparam</param>
			<param name="topic9">hiddenmemberparam</param>
			<param name="server">hiddenmemberparam</param>
			<param name="topic14">hiddenmemberparam</param>
			<param name="topic15">hiddenmemberparam</param>
			<param name="topic3">hiddenmemberparam</param>
			<param name="topic2">hiddenmemberparam</param>
			<param name="topic1">hiddenmemberparam</param>
			<param name="topic28">hiddenmemberparam</param>
			<param name="topic7">hiddenmemberparam</param>
			<param name="topic6">hiddenmemberparam</param>
			<param name="topic5">hiddenmemberparam</param>
			<param name="topic4">hiddenmemberparam</param>
			<param name="progID">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Search(System.String,System.String,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SearchB(System.String,System.String,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Sinh(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Skew(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Sln(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Slope(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Small(System.Object,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Standardize(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.StDevP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.StEyx(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Substitute(System.String,System.String,System.String,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Subtotal(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Sum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumX2MY2(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumX2PY2(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.SumXMY2(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Syd(System.Double,System.Double,System.Double,System.Double)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Tanh(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TDist(System.Double,System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Text(System.Object,System.String)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiDayOfWeek(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiDigit(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiMonthOfYear(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiNumSound(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiNumString(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiStringLength(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ThaiYear(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TInv(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Transpose(System.Object)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Trim(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TrimMean(System.Object,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.TTest(System.Object,System.Object,System.Double,System.Double)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.USDollar(System.Double,System.Double)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)">
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Weekday(System.Object,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.Weibull(System.Double,System.Double,System.Double,System.Boolean)">
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheetFunction.ZTest(System.Object,System.Double,System.Object)">
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Add(System.Object,System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Count">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)">
			<param name="Range">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheets.PrintPreview(System.Object)">
			<param name="EnableChanges">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IWorksheets.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IWorksheets._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IWorksheets.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IXmlDataBinding.LoadSettings(System.String)">
			<param name="Url">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IXmlMap.Export(System.String,System.Object)">
			<param name="Url">hiddenmemberparam</param>
			<param name="Overwrite">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IXmlMap.ExportXml(System.String@)">
			<param name="Data">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IXmlMap.Import(System.String,System.Object)">
			<param name="Url">hiddenmemberparam</param>
			<param name="Overwrite">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IXmlMap.ImportXml(System.String,System.Object)">
			<param name="XmlData">hiddenmemberparam</param>
			<param name="Overwrite">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IXmlMaps.Add(System.String,System.Object)">
			<param name="RootElementName">hiddenmemberparam</param>
			<param name="Schema">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IXmlMaps._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IXmlMaps.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IXmlNamespaces.InstallManifest(System.String,System.Object)">
			<param name="InstallForAllUsers">hiddenmemberparam</param>
			<param name="Path">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IXmlNamespaces.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IXmlSchemas._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.IXmlSchemas.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.IXPath.SetValue(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Object,System.Object)">
			<param name="Map">hiddenmemberparam</param>
			<param name="Repeating">hiddenmemberparam</param>
			<param name="XPath">hiddenmemberparam</param>
			<param name="SelectionNamespace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Label.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Label.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Label.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Label.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Labels.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Labels.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Labels.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Labels.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Labels.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Labels.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.LeaderLines">
			<summary>Represents leader lines on a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Legend">
			<summary>Represents the legend in a chart.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Legend.LegendEntries(System.Object)">
			<summary>Returns an object that represents either a single legend entry (a <see cref="T:Microsoft.Office.Interop.Excel.LegendEntry"></see> object) or a collection of legend entries (a <see cref="T:Microsoft.Office.Interop.Excel.LegendEntries"></see> object) for the legend.</summary>
			<param name="Index">Optional Object. The number of the legend entry.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.LegendEntries">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.LegendEntry"></see> objects in the specified chart legend.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.LegendEntries.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.LegendEntry">
			<summary>Represents a legend entry in a chart legend.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.LegendKey">
			<summary>Represents a legend key in a chart legend.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Line.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Line.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.LineFormat">
			<summary>Represents line and arrowhead formatting.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Lines.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Y2">hiddenmemberparam</param>
			<param name="X2">hiddenmemberparam</param>
			<param name="X1">hiddenmemberparam</param>
			<param name="Y1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Lines.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Lines.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Lines.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.LinkFormat">
			<summary>Contains linked OLE object properties.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBox.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBox.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListBox.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListBox.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBoxes.AddItem(System.Object,System.Object)">
			<param name="Text">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBoxes.RemoveItem(System.Int32,System.Object)">
			<param name="Count">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListBoxes.List(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListBoxes.Selected(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ListColumn">
			<summary>Represents a column in a list. The ListColumn object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.ListColumns"></see> collection. The ListColumns collection contains all the columns in a list (<see cref="T:Microsoft.Office.Interop.Excel.ListObject"></see> object).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ListColumns">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn"></see> objects in the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject"></see> object. Each ListColumn object represents a column in the list.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListColumns.Add(System.Object)">
			<summary>Adds a new column to the list object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListColumn"></see> object.</summary>
			<param name="Position">Optional Object. Specifies the relative position of the new column that starts at 1. The previous column at this position is shifted outward.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListColumns._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListColumns.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ListDataFormat">
			<summary>The ListDataFormat object holds all the data type properties of the <see cref="T:Microsoft.Office.Interop.Excel.ListColumn"></see> object. These properties are read-only.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListDataFormat.Type">
			<summary>Indicates the data type of the list column. Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlListDataType"></see>.</summary>
			<returns>Required. An expression that returns a <see cref="T:Microsoft.Office.Interop.Excel.ListDataFormat"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ListObject">
			<summary>Represents a list object on a worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListObject.Publish(System.Object,System.Boolean)">
			<summary>Publishes the <see cref="T:Microsoft.Office.Interop.Excel.ListObject"></see> object to a server that is running Microsoft Windows SharePoint Services.</summary>
			<param name="LinkSource">Required Boolean.</param>
			<param name="Target">Required Object. Contains an Array of Strings. The following table describes the elements of this array:Element#Contents0URL of SharePoint server1ListName (Display Name)2Description of the list. Optional.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListObject.Resize(Microsoft.Office.Interop.Excel.Range)">
			<summary>The Resize method allows a <see cref="T:Microsoft.Office.Interop.Excel.ListObject"></see> object to be resized over a new range.</summary>
			<param name="Range">Required Range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListObject.UpdateChanges(Microsoft.Office.Interop.Excel.XlListConflict)">
			<summary>Updates the list on a Microsoft Windows SharePoint Services site with the changes made to the list in the worksheet.</summary>
			<param name="iConflictType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlListConflict"></see>. Conflict resolution options.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ListObjects">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListObject"></see> objects on a worksheet. Each <see cref="T:Microsoft.Office.Interop.Excel.ListObject"></see> object represents a list in the worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListObjects.Add(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object)">
			<summary>Creates a new list object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject"></see> object.</summary>
			<param name="LinkSource">Optional Boolean. Indicates whether an external data source is to be linked to the ListObject object. If SourceType is xlSrcExternal, default is True. Invalid if SourceType is xlSrcRange, and will return an error if not omitted.</param>
			<param name="Source">Optional when SourceType is xlSrcRange. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object representing the data source. If omitted, the Source will default to the range returned by list range detection code. Required when SourceType is xlSrcExternal. An array of String values specifying a connection to the source.Element#Contents0URL to SharePoint site 1ListName 2ViewGUID</param>
			<param name="XlListObjectHasHeaders">Optional Object. An <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess"></see> constant that indicates whether the data being imported has column labels. If the Source does not contain headers, Excel will automatically generate headers.</param>
			<param name="SourceType">Optional XlListObjectSourceType. Indicates the kind of source for the query. Can be one of the following XlListObjectSourceType constants: xlSrcExternal or xlSrcRange. If omitted, the SourceType will default to xlSrcRange.</param>
			<param name="Destination">Optional Object. A Range object specifying a single-cell reference as the destination for the top-left corner of the new list object. If the Range object refers to more than one cell, an error is generated. The Destination argument must be specified when SourceType is set to xlSrcExternal. The Destination argument is ignored if SourceType is set to xlSrcRange. The destination range must be on the worksheet that contains the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObjects"></see> collection. New columns will be inserted at the Destination to fit the new list. Therefore, existing data will not be overwritten.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListObjects._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListObjects.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ListRow">
			<summary>Represents a row in a List object. The ListRow object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.ListRows"></see> collection. The ListRows collection contains all the rows in a list object.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ListRows">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListRow"></see> objects in the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObject"></see> object. Each ListRow object represents a row in the list.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ListRows.Add(System.Object)">
			<summary>Adds a new row to the list object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListRow"></see> object.</summary>
			<param name="Position">Optional Integer. Specifies the relative position of the new row.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListRows._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ListRows.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Mailer">
			<summary>You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.MenuBars.Add(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.MenuBars._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.MenuBars.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.MenuItems.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="ShortcutKey">hiddenmemberparam</param>
			<param name="StatusBar">hiddenmemberparam</param>
			<param name="Caption">hiddenmemberparam</param>
			<param name="HelpContextID">hiddenmemberparam</param>
			<param name="HelpFile">hiddenmemberparam</param>
			<param name="Restore">hiddenmemberparam</param>
			<param name="OnAction">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.MenuItems.AddMenu(System.String,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Caption">hiddenmemberparam</param>
			<param name="Restore">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.MenuItems._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.MenuItems.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Menus.Add(System.String,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Caption">hiddenmemberparam</param>
			<param name="Restore">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Menus._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Menus.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module.InsertFile(System.Object,System.Object)">
			<param name="Filename">hiddenmemberparam</param>
			<param name="Merge">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="DrawingObjects">hiddenmemberparam</param>
			<param name="UserInterfaceOnly">hiddenmemberparam</param>
			<param name="Scenarios">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="CreateBackup">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="FileFormat">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="TextCodepage">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="ReadOnlyRecommended">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Module.Unprotect(System.Object)">
			<param name="Password">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Modules._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Modules.Add(System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Count">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Modules.Copy(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Modules.Move(System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="After">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Modules.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="PrToFileName">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Modules.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Modules._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Modules.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Name">
			<summary>Represents a defined name for a range of cells.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Names">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Name"></see> objects in the application or workbook. Each Name object represents a defined name for a range of cells. Names can be either built-in names — such as Database, Print_Area, and Auto_Open — or custom names.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Names._Default(System.Object,System.Object,System.Object)">
			<param name="RefersTo">hiddenmemberparam</param>
			<param name="IndexLocal">hiddenmemberparam</param>
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Defines a new name. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Name"></see> object.</summary>
			<param name="RefersTo">Optional Object. Required unless one of the other RefersTo arguments is specified. Describes what the name refers to (using A1-style notation). Note Nothing is returned if the reference does not exist.</param>
			<param name="Visible">Optional Object. True to define the name normally. False to define the name as a hidden name (that is, it doesn't appear in either the Define Name, Paste Name, or Goto dialog box). The default value is True.</param>
			<param name="ShortcutKey">Optional Object. The macro shortcut key. Must be a single letter, such as "z" or "Z". Applies only for command macros.</param>
			<param name="Category">Optional Object. The category of the macro or function if MacroType is 1 or 2. The category is used in the Function Wizard. Existing categories can be referred to either by number (starting at 1) or by name (in the language of the macro). Microsoft Excel creates a new category if the specified category doesn't already exist.</param>
			<param name="Name">Optional Object. Required if NameLocal isn't specified. The text to use as the name. Names cannot include spaces and cannot look like cell references.</param>
			<param name="MacroType">Optional Object. The macro type, as shown in the following table.ValueMeaning1User-defined function (Function procedure)2Macro (also known as Sub procedure)3 or omittedNone (that is, the name doesn't refer to a user-defined function or macro)</param>
			<param name="RefersToR1C1Local">Optional Object. Required unless one of the other RefersTo arguments is specified. Describes what the name refers to (in the language of the user, using R1C1-style notation).</param>
			<param name="RefersToLocal">Optional Object. Required unless one of the other RefersTo arguments is specified. Describes what the name refers to (in the language of the user, using A1-style notation).</param>
			<param name="NameLocal">Optional Object. Required if Name isn't specified. The text to use as the name (in the language of the user). Names cannot include spaces and cannot look like cell references.</param>
			<param name="CategoryLocal">Optional Object. Required if Category isn't specified. Text identifying the category of a custom function in the language of the user.</param>
			<param name="RefersToR1C1">Optional Object. Required unless one of the other RefersTo arguments is specified. Describes what the name refers to (using R1C1-style notation).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Names.Item(System.Object,System.Object,System.Object)">
			<summary>Returns a single <see cref="T:Microsoft.Office.Interop.Excel.Name"></see> object from a <see cref="T:Microsoft.Office.Interop.Excel.Names"></see> collection.</summary>
			<param name="RefersTo">Optional Object. What the name refers to. You use this argument to identify a name by what it refers to.</param>
			<param name="IndexLocal">Optional Object. The name of the defined name in the language of the user. No names will be translated if you use this argument.</param>
			<param name="Index">Optional Object. The name or number of the defined name to be returned.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ODBCError">
			<summary>Represents an ODBC error generated by the most recent ODBC query.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ODBCErrors">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.ODBCError"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ODBCErrors.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ODBCErrors._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.OLEDBError">
			<summary>Represents an OLE DB error returned by the most recent OLE DB query.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.OLEDBErrors">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.OLEDBError"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEDBErrors.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.OLEDBErrors._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.OLEFormat">
			<summary>Contains OLE object properties.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEFormat.Activate">
			<summary>Activates the object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEFormat.Verb(System.Object)">
			<summary>Sends a verb to the server of the specified OLE object.</summary>
			<param name="Verb">Optional Object. The verb that the server of the OLE object should act on. If this argument is omitted, the default verb is sent. The available verbs are determined by the object's source application. Typical verbs for an OLE object are Open and Primary (represented by the <see cref="T:Microsoft.Office.Interop.Excel.XlOLEVerb"></see> constants xlOpen and xlPrimary).</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.OLEObject">
			<summary>Represents an ActiveX control or a linked or embedded OLE object on a worksheet. The OLEObject object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects"></see> collection. The OLEObjects collection contains all the OLE objects on a single worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">classclassparam</param>
			<param name="Appearance">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Select(System.Object)">
			<param name="Replace">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEObjectClass.Verb(Microsoft.Office.Interop.Excel.XlOLEVerb)">
			<param name="Verb">classclassparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event">
			<summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.OLEObject"></see> object events.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.GotFocus">
			<summary>Occurs when an ActiveX control gets input focus.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.LostFocus">
			<summary>Occurs when an ActiveX control loses input focus.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.OLEObjectEvents_GotFocusEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.GotFocus"></see> event. The GotFocus event occurs when an ActiveX control gets input focus.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.OLEObjectEvents_LostFocusEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.OLEObjectEvents_Event.LostFocus"></see> event. The LostFocus event occurs when an ActiveX control loses input focus.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.OLEObjects">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.OLEObject"></see> objects on the specified worksheet. Each OLEObject object represents an ActiveX control or a linked or embedded OLE object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Adds a new OLE object to a sheet. Returns an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject"></see> object.</summary>
			<param name="IconLabel">Optional Object. A string that specifies a label to display beneath the icon. This is used only if DisplayAsIcon is True. If this argument is omitted or is an empty string (""), no caption is displayed.</param>
			<param name="Top">Optional Object. The initial coordinates of the new object in points, relative to the upper-left corner of cell A1 on a worksheet, or to the upper-left corner of a chart.</param>
			<param name="DisplayAsIcon">Optional Object. True to display the new OLE object either as an icon or as its regular picture. If this argument is True, IconFileName and IconIndex can be used to specify an icon.</param>
			<param name="IconFileName">Optional Object. A string that specifies the file that contains the icon to be displayed. This argument is used only if DisplayAsIcon is True. If this argument isn't specified or the file contains no icons, the default icon for the OLE class is used</param>
			<param name="Link">Optional Object. True to have the new OLE object based on FileName be linked to that file. If the object isn't linked, the object is created as a copy of the file. The default value is False.</param>
			<param name="ClassType">Optional Object. (You must specify either ClassType or FileName.) A string that contains the programmatic identifier for the object to be created. If ClassType is specified, FileName and Link are ignored.</param>
			<param name="Width">Optional Object. The initial size of the new object in points.</param>
			<param name="Height">Optional Object. The initial size of the new object, in points.</param>
			<param name="Left">Optional Object. The initial coordinates of the new object in points, relative to the upper-left corner of cell A1 on a worksheet, or to the upper-left corner of a chart.</param>
			<param name="IconIndex">Optional Object. The number of the icon in the icon file. This is used only if DisplayAsIcon is True and IconFileName refers to a valid file that contains icons. If an icon with the given index number doesn't exist in the file specified by IconFileName, the first icon in the file is used.</param>
			<param name="Filename">Optional Object. (You must specify either ClassType or FileName.) A string that specifies the file to be used to create the OLE object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEObjects.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<summary>Copies the selected object to the Clipboard as a picture.</summary>
			<param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat"></see>. The format of the picture.</param>
			<param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance"></see>. Specifies how the picture should be copied.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OLEObjects.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OptionButton.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OptionButton.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OptionButton.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.OptionButton.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OptionButtons.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OptionButtons.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.OptionButtons.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.OptionButtons.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Outline">
			<summary>Represents an outline on a worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Outline.ShowLevels(System.Object,System.Object)">
			<summary>Displays the specified number of row and/or column levels of an outline.</summary>
			<param name="ColumnLevels">Optional Object. Specifies the number of column levels of an outline to display. If the outline has fewer levels than the number specified, Microsoft Excel displays all the levels. If this argument is 0 (zero) or is omitted, no action is taken on columns.</param>
			<param name="RowLevels">Optional Object. Specifies the number of row levels of an outline to display. If the outline has fewer levels than the number specified, Microsoft Excel displays all the levels. If this argument is 0 (zero) or is omitted, no action is taken on rows.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Oval.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Oval.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Oval.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Oval.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Ovals.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Ovals.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Ovals.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Ovals.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Ovals.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Ovals.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PageSetup">
			<summary>Represents the page setup description. The PageSetup object contains all page setup attributes (left margin, bottom margin, paper size, and so on) as properties.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PageSetup.PrintQuality(System.Object)">
			<summary>Returns or sets the print quality.</summary>
			<param name="Index">Optional Object. Horizontal print quality (1) or vertical print quality (2). Some printers may not support vertical print quality. If you don’t specify this argument, the PrintQuality property returns (or can be set to) a two-element array that contains both horizontal and vertical print quality.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Pane">
			<summary>Represents a pane of a window.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pane.LargeScroll(System.Object,System.Object,System.Object,System.Object)">
			<summary>Scrolls the contents of the window by pages.</summary>
			<param name="ToRight">Optional Object. The number of pages to scroll the contents to the right.</param>
			<param name="Up">Optional Object. The number of pages to scroll the contents up.</param>
			<param name="ToLeft">Optional Object. The number of pages to scroll the contents to the left.</param>
			<param name="Down">Optional Object. The number of pages to scroll the contents down.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pane.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
			<summary>Scrolls the pane so that the contents of a specified rectangular area are displayed in either the upper-left or lower-right corner of the pane.</summary>
			<param name="Width">Required Integer. The width of the rectangle in points.</param>
			<param name="Start">Optional Object. True to have the upper-left corner of the rectangle appear in the upper-left corner of the pane. False to have the lower-right corner of the rectangle appear in the lower-right corner of the pane. The default value is True.</param>
			<param name="Height">Required Integer. The height of the rectangle in points.</param>
			<param name="Left">Required Integer. The horizontal position of the rectangle (in points) from the left edge of the pane.</param>
			<param name="Top">Required Integer. The vertical position of the rectangle (in points) from the top of the pane.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pane.SmallScroll(System.Object,System.Object,System.Object,System.Object)">
			<summary>Scrolls the contents of the window by rows or columns.</summary>
			<param name="ToRight">Optional Object. The number of columns to scroll the contents to the right.</param>
			<param name="Up">Optional Object. The number of rows to scroll the contents up.</param>
			<param name="ToLeft">Optional Object. The number of columns to scroll the contents to the left.</param>
			<param name="Down">Optional Object. The number of rows to scroll the contents down.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Panes">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Pane"></see> objects shown in the specified window.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Panes._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Panes.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Parameter">
			<summary>Represents a single parameter used in a parameter query. The Parameter object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Parameters"></see> collection.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Parameter.SetParam(Microsoft.Office.Interop.Excel.XlParameterType,System.Object)">
			<summary>Defines a parameter for the specified query table.</summary>
			<param name="Value">Required Object. The value of the specified parameter, as shown in the description of the Type argument.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlParameterType"></see>.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Parameters">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.Parameter"></see> objects for the specified query table. Each Parameter object represents a single query parameter. Every query table contains a Parameters collection, but the collection is empty unless the query table is using a parameter query.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Parameters.Add(System.String,System.Object)">
			<summary>Creates a new query parameter. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Parameter"></see> object.</summary>
			<param name="iDataType">Optional Object. The data type of the parameter. Can be any <see cref="T:Microsoft.Office.Interop.Excel.XlParameterDataType"></see> constant.</param>
			<param name="Name">Required String. The name of the specified parameter. The parameter name should match the parameter clause in the SQL statement.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Parameters.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Parameters._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Phonetic">
			<summary>Contains information about a specific phonetic text string in a cell.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Phonetics">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic"></see> objects in the specified range. Each Phonetic object contains information about a specific phonetic text string.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Phonetics.Add(System.Int32,System.Int32,System.String)">
			<summary>Adds phonetic text to the specified cell.</summary>
			<param name="Length">Required Integer. The number of characters from the Start position to the end of the text in the cell.</param>
			<param name="Text">Required String. Collectively, the characters that represent the phonetic text in the cell.</param>
			<param name="Start">Required Integer. The position that represents the first character in the specified cell.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Phonetics._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Phonetics.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number of the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Picture.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Picture.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PictureFormat">
			<summary>Contains properties and methods that apply to pictures and OLE objects.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PictureFormat.IncrementBrightness(System.Single)">
			<summary>Changes the brightness of the picture by the specified amount.</summary>
			<param name="Increment">Required Single. Specifies how much to change the value of the <see cref="P:Microsoft.Office.Interop.Excel.PictureFormat.Brightness"></see> property for the picture. A positive value makes the picture brighter; a negative value makes the picture darker.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PictureFormat.IncrementContrast(System.Single)">
			<summary>Changes the contrast of the picture by the specified amount.</summary>
			<param name="Increment">Required Single. Specifies how much to change the value of the <see cref="P:Microsoft.Office.Interop.Excel.PictureFormat.Contrast"></see> property for the picture. A positive value increases the contrast; a negative value decreases the contrast.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pictures.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pictures.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pictures.Insert(System.String,System.Object)">
			<param name="Filename">hiddenmemberparam</param>
			<param name="Converter">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pictures.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pictures.Paste(System.Object)">
			<param name="Link">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Pictures.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotCache">
			<summary>Represents the memory cache for a PivotTable report.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotCache.CreatePivotTable(System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates a PivotTable report based on a <see cref="T:Microsoft.Office.Interop.Excel.PivotCache"></see> object.</summary>
			<param name="TableDestination">Required Object. The cell in the upper-left corner of the PivotTable report’s destination range (the range on the worksheet where the resulting PivotTable report will be placed). The destination range must be on a worksheet in the workbook that contains the PivotCache object specified by expression.</param>
			<param name="DefaultVersion">Optional Object. The default version of the PivotTable report.</param>
			<param name="ReadData">Optional Object. True to create a PivotTable cache that contains all of the records from the external database; this cache can be very large. False to enable setting some of the fields as server-based page fields before the data is actually read.</param>
			<param name="TableName">Optional Object. The name of the new PivotTable report.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotCache.SaveAsODC(System.String,System.Object,System.Object)">
			<summary>Saves the PivotTable cache source as a Microsoft Office Data Connection file.</summary>
			<param name="ODCFileName">Required String. Location to save the file.</param>
			<param name="Keywords">Optional Object. Space-separated keywords that can be used to search for this file.</param>
			<param name="Description">Optional Object. Description that will be saved in the file.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotCaches">
			<summary>Represents the collection of memory caches from the PivotTable reports in a workbook.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotCaches.Add(Microsoft.Office.Interop.Excel.XlPivotTableSourceType,System.Object)">
			<summary>Adds a new PivotTable cache to a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches"></see> collection.</summary>
			<param name="SourceData">Optional Object. The data for the new PivotTable cache. This argument is required if SourceType isn't xlExternal. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object, an array of ranges, or a text constant that represents the name of an existing PivotTable report. For an external database, this is a two-element array. The first element is the connection string specifying the provider of the data. The second element is the SQL query string used to get the data. If you specify this argument, you must also specify SourceType.</param>
			<param name="SourceType">Required <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType"></see>. The source of the PivotTable cache data. Can be one of the following XlPivotTableSourceType constants:xlConsolidationxlDatabasexlExternalxlPivotTablexlScenario</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotCaches.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotCaches._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotCell">
			<summary>Represents a cell in a PivotTable report.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotField">
			<summary>Represents a field in a PivotTable report. The PivotField object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.PivotFields"></see> collection. The PivotFields collection contains all the fields in a PivotTable report, including hidden fields.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotField.AddPageItem(System.String,System.Object)">
			<summary>Adds an additional item to a multiple item page field.</summary>
			<param name="ClearList">Optional Object. If False (default), adds a page item to the existing list. If True, deletes all current items and adds Item.</param>
			<param name="Item">Required String. Source name of a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> object, corresponding to the specific Online Analytical Processing (OLAP) member unique name.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotField.AutoShow(System.Int32,System.Int32,System.Int32,System.String)">
			<summary>Displays the number of top or bottom items for a row, page, or column field in the specified PivotTable report.</summary>
			<param name="Range">Required Integer. The location at which to start showing items. Can be either of the following constants: xlTop or xlBottom.</param>
			<param name="Count">Required Integer. The number of items to be shown.</param>
			<param name="Field">Required String. The name of the base data field. You must specify the unique name (as returned from the <see cref="P:Microsoft.Office.Interop.Excel.PivotField.SourceName"></see> property) and not the displayed name.</param>
			<param name="Type">Required Integer. Use xlAutomatic to cause the specified PivotTable report to show the items that match the specified criteria. Use xlManual to disable this feature.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotField.AutoSort(System.Int32,System.String)">
			<summary>Establishes automatic field-sorting rules for PivotTable reports.</summary>
			<param name="Field">Required String. The name of the sort key field. You must specify the unique name (as returned from the <see cref="P:Microsoft.Office.Interop.Excel.PivotField.SourceName"></see> property) and not the displayed name.</param>
			<param name="Order">Required <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder"></see>. The sort order.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotField.PivotItems(System.Object)">
			<summary>Returns an object that represents either a single PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> object) or a collection of all the visible and hidden items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems"></see> object) in the specified field. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the item to be returned.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotField.ChildItems(System.Object)">
			<summary>Returns an object that represents either a single PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> object) or a collection of all the items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems"></see> object) that are group children in the specified field, or children of the specified item. Read-only.</summary>
			<param name="Index">Optional Object. The item name or number (can be an array to specify more than one item).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotField.HiddenItems(System.Object)">
			<summary>Returns an object that represents either a single hidden PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> object) or a collection of all the hidden items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems"></see> object) in the specified field. Read-only.</summary>
			<param name="Index">Optional Object. The number or name of the item to be returned (can be an array to specify more than one item).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotField.ParentItems(System.Object)">
			<summary>Returns an object that represents either a single PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> object) or a collection of all the items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems"></see> object) that are group parents in the specified field. The specified field must be a group parent of another field. Read-only.</summary>
			<param name="Index">Optional Object. The number or name of the item to be returned (can be an array to specify more than one item).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotField.Subtotals(System.Object)">
			<summary>Returns or sets subtotals displayed with the specified field. Valid only for non-data fields. Read/write Object.</summary>
			<param name="Index">Optional Object. A subtotal index, as shown in the following table. If this argument is omitted, the Subtotals method returns an array that contains a Boolean value for each subtotal.IndexMeaning1Automatic2Sum3Count4Average5Max6Min7Product8Count Nums9StdDev10StdDevp11Var12VarpIf an index is True, the field shows that subtotal. If index 1 (Automatic) is True, all other values are set to False.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotField.VisibleItems(System.Object)">
			<summary>Returns an object that represents either a single visible PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> object) or a collection of all the visible items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems"></see> object) in the specified field. Read-only.</summary>
			<param name="Index">Optional Object. The number or name of the item to be returned (can be an array to specify more than one item).</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotFields">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> objects in a PivotTable report.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotFields.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotFormula">
			<summary>Represents a formula used to calculate results in a PivotTable report.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotFormulas">
			<summary>Represents the collection of formulas for a PivotTable report. Each formula is represented by a <see cref="T:Microsoft.Office.Interop.Excel.PivotFormula"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotFormulas._Add(System.String)">
			<param name="Formula">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotFormulas.Add(System.String,System.Object)">
			<summary>Creates a new PivotTable formula. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotFormula"></see> object.</summary>
			<param name="Formula">Required String. The new PivotTable formula.</param>
			<param name="UseStandardFormula">Optional Object. A standard PivotTable formula.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotFormulas.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotFormulas._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotItem">
			<summary>Represents an item in a PivotTable field. The items are the individual data entries in a field category. The PivotItem object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems"></see> collection. The PivotItems collection contains all the items in a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotItem.ChildItems(System.Object)">
			<summary>Returns an object that represents either a single PivotTable item (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> object) or a collection of all the items (a <see cref="T:Microsoft.Office.Interop.Excel.PivotItems"></see> object) that are group children in the specified field or children of the specified item. Read-only.</summary>
			<param name="Index">Optional Object. The item name or number (can be an array to specify more than one item).</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotItemList">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> objects in the specified PivotTable. Each PivotItem represents an item in a PivotTable field.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotItemList.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotItemList._Default(System.Object)">
			<param name="Field">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotItems">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.PivotItem"></see> objects in a PivotTable field. The items are the individual data entries in a field category.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotItems.Add(System.String)">
			<summary>Creates a new PivotTable item.</summary>
			<param name="Name">Required String. The name of the new PivotTable item.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotLayout">
			<summary>Represents the placement of fields in a PivotChart report.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotLayout.AddFields(System.Object,System.Object,System.Object,System.Object)">
			<param name="PageFields">hiddenmemberparam</param>
			<param name="ColumnFields">hiddenmemberparam</param>
			<param name="RowFields">hiddenmemberparam</param>
			<param name="AppendField">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotLayout.ColumnFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotLayout.DataFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotLayout.HiddenFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotLayout.PageFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotLayout.PivotFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotLayout.RowFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotLayout.VisibleFields(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotTable">
			<summary>Represents a PivotTable report on a worksheet. The PivotTable object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTables"></see> collection. The PivotTables collection contains all the PivotTable objects on a single worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable._PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode)">
			<param name="Name">hiddenmemberparam</param>
			<param name="Mode">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.AddDataField(System.Object,System.Object,System.Object)">
			<summary>Adds a data field to a PivotTable report. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object that represents the new data field.</summary>
			<param name="Caption">Optional Object. The label used in the PivotTable report to identify this data field.</param>
			<param name="Field">Required Object. The unique field on the server. If the source data is Online Analytical Processing (OLAP), the unique field is a cube field. If the source data is non-OLAP (non-OLAP source data), the unique field is a PivotTable field.</param>
			<param name="Function">Optional Object. The function performed in the added data field.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.AddFields(System.Object,System.Object,System.Object,System.Object)">
			<summary>Adds row, column, and page fields to a PivotTable report or PivotChart report.</summary>
			<param name="PageFields">Optional Object. Specifies a field name (or an array of field names) to be added as pages or to be added to the page area.</param>
			<param name="ColumnFields">Optional Object. Specifies a field name (or an array of field names) to be added as columns or to be added to the series axis.</param>
			<param name="RowFields">Optional Object. Specifies a field name (or an array of field names) to be added as rows or to be added to the category axis.</param>
			<param name="AddToTable">Optional Object. Applies only to PivotTable reports. True to add the specified fields to the report (none of the existing fields are replaced). False to replace existing fields with the new fields. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.CreateCubeFile(System.String,System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates a cube file from a PivotTable report connected to an Online Analytical Processing (OLAP) data source.</summary>
			<param name="Members">Optional Object. An array of string arrays. The elements correspond, in order, to the hierarchies represented in the Levels array. Each element is an array of string arrays that consists of the unique names of the top level members in the dimension that are to be included in the slice.</param>
			<param name="Measures">Optional Object. An array of unique names of measures that are to be part of the slice.</param>
			<param name="Properties">Optional Boolean. False results in no member properties being included in the slice. The default value is True.</param>
			<param name="File">Required String. The name of the cube file to be created. It will overwrite the file if it already exists.</param>
			<param name="Levels">Optional Object. An array of strings. Each array item is a unique level name. It represents the lowest level of a hierarchy that is in the slice.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.Dummy15(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Arg28">hiddenmemberparam</param>
			<param name="Arg29">hiddenmemberparam</param>
			<param name="Arg24">hiddenmemberparam</param>
			<param name="Arg25">hiddenmemberparam</param>
			<param name="Arg26">hiddenmemberparam</param>
			<param name="Arg27">hiddenmemberparam</param>
			<param name="Arg20">hiddenmemberparam</param>
			<param name="Arg21">hiddenmemberparam</param>
			<param name="Arg22">hiddenmemberparam</param>
			<param name="Arg23">hiddenmemberparam</param>
			<param name="Arg30">hiddenmemberparam</param>
			<param name="Arg8">hiddenmemberparam</param>
			<param name="Arg9">hiddenmemberparam</param>
			<param name="Arg6">hiddenmemberparam</param>
			<param name="Arg7">hiddenmemberparam</param>
			<param name="Arg4">hiddenmemberparam</param>
			<param name="Arg5">hiddenmemberparam</param>
			<param name="Arg2">hiddenmemberparam</param>
			<param name="Arg3">hiddenmemberparam</param>
			<param name="Arg14">hiddenmemberparam</param>
			<param name="Arg1">hiddenmemberparam</param>
			<param name="Arg12">hiddenmemberparam</param>
			<param name="Arg11">hiddenmemberparam</param>
			<param name="Arg10">hiddenmemberparam</param>
			<param name="Arg16">hiddenmemberparam</param>
			<param name="Arg15">hiddenmemberparam</param>
			<param name="Arg13">hiddenmemberparam</param>
			<param name="Arg19">hiddenmemberparam</param>
			<param name="Arg18">hiddenmemberparam</param>
			<param name="Arg17">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)">
			<summary>Sets a PivotTable report to one of the predefined indented, nonindented, or cross-tabulated formats.</summary>
			<param name="Format">Required <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFormatType"></see>. Specifies the type of report formatting to be applied to the specified PivotTable report.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.GetData(System.String)">
			<summary>Returns data from the specified PivotTable cell.</summary>
			<param name="Name">Required String. Describes a single cell in the PivotTable report, using syntax similar to the <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)"></see> method or the PivotTable report references in calculated item formulas.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.GetPivotData(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Returns a Range object with information about a data item in a PivotTable report.</summary>
			<param name="Field8">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field9">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field1">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field2">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field3">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field4">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field5">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field6">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field7">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field11">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field10">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field13">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Field12">Optional Object. The name of a column or row field in the PivotTable report.</param>
			<param name="Item14">Optional Object. The name of an item in Field14.</param>
			<param name="Item12">Optional Object. The name of an item in Field12.</param>
			<param name="Item13">Optional Object. The name of an item in Field13.</param>
			<param name="Item10">Optional Object. The name of an item in Field10.</param>
			<param name="Item11">Optional Object. The name of an item in Field11.</param>
			<param name="Item1">Optional Object. The name of an item in Field1.</param>
			<param name="Item9">Optional Object. The name of an item in Field9.</param>
			<param name="Item8">Optional Object. The name of an item in Field8.</param>
			<param name="Item7">Optional Object. The name of an item in Field7.</param>
			<param name="Item6">Optional Object. The name of an item in Field6.</param>
			<param name="Item5">Optional Object. The name of an item in Field5.</param>
			<param name="Item4">Optional Object. The name of an item in Field4.</param>
			<param name="Item3">Optional Object. The name of an item in Field3.</param>
			<param name="Item2">Optional Object. The name of an item in Field2.</param>
			<param name="DataField">Optional Object. The name of the field containing the data for the PivotTable.</param>
			<param name="Field14">Optional Object. The name of a column or row field in the PivotTable report.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.PivotFields(System.Object)">
			<summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object) or a collection of both the visible and hidden fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields"></see> object) in the PivotTable report. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the field to be returned.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)">
			<summary>Selects part of a PivotTable report.</summary>
			<param name="Name">Required String. The selection, in standard PivotTable report selection format.</param>
			<param name="UseStandardName">Optional Object. True for recorded macros that will play back in other locales.</param>
			<param name="Mode">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode"></see>. Specifies the structured selection mode.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable"></see> object. This method doesn’t display the PivotTable Wizard. This method isn’t available for OLE DB data sources. Use the <see cref="M:Microsoft.Office.Interop.Excel.PivotTables.Add(Microsoft.Office.Interop.Excel.PivotCache,System.Object,System.Object,System.Object,System.Object)"></see> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</summary>
			<param name="SourceData">Optional Object. The data for the new report. Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object, an array of ranges, or a text constant that represents the name of another report. For an external database, SourceData is an array of strings containing the SQL query string, where each element is up to 255 characters in length. You should use the Connection argument to specify the ODBC connection string. For compatibility with earlier versions of Excel, SourceData can be a two-element array. The first element is the connection string specifying the ODBC source for the data. The second element is the SQL query string used to get the data. If you specify SourceData, you must also specify SourceType. If the active cell is inside the SourceData range, you must specify TableDestination as well.</param>
			<param name="RowGrand">Optional Object. True to show grand totals for rows in the report.</param>
			<param name="BackgroundQuery">Optional Object. True to have Excel perform queries for the report asynchronously (in the background). The default value is False.</param>
			<param name="Connection">Optional Object. A string that contains ODBC settings that allow Excel to connect to an ODBC data source. The connection string has the form "ODBC;&lt;connection string&gt;". This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache"></see> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection"></see> property.</param>
			<param name="HasAutoFormat">Optional Object. True to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</param>
			<param name="PageFieldOrder">Optional Object. The order in which page fields are added to the PivotTable report’s layout. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlOrder"></see> constants: xlDownThenOver or xlOverThenDown. The default value is xlDownThenOver.</param>
			<param name="PageFieldWrapCount">Optional Object. The number of page fields in each column or row in the PivotTable report. The default value is 0 (zero).</param>
			<param name="TableDestination">Optional Object. A Range object specifying where the report should be placed on the worksheet. If this argument is omitted, the report is placed at the active cell.</param>
			<param name="ReadData">Optional Object. True to create a PivotTable cache that contains all records from the external database; this cache can be very large. If ReadData is False, you can set some of the fields as server-based page fields before the data is actually read.</param>
			<param name="Reserved">Optional Object. Not used by Microsoft Excel.</param>
			<param name="AutoPage">Optional Object. Valid only if SourceType is xlConsolidation. True to have Microsoft Excel create a page field for the consolidation. If AutoPage is False, you must create the page field or fields.</param>
			<param name="ColumnGrand">Optional Object. True to show grand totals for columns in the report.</param>
			<param name="OptimizeCache">Optional Object. True to optimize the PivotTable cache when it's constructed. The default value is False.</param>
			<param name="SourceType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType"></see>. The source of the report data.</param>
			<param name="SaveData">Optional Object. True to save data with the report. False to save only the report definition.</param>
			<param name="TableName">Optional Object. A string that specifies the name of the new report.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTable.ShowPages(System.Object)">
			<summary>Creates a new PivotTable report for each item in the page field. Each new report is created on a new worksheet.</summary>
			<param name="PageField">Optional Object. A string that names a single page field in the report.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnFields(System.Object)">
			<summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields"></see> object) that are currently shown as column fields. Read-only.</summary>
			<param name="Index">Optional Object. The field name or number (can be an array to specify more than one field).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotTable.DataFields(System.Object)">
			<summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields"></see> object) that are currently shown as data fields. Read-only.</summary>
			<param name="Index">Optional Object. The field name or number (can be an array to specify more than one field).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotTable.HiddenFields(System.Object)">
			<summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields"></see> object) that are currently not shown as row, column, page, or data fields. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the field to be returned (can be an array to specify more than one field).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotTable.PageFields(System.Object)">
			<summary>Returns an object that represents either a single PivotTable field (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields"></see> object) that are currently showing as page fields. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the field to be returned (can be an array to specify more than one field).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotTable.RowFields(System.Object)">
			<summary>Returns an object that represents either a single field in a PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object) or a collection of all the fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields"></see> object) that are currently showing as row fields. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the field to be returned (can be an array to specify more than one field).</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PivotTable.VisibleFields(System.Object)">
			<summary>Returns an object that represents either a single field in a PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotField"></see> object) or a collection of all the visible fields (a <see cref="T:Microsoft.Office.Interop.Excel.PivotFields"></see> object). Visible fields are shown as row, column, page, or data fields. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the field to be returned (can be an array to specify more than one field).</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PivotTables">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable"></see> objects on the specified worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTables.Add(Microsoft.Office.Interop.Excel.PivotCache,System.Object,System.Object,System.Object,System.Object)">
			<summary>Adds a new PivotTable report. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable"></see> object.</summary>
			<param name="PivotCache">Required PivotCache. The PivotTable cache on which the new PivotTable report is based. The cache provides data for the report.</param>
			<param name="TableDestination">Required Object. The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed). You must specify a destination range on the worksheet that contains the PivotTables object specified by expression.</param>
			<param name="DefaultVersion">Optional Object. The version of Microsoft Excel the PivotTable was originally created in.</param>
			<param name="ReadData">Optional Object. True to create a PivotTable cache that contains all records from the external database; this cache can be very large. False to enable setting some of the fields as server-based page fields before the data is actually read.</param>
			<param name="TableName">Optional Object. The name of the new PivotTable report.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PivotTables.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PlotArea">
			<summary>Represents the plot area of a chart. This is the area where your chart data is plotted.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Point">
			<summary>Represents a single point in a series in a chart.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Point._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
			<param name="HasLeaderLines">hiddenmemberparam</param>
			<param name="LegendKey">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="AutoText">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Point.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Applies data labels to a point in a chart.</summary>
			<param name="ShowValue">Optional Object. The value for the data label.</param>
			<param name="ShowBubbleSize">Optional Object. The bubble size for the data label.</param>
			<param name="Separator">Optional Object. The separator for the data label.</param>
			<param name="HasLeaderLines">Optional Object. For the <see cref="T:Microsoft.Office.Interop.Excel.Chart"></see> and <see cref="T:Microsoft.Office.Interop.Excel.Series"></see> objects, True if the series has leader lines.</param>
			<param name="LegendKey">Optional Object. True to show the legend key next to the point. The default value is False.</param>
			<param name="ShowPercentage">Optional Object. The percentage for the data label.</param>
			<param name="ShowSeriesName">Optional Object. The series name for the data label.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType"></see>. The type of data label to apply. Can be one of the following XlDataLabelsType constants:xlDataLabelsShowBubbleSizesxlDataLabelsShowLabelAndPercent Percentage of the total and category for the point. Available only for pie charts and doughnut charts.xlDataLabelsShowPercent Percentage of the total. Available only for pie charts and doughnut charts.xlDataLabelsShowLabel Category for the point.xlDataLabelsShowNone No data labels.xlDataLabelsShowValue Default. Value for the point (assumed if this argument isn't specified).</param>
			<param name="ShowCategoryName">Optional Object. The category name for the data label.</param>
			<param name="AutoText">Optional Object. True if the object automatically generates appropriate text based on content.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Points">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Point"></see> objects in the specified series in a chart.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Points.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Protection">
			<summary>Represents the various types of protection options available for a worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PublishObject">
			<summary>Represents an item in a workbook that has been saved to a Web page and can be refreshed according to values specified by the properties and methods of the PublishObject object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PublishObject.Publish(System.Object)">
			<summary>Saves an item or a collection of items in a document to a Web page.</summary>
			<param name="Create">Optional Object. If the HTML file exists, setting this argument to True replaces the file, and setting this argument to False inserts the item or items at the end of the file. If the file does not exist, the file is created regardless of the value of the Create argument.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.PublishObjects">
			<summary>A collection of all <see cref="T:Microsoft.Office.Interop.Excel.PublishObject"></see> objects in the workbook. Each PublishObject object represents an item in a workbook that has been saved to a Web page and can be refreshed according to values specified by the properties and methods of the object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.PublishObjects.Add(Microsoft.Office.Interop.Excel.XlSourceType,System.String,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates an object that represents an item in a document saved to a Web page. Such objects facilitate subsequent updates to the Web page while automated changes are being made to the document in Microsoft Excel. Returns a <see cref="T:Microsoft.Office.Interop.Excel.PublishObject"></see> object.</summary>
			<param name="HtmlType">Optional Object. Specifies whether the item is saved as an interactive Microsoft Office Web component or as static text and images. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlHtmlType"></see> constants.ConstantDescriptionxlHtmlCalcItem saved as an interactive Microsoft Office Spreadsheet component.xlHtmlChartItem saved as an interactive Microsoft Office Chart component.xlHtmlListItem saved as an interactive Microsoft Office PivotTable component.xlHtmlStaticItem saved as static text and images.</param>
			<param name="Sheet">Optional Object. The name of the worksheet that was saved as a Web page.</param>
			<param name="Title">Optional Object. The title of the Web page.</param>
			<param name="Source">Optional Object. A unique name used to identify items that have one of the following constants as their SourceType argument: xlSourceAutoFilter, xlSourceChart, xlSourcePivotTable, xlSourcePrintArea, xlSourceQuery, or xlSourceRange. If SourceType is xlSourceRange, Source specifies a range, which can be a defined name. If SourceType is xlSourceChart, xlSourcePivotTable, or xlSourceQuery, Source specifies the name of a chart, PivotTable report, or query table.</param>
			<param name="Filename">Required String. The URL (on the intranet or the Web) or path (local or network) to which the source object was saved.</param>
			<param name="SourceType">Required <see cref="T:Microsoft.Office.Interop.Excel.XlSourceType"></see>. The source type.</param>
			<param name="DivID">Optional Object. The unique identifier used in the HTML DIV tag to identify the item on the Web page.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PublishObjects._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.PublishObjects.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.QueryTable">
			<summary>Represents a worksheet table built from data returned from an external data source, such as a SQL server or a Microsoft Access database. The QueryTable object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables"></see> collection. </summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.Refresh(System.Object)">
			<param name="BackgroundQuery">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.remove_AfterRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_AfterRefreshEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.remove_BeforeRefresh(Microsoft.Office.Interop.Excel.RefreshEvents_BeforeRefreshEventHandler)">
			<param name="__unnamed0">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.QueryTableClass.SaveAsODC(System.String,System.Object,System.Object)">
			<param name="ODCFileName">classclassparam</param>
			<param name="Keywords">classclassparam</param>
			<param name="Description">classclassparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.QueryTables">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.QueryTable"></see> objects. Each QueryTable object represents a worksheet table built from data returned from an external data source.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.QueryTables.Add(System.Object,Microsoft.Office.Interop.Excel.Range,System.Object)">
			<summary>Creates a new query table. Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable"></see> object that represents the new query table.</summary>
			<param name="Connection">Required Object. The data source for the query table. Can be one of the following:A string containing an OLE DB or ODBC connection string. The ODBC connection string has the form "ODBC;&lt;connection string&gt;".A QueryTable object from which the query information is initially copied, including the connection string and the SQL text, but not including the Destination range. Specifying a QueryTable object causes the Sql argument to be ignored.An ADO or DAO Recordset object. Data is read from the ADO or DAO recordset. Microsoft Excel retains the recordset until the query table is deleted or the connection is changed. The resulting query table cannot be edited.A Web query. A string in the form "URL;&lt;url&gt;", where "URL;" is required but not localized and the rest of the string is used for the URL of the Web query.Data Finder. A string in the form "FINDER;&lt;data finder file path&gt;" where "FINDER;" is required but not localized. The rest of the string is the path and file name of a Data Finder file (*.dqy or *.iqy). The file is read when the Add method is run; subsequent calls to the <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.Connection"></see> property of the query table will return strings beginning with "ODBC;" or "URL;" as appropriate.A text file. A string in the form "TEXT;&lt;text file path and name&gt;", where TEXT is required but not localized.</param>
			<param name="Sql">Optional Object. The SQL query string to be run on the ODBC data source. This argument is optional when you're using an ODBC data source You cannot use this argument when a QueryTable object, text file, or ADO or DAO Recordset object is specified as the data source.</param>
			<param name="Destination">Required Range. The cell in the upper-left corner of the query table destination range (the range where the resulting query table will be placed). The destination range must be on the worksheet that contains the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables"></see> object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.QueryTables.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.QueryTables._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Range">
			<summary>Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells, or a 3-D range.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
			<param name="Transpose">hiddenmemberparam</param>
			<param name="Paste">hiddenmemberparam</param>
			<param name="SkipBlanks">hiddenmemberparam</param>
			<param name="Operation">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)">
			<summary>Adds a comment to the range.</summary>
			<param name="Text">Optional Object. The comment text.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)">
			<summary>Filters or copies data from a list based on a criteria range.</summary>
			<param name="CopyToRange">Optional Object. The destination range for the copied rows if Action is xlFilterCopy. Otherwise, this argument is ignored.</param>
			<param name="Unique">Optional Object. True to filter unique records only; False to filter all records that meet the criteria. The default value is False.</param>
			<param name="CriteriaRange">Optional Object. The criteria range. If this argument is omitted, there are no criteria.</param>
			<param name="Action">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction"></see>. Can be one of the following XlFilterAction constants:xlFilterCopyxlFilterInPlace</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)">
			<summary>Applies names to the cells in the specified range.</summary>
			<param name="IgnoreRelativeAbsolute">Optional Object. True to replace references with names, regardless of the reference types of either the names or references; False to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names. The default value is True.</param>
			<param name="UseRowColumnNames">Optional Object. True to use the names of row and column ranges that contain the specified range if names for the range cannot be found; False to ignore the OmitColumn and OmitRow arguments. The default value is True.</param>
			<param name="AppendLast">Optional Object. True to replace the definitions of the names in Names and also replace the definitions of the last names that were defined; False to replace the definitions of the names in Names only. The default value is False.</param>
			<param name="OmitColumn">Optional Object. True to replace the entire reference with the row-oriented name. The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range. The default value is True.</param>
			<param name="Names">Optional Object. An array of the names to be applied. If this argument is omitted, all names on the sheet are applied to the range.</param>
			<param name="Order">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder"></see>. Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name. Can be one of these XlApplyNamesOrder constants:xlColumnThenRowxlRowThenColumn default</param>
			<param name="OmitRow">Optional Object. True to replace the entire reference with the column-oriented name. The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range. The default value is True.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)">
			<summary>Returns an AutoComplete match from the list.</summary>
			<param name="String">Required String. The string to complete.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)">
			<summary>Performs an autofill on the cells in the specified range.</summary>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType"></see>. Specifies the fill type. Can be one of these XlAutoFillType constants:xlFillDaysxlFillFormatsxlFillSeriesxlFillWeekdaysxlGrowthTrendxlFillCopyxlFillDefaultdefaultxlFillMonthsxlFillValuesxlFillYearsxlLinearTrendIf this argument is xlFillDefault or omitted, Microsoft Excel selects the most appropriate fill type, based on the source range.</param>
			<param name="Destination">Required <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object. The cells to be filled. The destination must include the source range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)">
			<summary>Filters a list using the AutoFilter.</summary>
			<param name="Operator">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator"></see>. Can be one of the following XlAutoFilterOperator constants:xlAnddefaultxlBottom10ItemsxlBottom10PercentxlOrxlTop10ItemsxlTop10PercentUse xlAnd and xlOr with Criteria1 and Criteria2 to construct compound criteria.</param>
			<param name="VisibleDropDown">Optional Object. True to display the AutoFilter drop-down arrow for the filtered field; False to hide the AutoFilter drop-down arrow for the filtered field. True by default.</param>
			<param name="Field">Optional Object. The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one).</param>
			<param name="Criteria1">Optional Object. The criteria (a string; for example, "101"). Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields. If this argument is omitted, the criteria is All. If Operator is xlTop10Items, Criteria1 specifies the number of items (for example, "10").</param>
			<param name="Criteria2">Optional Object. The second criteria (a string). Used with Criteria1 and Operator to construct compound criteria.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Automatically formats the specified range, using a predefined format.</summary>
			<param name="Number">Optional Object. True to include number formats in the AutoFormat. The default value is True.</param>
			<param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat"></see>. The specified AutoFormat.Some of the XlRangeAutoFormat constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</param>
			<param name="Font">Optional Object. True to include font formats in the AutoFormat. The default value is True.</param>
			<param name="Pattern">Optional Object. True to include pattern formats in the AutoFormat. The default value is True.</param>
			<param name="Width">Optional Object. True to include column width and row height in the AutoFormat. The default value is True.</param>
			<param name="Border">Optional Object. True to include border formats in the AutoFormat. The default value is True.</param>
			<param name="Alignment">Optional Object. True to include alignment in the AutoFormat. The default value is True.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)">
			<summary>Adds a border to a range and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color"></see>, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle"></see>, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight"></see> properties for the new border.</summary>
			<param name="Weight">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight"></see>. The border weight. Can be one of the following XlBorderWeight constants:xlHairlinexlMediumxlThickxlThindefault</param>
			<param name="LineStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle"></see>. The line style for the border. Can be one of the following XlLineStyle constants:xlContinuousdefaultxlDashxlDashDotxlDashDotDotxlDotxlDoublexlLineStlyeNonexlSlantDashDotxlLineStlyeNone</param>
			<param name="ColorIndex">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex"></see>. The border color, as an index into the current color palette or as an XlColorIndex constant. Can be one of the following XlColorIndex constants:xlColorIndexAutomaticdefaultxlColorIndexNone</param>
			<param name="Color">Optional Object. The border color, as an RGB value.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<summary>Checks the spelling of an object.</summary>
			<param name="IgnoreUppercase">Optional Object. True to have Microsoft Excel ignore words that are all uppercase; False to have Microsoft Excel check words that are all uppercase. If this argument is omitted, the current setting will be used.</param>
			<param name="CustomDictionary">Optional Object. A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is omitted, the currently specified dictionary is used.</param>
			<param name="SpellLang">Optional Object. The language of the dictionary being used. Can be one of the MsoLanguageID values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)"></see> property.</param>
			<param name="AlwaysSuggest">Optional Object. True to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found; False to have Microsoft Excel pause while you input the correct spelling. If this argument is omitted, the current setting will be used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents all the cells whose contents are different from the comparison cell in each column.</summary>
			<param name="Comparison">Required Object. A single cell to compare to the specified range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Consolidates data from multiple ranges on multiple worksheets into a single range on a single worksheet.</summary>
			<param name="CreateLinks">Optional Object. True to have the consolidation use worksheet links; False to have the consolidation copy the data. The default value is False.</param>
			<param name="TopRow">Optional Object. True to consolidate data based on column titles in the top row of the consolidation ranges; False to consolidate data by position. The default value is False.</param>
			<param name="Sources">Optional Object. The sources of the consolidation as an array of text reference strings in R1C1-style notation. The references must include the full path of sheets to be consolidated.</param>
			<param name="LeftColumn">Optional Object. True to consolidate data based on row titles in the left column of the consolidation ranges; False to consolidate data by position. The default value is False.</param>
			<param name="Function">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction"></see>. Can be one of the following XlConsilidationFunction constants:xlAveragedefaultxlCountxlCountNumsxlMaxxlMinxlProductxlStDevxlStDevPxlSumxlVarxlVarP</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)">
			<summary>Copies the range to the specified range or to the Clipboard.</summary>
			<param name="Destination">Optional Object. Specifies the new range to which the specified range will be copied. If this argument is omitted, Microsoft Excel copies the range to the Clipboard.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)">
			<summary>Copies the contents of an ADO or DAO Recordset object onto a worksheet, beginning at the upper-left corner of the specified range.</summary>
			<param name="MaxColumns">Optional Object. The maximum number of fields to copy onto the worksheet. If this argument is omitted, all the fields in the Recordset object are copied.</param>
			<param name="MaxRows">Optional Object. The maximum number of records to copy onto the worksheet. If this argument is omitted, all the records in the Recordset object are copied.</param>
			<param name="Data">Required Object. The Recordset object to copy into the range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<summary>Copies the selected object to the Clipboard as a picture.</summary>
			<param name="Format">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat"></see>. The format of the picture. Can be one of the following XlPictureAppearance constants:xlPrinter. The picture is copied as it will look when it's printed.xlScreendefault. The picture is copied to resemble its display on the screen as closely as possible.</param>
			<param name="Appearance">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance"></see>. Specifies how the picture should be copied. Can be one of the following XlCopyPictureFormat constants:xlBitmapxlPicture default</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates names in the specified range, based on text labels in the sheet.</summary>
			<param name="Bottom">Optional Object. True to create names by using labels in the bottom row. The default value is False.</param>
			<param name="Right">Optional Object. True to create names by using labels in the right column. The default value is False.</param>
			<param name="Left">Optional Object. True to create names by using labels in the left column. The default value is False.</param>
			<param name="Top">Optional Object. True to create names by using labels in the top row. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)">
			<summary>You have requested Help for a keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
			<param name="ContainsRTF">maconlyparam</param>
			<param name="ContainsPICT">maconlyparam</param>
			<param name="Edition">maconlyparam</param>
			<param name="Appearance">maconlyparam</param>
			<param name="ContainsVALU">maconlyparam</param>
			<param name="ContainsBIFF">maconlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)">
			<summary>Cuts the object to the Clipboard or pastes it into a specified destination.</summary>
			<param name="Destination">Optional Object. The range where the object should be pasted. If this argument is omitted, the object is cut to the Clipboard.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)">
			<summary>Creates a data series in the specified range.</summary>
			<param name="Stop">Optional Object. The stop value for the series. If this argument is omitted, Microsoft Excel fills to the end of the range.</param>
			<param name="Rowcol">Optional Object. Can be the xlRows or xlColumns constant to have the data series entered in rows or columns, respectively. If this argument is omitted, the size and shape of the range is used.</param>
			<param name="Date">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate"></see>. If the Type argument is xlChronological, the Date argument indicates the step date unit. Can be one of the following XlDataSeriesDate constants:xlDaydefaultxlWeekdayxlMonthxlYear</param>
			<param name="Trend">Optional Object. True to create a linear trend or growth trend; False to create a standard data series. The default value is False.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType"></see>. Can be one of the following XlDataSeriesType constants:xlAutoFillxlDataSeriesLineardefaultxlChronologicalxlGrowth</param>
			<param name="Step">Optional Object. The step value for the series. The default value is 1.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)">
			<summary>Deletes the object.</summary>
			<param name="Shift">Optional Object. Specifies how to shift cells to replace deleted cells. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection"></see> constants: xlShiftToLeft or xlShiftUp. If this argument is omitted, Microsoft Excel decides based on the shape of the range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Dirty">
			<summary>Designates a range to be recalculated when the next recalculation occurs.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)">
			<summary>You have requested Help for a keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
			<param name="Format">maconlyparam</param>
			<param name="Option">maconlyparam</param>
			<param name="Appearance">maconlyparam</param>
			<param name="Name">maconlyparam</param>
			<param name="Reference">maconlyparam</param>
			<param name="Type">maconlyparam</param>
			<param name="ChartSize">maconlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)">
			<summary>Finds specific information in a range and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents the first cell where that information is found.</summary>
			<param name="SearchOrder">Optional Object. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder"></see> constants: xlByRows or xlByColumns.</param>
			<param name="What">Required Object. The data to search for. Can be a string or any Microsoft Excel data type.</param>
			<param name="LookIn">Optional Object. The type of information.</param>
			<param name="MatchByte">Optional Object. Used only if you’ve selected or installed double-byte language support. True to have double-byte characters match only double-byte characters; False to have double-byte characters match their single-byte equivalents.</param>
			<param name="LookAt">Optional Object. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt"></see> constants: xlWhole or xlPart.</param>
			<param name="SearchFormat">Optional Object. The search format.</param>
			<param name="SearchDirection">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection"></see>. The search direction. Can be one of these XlSearchDirection constants:xlNextdefaultxlPrevious</param>
			<param name="MatchCase">Optional Object. True to make the search case sensitive. The default value is False.</param>
			<param name="After">Optional Object. The cell after which you want the search to begin. This corresponds to the position of the active cell when a search is done from the user interface. Note that After must be a single cell in the range. Remember that the search begins after this cell; the specified cell isn’t searched until the method wraps back around to this cell. If you don’t specify this argument, the search starts after the cell in the upper-left corner of the range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)">
			<summary>Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)"></see> method.</summary>
			<param name="After">Optional Object. The cell after which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that After must be a single cell in the range. Remember that the search begins after this cell; the specified cell isn’t searched until the method wraps back around to this cell. If this argument isn’t specified, the search starts after the cell in the upper-left corner of the range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)">
			<summary>Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)"></see> method.</summary>
			<param name="After">Optional Object. The cell before which you want to search. This corresponds to the position of the active cell when a search is done from the user interface. Note that After must be a single cell in the range. Remember that the search begins before this cell; the specified cell isn’t searched until the method wraps back around to this cell. If this argument isn’t specified, the search starts before the upper-left cell in the range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<summary>Calculates the values necessary to achieve a specific goal.</summary>
			<param name="ChangingCell">Required <see cref="T:Microsoft.Office.Interop.Excel.Range"></see>. Specifies which cell should be changed to achieve the target value.</param>
			<param name="Goal">Required Object. The value you want returned in this cell.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)">
			<summary>When the <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object represents a single cell in a PivotTable field’s data range, the Group method performs numeric or date-based grouping in that field.</summary>
			<param name="End">Optional Object. The last value to be grouped. If this argument is omitted or True, the last value in the field is used.</param>
			<param name="Periods">Optional Object. An array of Boolean values that specify the period for the group, as shown in the following table.Array elementPeriod1Seconds2Minutes3Hours4Days5Months6Quarters7YearsIf an element in the array is True, a group is created for the corresponding time; if the element is False, no group is created. If the field isn’t a date field, this argument is ignored.</param>
			<param name="Start">Optional Object. The first value to be grouped. If this argument is omitted or True, the first value in the field is used.</param>
			<param name="By">Optional Object. If the field is numeric, this argument specifies the size of each group. If the field is a date, this argument specifies the number of days in each group if element 4 in the Periods array is True and all the other elements are False. Otherwise, this argument is ignored. If this argument is omitted, Microsoft Excel automatically chooses a default group size.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)">
			<summary>Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.</summary>
			<param name="Shift">Optional Object. Specifies which way to shift the cells. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection"></see> constants: xlShiftToRight or xlShiftDown. If this argument is omitted, Microsoft Excel decides based on the shape of the range.</param>
			<param name="CopyOrigin">Optional Object. The copy origin.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)">
			<summary>Adds an indent to the specified range.</summary>
			<param name="InsertAmount">Required Integer. The amount to be added to the current indent.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)">
			<summary>Creates a merged cell from the specified <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object.</summary>
			<param name="Across">Optional Object. True to merge cells in each row of the specified range as separate merged cells. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)">
			<summary>Navigates a tracer arrow for the specified range to the precedent, dependent, or error-causing cell or cells.</summary>
			<param name="ArrowNumber">Optional Object. Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</param>
			<param name="LinkNumber">Optional Object. If the arrow is an external reference arrow, this argument indicates which external reference to follow. If this argument is omitted, the first external reference is followed.</param>
			<param name="TowardPrecedent">Optional Object. Specifies the direction to navigate: True to navigate toward precedents; False to navigate toward dependent.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)">
			<summary>Returns or sets the cell note associated with the cell in the upper-left corner of the range.</summary>
			<param name="Length">Optional Object. The number of characters to be set or returned. If this argument is omitted, Microsoft Excel sets or returns characters from the starting position to the end of the note (up to 255 characters). If there are more than 255 characters from Start to the end of the note, this method returns only 255 characters.</param>
			<param name="Text">Optional Object. The text to add to the note (up to 255 characters). The text is inserted starting at position Start, replacing Length characters of the existing note. If this argument is omitted, this method returns the current text of the note starting at position Start, for Length characters.</param>
			<param name="Start">Optional Object. The starting position for the text that’s set or returned. If this argument is omitted, this method starts at the first character. To append text to the note, specify a number larger than the number of characters in the existing note.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)">
			<summary>Parses a range of data and breaks it into multiple cells.</summary>
			<param name="ParseLine">Optional Object. A string that contains left and right brackets to indicate where the cells should be split.For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column.If this argument is omitted, Microsoft Excel guesses where to split the columns based on the spacing of the top left cell in the range. If you want to use a different range to guess the parse line, use a Range object as the ParseLine argument. That range must be one of the cells that's being parsed. The ParseLine argument cannot be longer than 255 characters, including the brackets and spaces.</param>
			<param name="Destination">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents the upper-left corner of the destination range for the parsed data. If this argument is omitted, Microsoft Excel parses in place.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)">
			<summary>Pastes a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> from the Clipboard into the specified range.</summary>
			<param name="Transpose">Optional Object. True to transpose rows and columns when the range is pasted. The default value is False.</param>
			<param name="Paste">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType"></see>. The part of the range to be pasted. Can be one of the following XlPasteType constants:xlPasteAll defaultxlPasteAllExceptBordersxlPasteColumnWidthsxlPasteCommentsxlPasteFormatsxlPasteFormulasxlPasteFormulasAndNumberFormatsxlPasteValidationxlPasteValuesxlPasteValuesAndNumberFormats</param>
			<param name="SkipBlanks">Optional Object. True to not have blank cells in the range on the Clipboard pasted into the destination range. The default value is False.</param>
			<param name="Operation">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation"></see>. The paste operation. Can be one of the following XlPasteSpecialOperation constants:xlPasteSpecialOperationAddxlPasteSpecialOperationDividexlPasteSpecialOperationMultiplyxlPasteSpecialOperationNonedefaultxlPasteSpecialOperationSubtract</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Prints the object.</summary>
			<param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object; False (or omitted) to print the object immediately.</param>
			<param name="Collate">Optional Object. True to collate multiple copies.</param>
			<param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
			<param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
			<param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
			<param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
			<param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
			<param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)">
			<summary>Shows a preview of the object as it would look when printed.</summary>
			<param name="EnableChanges">True to enable changes.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Returns a Boolean indicating characters in cells within the specified range.</summary>
			<param name="Replacement">Required Object. The replacement string.</param>
			<param name="SearchOrder">Optional Object. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder"></see> constants: xlByRows or xlByColumns.</param>
			<param name="What">Required Object. The string you want Microsoft Excel to search for.</param>
			<param name="MatchCase">Optional Object. True to make the search case sensitive.</param>
			<param name="MatchByte">Optional Object. You can use this argument only if you’ve selected or installed double-byte language support in Microsoft Excel. True to have double-byte characters match only double-byte characters; False to have double-byte characters match their single-byte equivalents.</param>
			<param name="LookAt">Optional Object. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt"></see> constants: xlWhole or xlPart.</param>
			<param name="SearchFormat">Optional Object. The search format for the method.</param>
			<param name="ReplaceFormat">Optional Object. The replace format for the method.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents all the cells whose contents are different from those of the comparison cell in each row.</summary>
			<param name="Comparison">Required Object. A single cell to compare with the specified range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Runs the Microsoft Excel macro at this location.</summary>
			<param name="Arg28">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg29">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg24">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg25">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg26">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg27">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg20">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg21">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg22">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg23">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg30">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg8">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg9">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg6">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg7">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg4">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg5">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg2">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg3">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg14">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg1">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg12">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg11">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg10">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg16">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg15">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg13">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg19">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg18">Optional Object. The arguments that should be passed to the function.</param>
			<param name="Arg17">Optional Object. The arguments that should be passed to the function.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)">
			<summary>Draws tracer arrows to the direct dependents of the range.</summary>
			<param name="Remove">Optional Object. True to remove one level of tracer arrows to direct dependents; False to expand one level of tracer arrows. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)">
			<summary>Draws tracer arrows to the direct precedents of the range.</summary>
			<param name="Remove">Optional Object. True to remove one level of tracer arrows to direct precedents; False to expand one level of tracer arrows. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)">
			<summary>Sorts a PivotTable report, a range, or the active region if the specified range contains only one cell.</summary>
			<param name="Key3">Optional Object. The third sort field, as either text (a range name) or a Range object. If you omit this argument, there’s no third sort field. Cannot be used when sorting PivotTable reports.</param>
			<param name="MatchCase">Optional Object. True to do a case-sensitive sort; False to do a sort that’s not case sensitive. Cannot be used when sorting PivotTable reports.</param>
			<param name="DataOption1">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption"></see>. Specifies how to sort text in Key 1. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treat text as numeric data for the sort.xlSortNormaldefault. Sorts numeric and text data separately.</param>
			<param name="DataOption3">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption"></see>. Specifies how to sort text in key 3. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text as numeric data for the sort.xlSortNormaldefault. Sorts numeric and text data separately.</param>
			<param name="DataOption2">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption"></see>. Specifies how to sort text in Key 2. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text as numeric data for the sort.xlSortNormaldefault. Sorts numeric and text data separately.</param>
			<param name="Header">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess"></see>. Specifies whether or not the first row contains headers. Cannot be used when sorting PivotTable reports. Can be one of the following XlYesNoGuess constants:xlGuess. Let Microsoft Excel determine whether there’s a header, and determine where it is if there is one.xlNodefault. (The entire range should be sorted).xlYes. (The entire range should not be sorted).</param>
			<param name="SortMethod">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod"></see>. The type of sort. Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed. Can be one of the following XlSortMethod constants:xlStroke Sorting by the quantity of strokes in each character.xlPinYindefault. Phonetic Chinese sort order for characters.</param>
			<param name="Order1">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder"></see>. The sort order for the field or range specified in Key1. Can be one of the following XlSortOrder constants:xlDescending. Sorts Key1 in descending order.xlAscendingdefault. Sorts Key1 in ascending order.</param>
			<param name="Order2">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder"></see>. The sort order for the field or range specified in Key2. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortOrder constants:xlDescending. Sorts Key2 in descending order.xlAscendingdefault. Sorts Key2 in ascending order.</param>
			<param name="Order3">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder"></see>. The sort order for the field or range specified in Key3. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortOrder constants:xlDescending. Sorts Key3 in descending order.xlAscendingdefault. Sorts Key3 in ascending order.</param>
			<param name="Orientation">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation"></see>. The sort orientation. Can be one of the following XlSortOrientation constants:xlSortRowsdefault. Sorts by row.xlSortColumns. Sorts by column.</param>
			<param name="Key1">Optional Object. The first sort field, as either text (a PivotTable field or range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object ("Dept" or Cells(1, 1), for example).</param>
			<param name="Type">Optional Object. Specifies which elements are to be sorted. Use this argument only when sorting PivotTable reports. Can be one of the following XlSortType constants:xlSortLabels. Sorts the PivotTable report by labels.xlSortValues. Sorts the PivotTable report by values.</param>
			<param name="Key2">Optional Object. The second sort field, as either text (a PivotTable field or range name) or a Range object. If you omit this argument, there’s no second sort field. Cannot be used when sorting Pivot Table reports.</param>
			<param name="OrderCustom">Optional Object. This argument is a one-based integer offset to the list of custom sort orders. If you omit OrderCustom, a normal sort is used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)">
			<summary>Uses East Asian sorting methods to sort the range or a PivotTable report, or uses the method for the active region if the range contains only one cell. For example, Japanese sorts in the order of the Kana syllabary.</summary>
			<param name="Key3">Optional object. The third sort field, as either text (a range name) or a Range object. If you omit this argument, there’s no third sort field. Cannot be used when sorting PivotTable reports.</param>
			<param name="MatchCase">Optional Object. True to do a case-sensitive sort; False to do a sort that’s not case sensitive. Cannot be used when sorting PivotTable reports.</param>
			<param name="DataOption1">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption"></see>. Specifies how to sort text in Key1. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text as numeric data for the sort.xlSortNormaldefault. Sorts numeric and text data separately.</param>
			<param name="DataOption3">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption"></see>. Specifies how to sort text in Key 3. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text numeric data for the sort.xlSortNormaldefault. Sorts numeric and text data separately.</param>
			<param name="DataOption2">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption"></see>. Specifies how to sort text in Key 2. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortDataOption constants:xlSortTextAsNumbers. Treats text as numeric data for the sort.xlSortNormaldefault. Sorts numeric and text data separately.</param>
			<param name="Header">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess"></see>. Specifies whether or not the first row contains headers. Cannot be used when sorting PivotTable reports. Can be one of the following XlYesNoGuess constants:xlGuess. Lets Microsoft Excel determine whether there’s a header, and determine where it is if there is one.xlNodefault. The entire range should be sorted.xlYes. The entire range should not be sorted.</param>
			<param name="SortMethod">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod"></see>. The type of sort. Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed. Can be one of the following XlSortMethod constants:xlStroke. Sorting by the quantity of strokes in each character.xlPinYindefault. Phonetic Chinese sort order for characters.</param>
			<param name="Order1">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder"></see>. The sort order for the field or range specified in the Key1 argument. Can be one of the following XlSortOrder constants:xlDescending. Sorts Key1 in descending order.xlAscendingdefault. Sorts Key1 in ascending order.</param>
			<param name="Order2">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder"></see>. The sort order for the field or range specified in the Key2 argument. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortOrder constants:xlDescending. Sorts Key2 in descending order xlAscending default. Sorts Key2 in ascending order.</param>
			<param name="Order3">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder"></see>. The sort order for the field or range specified in the Key3 argument. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortOrder constants: xlDescending. Sorts Key3 in descending order.xlAscendingdefault. Sorts Key3 in ascending order.</param>
			<param name="Orientation">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation"></see>. The sort orientation. Can be one of the following XlSortOrientation constants:xlSortRowsdefault. The sort is done by row.xlSortColumns. The sort is done by column.</param>
			<param name="Key1">Optional Object. The first sort field, as either text (a PivotTable field or range name) or a Range object ("Dept" or Cells(1, 1), for example).</param>
			<param name="Type">Optional Object. Specifies which elements are to be sorted. Use this argument only when sorting PivotTable reports.</param>
			<param name="Key2">Optional Object. The second sort field, as either text (a PivotTable field or range name) or a Range object. If you omit this argument, there’s no second sort field. Cannot be used when sorting PivotTable reports. Can be one of the following XlSortType constants:xlSortLabels. Sorts the PivotTable report by labels.xlSortValues. Sorts the PivotTable report by values.</param>
			<param name="OrderCustom">Optional Object. This argument is a one-based integer offset to the list of custom sort orders. If you omit OrderCustom, (normal sort order) is used.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)">
			<summary>Causes the cells of the range to be spoken in row order or column order.</summary>
			<param name="SpeakDirection">Optional Object. The speak direction, by rows or columns.</param>
			<param name="SpeakFormulas">Optional Object. True will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas. The value is sent if the cells do not have formulas; False (default) will cause values to always be sent to the TTS engine.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents all the cells that match the specified type and value.</summary>
			<param name="Value">Optional Object. If Type is either xlCellTypeConstants or xlCellTypeFormulas, this argument is used to determine which types of cells to include in the result. These values can be added together to return more than one type. The default is to select all constants or formulas, no matter what the type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue"></see> constants:xlErrorsxlLogicalxlNumbersxlTextValues</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlCellType"></see>. The cells to include. Can be one of the following XlCellType constants:xlCellTypeAllFormatConditions. Cells of any format.xlCellTypeAllValidation. Cells having validation criteria.xlCellTypeBlanks. Empty cells.xlCellTypeComments. Cells containing notes.xlCellTypeConstants. Cells containing constants.xlCellTypeFormulas. Cells containing formulas.xlCellTypeLastCell. The last cell in the used range.xlCellTypeSameFormatConditions. Cells having the same format.xlCellTypeSameValidation. Cells having the same validation criteria.xlCellTypeVisible. All visible cells.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)">
			<summary>You have requested Help for a keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</summary>
			<param name="Format">maconlyparam</param>
			<param name="Edition">maconlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)">
			<summary>Creates subtotals for the range (or the current region, if the range is a single cell).</summary>
			<param name="PageBreaks">Optional Object. True to add page breaks after each group. The default value is False.</param>
			<param name="TotalList">Required Object. An array of 1-based field offsets, indicating the fields to which the subtotals are added. For more information, see the example.</param>
			<param name="SummaryBelowData">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow"></see>. Places the summary data relative to the subtotal. Can be one of the following XlSummaryRow constants:xlSummaryAbovexlSummaryBelowdefault</param>
			<param name="GroupBy">Required Integer. The field to group by, as a one-based integer offset. For more information, see the example.</param>
			<param name="Replace">Optional Object. True to replace existing subtotals. The default value is False.</param>
			<param name="Function">Required <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction"></see>. The subtotal function. Can be one of the following XlConsolidationFunction constants:xlAveragexlCountxlCountNumsxlMaxxlMinxlProductxlStDevxlStDevPxlSumxlUnknownxlVarxlVarP</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)">
			<summary>Creates a data table based on input values and formulas that you define on a worksheet.</summary>
			<param name="RowInput">Optional Object. A single cell to use as the row input for your table.</param>
			<param name="ColumnInput">Optional Object. A single cell to use as the column input for your table.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Parses a column of cells that contain text into several columns.</summary>
			<param name="OtherChar">Optional Object (required if Other is True). The delimiter character when Other is True. If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
			<param name="DataType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType"></see>. The format of the text to be split into columns. Can be one of the following XlTextParsingType constants:xlDelimited defaultxlFixedWidth</param>
			<param name="Tab">Optional Object. True to have DataType be xlDelimited and to have the tab character be a delimiter. The default value is False.</param>
			<param name="DecimalSeparator">Optional String. The decimal separator that Microsoft Excel uses when recognizing numbers. The default setting is the system setting.</param>
			<param name="Semicolon">Optional Object. True to have DataType be xlDelimited and to have the semicolon be a delimiter. The default value is False.</param>
			<param name="Comma">Optional Object. True to have DataType be xlDelimited and to have the comma be a delimiter. The default value is False.</param>
			<param name="TrailingMinusNumbers">Optional Object. Numbers that begin with a minus character.</param>
			<param name="Space">Optional Object. True to have DataType be xlDelimited and to have the space character be a delimiter. The default value is False.</param>
			<param name="ConsecutiveDelimiter">Optional Object. True to have Microsoft Excel consider consecutive delimiters as one delimiter. The default value is False.</param>
			<param name="Other">Optional Object. True to have DataType be xlDelimited and to have the character specified by the OtherChar argument be a delimiter. The default value is False.</param>
			<param name="TextQualifier">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier"></see>. Can be one of the following XlTextQualifier constants:xlTextQualifierDoubleQuotedefaultxlTextQualifierNonexlTextQualifierSingleQuote</param>
			<param name="ThousandsSeparator">Optional String. The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting.</param>
			<param name="Destination">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that specifies where Microsoft Excel will place the results. If the range is larger than a single cell, the top left cell is used.</param>
			<param name="FieldInfo">Optional Object. An array containing parse information for the individual columns of data. The interpretation depends on the value of DataType. When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column. The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType"></see> constants specifying how the column is parsed. Can be one of the following XlColumnDataType constants:xlGeneralFormat. Genera. xlTextFormat. Text.xlMDYFormat. MDY Date.xlDMYFormat. DMY Date.xlYMDFormat. YMD Date.xlMYDFormat. MYD Date.xlDYMFormat. DYM Date.xlYDMFormat. YDM Date.xlEMDFormat. EMD Date.xlSkipColumn. Skip Column.You can use xlEMDFormat only if Taiwanese language support is installed and selected. The xlEMDFormat constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order. If a given column specifier is not present for a particular column in the input data, the column is parsed with the General setting.If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character). The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)">
			<param name="ColumnIndex">hiddenmemberparam</param>
			<param name="RowIndex">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
			<summary>Returns the range reference.</summary>
			<param name="External">Optional Object. True to return an external reference; False to return a local reference. The default value is False.</param>
			<param name="ColumnAbsolute">Optional Object. True to return the column part of the reference as an absolute reference. The default value is True.</param>
			<param name="RowAbsolute">Optional Object. True to return the row part of the reference as an absolute reference. The default value is True.</param>
			<param name="RelativeTo">Optional Object. If RowAbsolute and ColumnAbsolute are False, and ReferenceStyle is xlR1C1, you must include a starting point for the relative reference. This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that defines the starting point.</param>
			<param name="ReferenceStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle"></see>.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)">
			<summary>Returns the range reference for the specified range in the language of the user. </summary>
			<param name="External">Optional Object. True to return an external reference. False to return a local reference. The default value is False.</param>
			<param name="ColumnAbsolute">Optional Object. True to return the column part of the reference as an absolute reference. The default value is True.</param>
			<param name="RowAbsolute">Optional Object. True to return the row part of the reference as an absolute reference. The default value is True.</param>
			<param name="RelativeTo">Optional Object. If RowAbsolute and ColumnAbsolute are both set to False and ReferenceStyle is set to xlR1C1, you must include a starting point for the relative reference. This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that defines the starting point for the reference.</param>
			<param name="ReferenceStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle"></see>.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters"></see> object that represents a range of characters within the object text. </summary>
			<param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the Start character).</param>
			<param name="Start">Optional Object. The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents the cell at the end of the region that contains the source range.</summary>
			<param name="Direction">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection"></see>. The direction in which to move.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents a range at an offset to the specified range.</summary>
			<param name="ColumnIndex">Optional Object. A number or string that indicates the column number of the cell you want to access, starting with either 1 or "A" for the first column in the range.</param>
			<param name="RowIndex">Required Object. The index number of the cell you want to access, in order from left to right, then down. Range.Item(1) returns the upper-left cell in the range; Range.Item(2) returns the cell immediately to the right of the upper-left cell.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents a range that’s offset from the specified range.</summary>
			<param name="RowOffset">Optional Object. The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward. The default value is 0.</param>
			<param name="ColumnOffset">Optional Object. The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left. The default value is 0.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents a cell or a range of cells.</summary>
			<param name="Cell1">Required Object. The name of the range. This must be an A1-style reference in the language of the macro. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). It can also include dollar signs, but they’re ignored. You can use a local defined name in any part of the range. If you use a name, the name is assumed to be in the language of the macro.</param>
			<param name="Cell2">Optional Object. The cell in the upper-left and lower-right corner of the range. Can be a Range object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)">
			<summary>Resizes the specified range.</summary>
			<param name="RowSize">Optional Object. The number of rows in the new range. If this argument is omitted, the number of rows in the range remains the same.</param>
			<param name="ColumnSize">Optional Object. The number of columns in the new range. If this argument is omitted, the number of columns in the range remains the same.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)">
			<summary>Returns or sets the value of the specified range.</summary>
			<param name="RangeValueDataType">Optional Object. The range value data type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType"></see> constants:xlRangeValueDefaultdefault If the specified <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object is empty, returns the value Empty (use the IsEmpty function to test for this case). If the Range object contains more than one cell, returns an array of values (use the IsArray function to test for this case).xlRangeValueMSPersistXML    Returns the recordset representation of the specified Range object in an XML format.xlRangeValueXMLSpreadsheet    Returns the values, formatting, formulas, and names of the specified Range object in the XML Spreadsheet format.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment">
			<summary>Returns or sets the vertical alignment of the specified object.</summary>
			<returns>.</returns>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.RecentFile">
			<summary>Represents a file in the list of recently used files.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.RecentFiles">
			<summary>Represents the list of recently used files. Each file is represented by a <see cref="T:Microsoft.Office.Interop.Excel.RecentFile"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.RecentFiles.Add(System.String)">
			<summary>Adds a file to the list of recently used files. Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFile"></see> object.</summary>
			<param name="Name">Required String. The file name.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.RecentFiles._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.RecentFiles.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Integer. The index number of the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Rectangle.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Rectangle.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Rectangle.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Rectangle.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Rectangles.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Rectangles.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Rectangles.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Rectangles.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Rectangles.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Rectangles.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.RefreshEvents.AfterRefresh(System.Boolean)">
			<param name="Success">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.RefreshEvents.BeforeRefresh(System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.RefreshEvents_AfterRefreshEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.RefreshEvents_Event.AfterRefresh"></see> event. The AfterRefresh event occurs after a query is completed or canceled.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.RefreshEvents_BeforeRefreshEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.RefreshEvents_Event.BeforeRefresh"></see> event. The BeforeRefresh event occurs before any refreshes of the query table.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.RefreshEvents_Event">
			<summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.QueryTable"></see> object events.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.RefreshEvents_Event.AfterRefresh">
			<summary>Occurs after a query is completed or canceled.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.RefreshEvents_Event.BeforeRefresh">
			<summary>Occurs before any refreshes of the query table. This includes refreshes resulting from calling the Refresh method, from the user's actions in the product, and from opening the workbook containing the query table.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.RoutingSlip">
			<summary>Represents the routing slip for a workbook. The routing slip is used to send a workbook through the electronic mail system.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.RoutingSlip.Recipients(System.Object)">
			<summary>Returns or sets the recipients on the routing slip.</summary>
			<param name="Index">Optional Object. The recipient. If this argument isn’t specified, the Recipients property returns (or can be set to) an array that contains all recipients.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.RTD">
			<summary>Represents a real-time data object.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Scenario">
			<summary>Represents a scenario on a worksheet. A scenario is a group of input values (called changing cells) that’s named and saved.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Scenario.ChangeScenario(System.Object,System.Object)">
			<summary>Changes the scenario to have a new set of changing cells and (optionally) scenario values.</summary>
			<param name="ChangingCells">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that specifies the new set of changing cells for the scenario. The changing cells must be on the same sheet as the scenario.</param>
			<param name="Values">Optional Object. An array that contains the new scenario values for the changing cells. If this argument is omitted, the scenario values are assumed to be the current values in the changing cells.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Scenario.Values(System.Object)">
			<summary>Returns an array that contains the current values of the changing cells for the scenario.</summary>
			<param name="Index">Optional Object. The position of the value.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Scenarios">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Scenario"></see> objects on the specified worksheet. A scenario is a group of input values (called changing cells) that’s named and saved.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Scenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates a new scenario and adds it to the list of scenarios that are available for the current worksheet.</summary>
			<param name="Comment">Optional Object. A string that specifies comment text for the scenario. When a new scenario is added, the author's name and date are automatically added at the beginning of the comment text.</param>
			<param name="Hidden">Optional Object. True to hide the scenario. The default value is False.</param>
			<param name="ChangingCells">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that refers to the changing cells for the scenario.</param>
			<param name="Locked">Optional Object. True to lock the scenario to prevent changes. The default value is True.</param>
			<param name="Name">Required String. The scenario name.</param>
			<param name="Values">Optional Object. An array that contains the scenario values for the cells in ChangingCells. If this argument is omitted, the scenario values are assumed to be the current values in the cells in ChangingCells.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Scenarios.CreateSummary(Microsoft.Office.Interop.Excel.XlSummaryReportType,System.Object)">
			<summary>Creates a new worksheet that contains a summary report for the scenarios on the specified worksheet.</summary>
			<param name="ReportType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryReportType"></see>.</param>
			<param name="ResultCells">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that represents the result cells on the specified worksheet. Normally, this range refers to one or more cells containing the formulas that depend on the changing cell values for your model — that is, the cells that show the results of a particular scenario. If this argument is omitted, there are no result cells included in the report.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Scenarios.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Scenarios.Merge(System.Object)">
			<summary>Merges the scenarios from another sheet into the <see cref="T:Microsoft.Office.Interop.Excel.Scenarios"></see> collection.</summary>
			<param name="Source">Required Object. The name of the sheet that contains scenarios to be merged, or a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet"></see> object that represents that sheet.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ScrollBar.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ScrollBar.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ScrollBars.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ScrollBars.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Series">
			<summary>Represents a series in a chart. The Series object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection"></see> collection.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Series._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)">
			<param name="HasLeaderLines">hiddenmemberparam</param>
			<param name="LegendKey">hiddenmemberparam</param>
			<param name="Type">hiddenmemberparam</param>
			<param name="AutoText">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Series.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType)">
			<summary>Applies a standard or custom chart type to a series.</summary>
			<param name="ChartType">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType"></see>. A standard chart type.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Series.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Applies data labels to a point, a series, or all the series in a chart.</summary>
			<param name="ShowValue">Optional Object. The value for the data label.</param>
			<param name="ShowBubbleSize">Optional Object. The bubble size for the data label.</param>
			<param name="Separator">Optional Object. The separator for the data label.</param>
			<param name="HasLeaderLines">Optional Object. For the <see cref="T:Microsoft.Office.Interop.Excel.Chart"></see> and <see cref="T:Microsoft.Office.Interop.Excel.Series"></see> objects, True if the series has leader lines.</param>
			<param name="LegendKey">Optional Object. True to show the legend key next to the point. The default value is False.</param>
			<param name="ShowPercentage">Optional Object. The percentage for the data label.</param>
			<param name="ShowSeriesName">Optional Object. The series name for the data label.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType"></see>. The type of data label to apply.</param>
			<param name="ShowCategoryName">Optional Object. The category name for the data label.</param>
			<param name="AutoText">Optional Object. True if the object automatically generates appropriate text based on content.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Series.DataLabels(System.Object)">
			<summary>Returns an object that represents either a single data label (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel"></see> object) or a collection of all the data labels for the series (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabels"></see> collection).</summary>
			<param name="Index">Optional Object. The number of the data label.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Series.ErrorBar(Microsoft.Office.Interop.Excel.XlErrorBarDirection,Microsoft.Office.Interop.Excel.XlErrorBarInclude,Microsoft.Office.Interop.Excel.XlErrorBarType,System.Object,System.Object)">
			<summary>Applies error bars to the series. Object.</summary>
			<param name="Direction">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection"></see>. The error bar direction.</param>
			<param name="Include">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude"></see>. The error bar parts to include.</param>
			<param name="MinusValues">Optional Object. The negative error amount when Type is xlErrorBarTypeCustom.</param>
			<param name="Amount">Optional Object. The error amount. Used for only the positive error amount when Type is xlErrorBarTypeCustom.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType"></see>. The error bar type.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Series.Points(System.Object)">
			<summary>Returns an object that represents a single point (a <see cref="T:Microsoft.Office.Interop.Excel.Point"></see> object) or a collection of all the points (a <see cref="T:Microsoft.Office.Interop.Excel.Points"></see> collection) in the series. Read-only.</summary>
			<param name="Index">Optional Object. The name or number of the point.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Series.Trendlines(System.Object)">
			<summary>Returns an object that represents a single trendline (a <see cref="T:Microsoft.Office.Interop.Excel.Trendline"></see> object) or a collection of all the trendlines (a <see cref="T:Microsoft.Office.Interop.Excel.Trendlines"></see> collection) for the series.</summary>
			<param name="Index">Optional Object. The name or number of the trendline.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SeriesCollection">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Series"></see> objects in the specified chart or chart group.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.Add(System.Object,Microsoft.Office.Interop.Excel.XlRowCol,System.Object,System.Object,System.Object)">
			<summary>Adds one or more new series to the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection"></see> collection.</summary>
			<param name="SeriesLabels">Optional Object. Ignored if Source is an array. True if the first row or column contains the name of the data series. False if the first row or column contains the first data point of the series. If this argument is omitted, Microsoft Excel attempts to determine the location of the series name from the contents of the first row or column.</param>
			<param name="CategoryLabels">Optional Object. Ignored if Source is an array. True if the first row or column contains the name of the category labels. False if the first row or column contains the first data point of the series. If this argument is omitted, Microsoft Excel attempts to determine the location of the category label from the contents of the first row or column.</param>
			<param name="Source">Required Object. The new data, either as a Range object or an array of data points.</param>
			<param name="Rowcol">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol"></see>. Specifies whether the new values are in the rows or columns of the specified range.</param>
			<param name="Replace">Optional Object. If CategoryLabels is True and Replace is True, the specified categories replace the categories that currently exist for the series. If Replace is False, the existing categories will not be replaced. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.Extend(System.Object,System.Object,System.Object)">
			<summary>Adds new data points to an existing series collection.</summary>
			<param name="CategoryLabels">Optional Object. Ignored if Source is an array. True to have the first row or column contain the name of the category labels. False to have the first row or column contain the first data point of the series. If this argument is omitted, Microsoft Excel attempts to determine the location of the category label from the contents of the first row or column.</param>
			<param name="Source">Required Object. The new data to be added to the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection"></see> object, either as a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object or an array of data points.</param>
			<param name="Rowcol">Optional Object. Ignored if Source is an array. Specifies whether the new values are in the rows or columns of the given range source. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol"></see> constants: xlRows or xlColumns. If this argument is omitted, Microsoft Excel attempts to determine where the values are by the size and orientation of the selected range or by the dimensions of the array.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.SeriesCollection.Paste(Microsoft.Office.Interop.Excel.XlRowCol,System.Object,System.Object,System.Object,System.Object)">
			<summary>Pastes data from the Clipboard into the specified series collection.</summary>
			<param name="CategoryLabels">Optional Object. True to use the contents of the first row (or column) of the selection as the categories for the chart. False to use the contents of the first row (or column) as the first data series in the chart. The default value is False.</param>
			<param name="SeriesLabels">Optional Object. True to use the contents of the cell in the first column of each row (or the first row of each column) as the name of the data series in that row (or column). False to use the contents of the cell in the first column of each row (or the first row of each column) as the first data point in the data series. The default value is False.</param>
			<param name="Rowcol">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol"></see>. Specifies whether the values corresponding to a particular data series are in rows or columns. Can be one of these XlRowCol constants:xlColumns defaultxlRows</param>
			<param name="Replace">Optional Object. True to apply categories while replacing existing categories with information from the copied range. False to insert new categories without replacing any old ones. The default value is True.</param>
			<param name="NewSeries">Optional Object. True to paste the data as a new series. False to paste the data as new points in an existing series. The default value is True.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SeriesLines">
			<summary>Represents series lines in a chart group. Series lines connect the data values from each series.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ShadowFormat">
			<summary>Represents shadow formatting for a shape.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShadowFormat.IncrementOffsetX(System.Single)">
			<summary>Changes the horizontal offset of the shadow by the specified number of points.</summary>
			<param name="Increment">Required Single. Specifies how far the shadow offset is to be moved horizontally in points. A positive value moves the shadow to the right; a negative value moves it to the left.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShadowFormat.IncrementOffsetY(System.Single)">
			<summary>Changes the vertical offset of the shadow by the specified number of points.</summary>
			<param name="Increment">Required Single. Specifies how far the shadow offset is to be moved vertically in points. A positive value moves the shadow down; a negative value moves it up.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Shape">
			<summary>Represents an object in the drawing layer, such as an AutoShape, freeform, OLE object, or picture. The Shape object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Shapes"></see> collection. The Shapes collection contains all the shapes on a slide.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropBottom(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropLeft(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropRight(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropTop(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.CopyPicture(System.Object,System.Object)">
			<summary>Copies the selected object to the Clipboard as a picture.</summary>
			<param name="Format">Optional Object. The format of the picture.</param>
			<param name="Appearance">Optional Object. Specifies how the picture should be copied.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)">
			<summary>Flips the specified shape around its horizontal or vertical axis.</summary>
			<param name="FlipCmd">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd"></see>. Specifies whether the shape is to be flipped horizontally or vertically.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.IncrementLeft(System.Single)">
			<summary>Moves the specified shape horizontally by the specified number of points.</summary>
			<param name="Increment">Required Single. Specifies how far the shape is to be moved horizontally in points. A positive value moves the shape to the right; a negative value moves it to the left.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)">
			<summary>Changes the rotation of the specified shape around the z-axis by the specified number of degrees. Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation"></see> property to set the absolute rotation of the shape.</summary>
			<param name="Increment">Required Single. Specifies how far the shape is to be rotated horizontally in degrees. A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.IncrementTop(System.Single)">
			<summary>Moves the specified shape vertically by the specified number of points.</summary>
			<param name="Increment">Required Single. Specifies how far the shape object is to be moved vertically in points. A positive value moves the shape down; a negative value moves it up.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
			<summary>Scales the height of the shape by a specified factor.</summary>
			<param name="Scale">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom"></see>. Specifies which part of the shape retains its position when the shape is scaled.</param>
			<param name="Factor">Required Single. Specifies the ratio between the height of the shape after you resize it and the current or original height. For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</param>
			<param name="RelativeToOriginalSize">Required <see cref="T:Microsoft.Office.Core.MsoTriState"></see>. msoTrue to scale the shape relative to its original size. msoFalse to scale it relative to its current size. You can specify msoTrue for this argument only if the specified shape is a picture or an OLE object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
			<summary>Scales the width of the shape by a specified factor.</summary>
			<param name="Scale">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom"></see>. Specifies which part of the shape retains its position when the shape is scaled.</param>
			<param name="Factor">Required Single. Specifies the ratio between the width of the shape after you resize it and the current or original width. For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</param>
			<param name="RelativeToOriginalSize">Required <see cref="T:Microsoft.Office.Core.MsoTriState"></see>. False to scale it relative to its current size. You can specify True for this argument only if the specified shape is a picture or an OLE object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. The object to replace.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)">
			<summary>Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</summary>
			<param name="ZOrderCmd">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd"></see>. Specifies where to move the specified shape relative to the other shapes.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ShapeNode">
			<summary>Represents the geometry and the geometry-editing properties of the nodes in a user-defined freeform.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ShapeNodes">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ShapeNode"></see> objects in the specified freeform.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.Delete(System.Int32)">
			<summary>Deletes the object.</summary>
			<param name="Index">Required Integer.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.Insert(System.Int32,Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
			<summary>Inserts a node into a freeform shape.</summary>
			<param name="Y2">Optional Single. If the EditingType of the new segment is msoEditingCorner, this argument specifies the vertical distance measured in points from the upper-left corner of the document to the second control point for the new segment. If the EditingType of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
			<param name="SegmentType">Required <see cref="T:Microsoft.Office.Core.MsoSegmentType"></see>. The segment type.</param>
			<param name="Index">Required Integer. The number of the shape node after which to insert a new node.</param>
			<param name="EditingType">Required <see cref="T:Microsoft.Office.Core.MsoEditingType"></see>. The editing type.</param>
			<param name="X2">Optional Single. If the EditingType of the new segment is msoEditingCorner, this argument specifies the horizontal distance measured in points from the upper-left corner of the document to the second control point for the new segment. If the EditingType of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
			<param name="X3">Optional Single. If the EditingType of the new segment is msoEditingCorner, this argument specifies the horizontal distance measured in points from the upper-left corner of the document to the end point of the new segment. If the EditingType of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
			<param name="Y3">Optional Single. If the EditingType of the new segment is msoEditingCorner, this argument specifies the vertical distance measured in points from the upper-left corner of the document to the end point of the new segment. If the EditingType of the new segment is msoEditingAuto, don't specify a value for this argument.</param>
			<param name="X1">Required Single. If the EditingType of the new segment is msoEditingAuto, this argument specifies the horizontal distance, measured in points, from the upper-left corner of the document to the end point of the new segment. If the EditingType of the new node is msoEditingCorner, this argument specifies the horizontal distance measured in points from the upper-left corner of the document to the first control point for the new segment.</param>
			<param name="Y1">Required Single. If the EditingType of the new segment is msoEditingAuto, this argument specifies the vertical distance measured in points from the upper-left corner of the document to the end point of the new segment. If the EditingType of the new node is msoEditingCorner, this argument specifies the vertical distance measured in points from the upper-left corner of the document to the first control point for the new segment.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.SetEditingType(System.Int32,Microsoft.Office.Core.MsoEditingType)">
			<summary>Sets the editing type of the specified node.</summary>
			<param name="Index">Required Integer. The node whose editing type is to be set.</param>
			<param name="EditingType">Required <see cref="T:Microsoft.Office.Core.MsoEditingType"></see>. The editing property of the vertex.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.SetPosition(System.Int32,System.Single,System.Single)">
			<summary>Sets the location of the specified node.</summary>
			<param name="Index">Required Integer. The node whose position is to be set.</param>
			<param name="X1">Required Single. The position (in points) of the new node relative to the upper-left corner of the document.</param>
			<param name="Y1">Required Single. The position (in points) of the new node relative to the upper-left corner of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeNodes.SetSegmentType(System.Int32,Microsoft.Office.Core.MsoSegmentType)">
			<summary>Sets the segment type of the segment that follows the specified node.</summary>
			<param name="SegmentType">Required <see cref="T:Microsoft.Office.Core.MsoSegmentType"></see>. Specifies if the segment is straight or curved. Can be one of these MsoSegmentType constants:MsoSegmentTypemsoSegmentCurvemsoSegmentLine</param>
			<param name="Index">Required Integer. The node whose segment type is to be set.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ShapeRange">
			<summary>Represents a shape range, which is a set of shapes on a document.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Align(Microsoft.Office.Core.MsoAlignCmd,Microsoft.Office.Core.MsoTriState)">
			<summary>Aligns the shapes in the specified range of shapes.</summary>
			<param name="AlignCmd">Required <see cref="T:Microsoft.Office.Core.MsoAlignCmd"></see>. Specifies the way the shapes in the specified shape range are to be aligned.</param>
			<param name="RelativeTo">Required <see cref="T:Microsoft.Office.Core.MsoTriState"></see>. Not used in Microsoft Excel. Must be False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropBottom(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropLeft(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropRight(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropTop(System.Single)">
			<param name="Increment">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Distribute(Microsoft.Office.Core.MsoDistributeCmd,Microsoft.Office.Core.MsoTriState)">
			<summary>Horizontally or vertically distributes the shapes in the specified range of shapes.</summary>
			<param name="DistributeCmd">Required <see cref="T:Microsoft.Office.Core.MsoDistributeCmd"></see>. Specifies whether shapes in the range are to be distributed horizontally or vertically.</param>
			<param name="RelativeTo">Required <see cref="T:Microsoft.Office.Core.MsoTriState"></see>. Not used in Microsoft Excel. Must be False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Flip(Microsoft.Office.Core.MsoFlipCmd)">
			<summary>Flips the specified shape around its horizontal or vertical axis.</summary>
			<param name="FlipCmd">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd"></see>. Specifies whether the shape is to be flipped horizontally or vertically.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementLeft(System.Single)">
			<summary>Moves the specified shape horizontally by the specified number of points.</summary>
			<param name="Increment">Required Single. Specifies how far the shape is to be moved horizontally in points. A positive value moves the shape to the right; a negative value moves it to the left.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementRotation(System.Single)">
			<summary>Changes the rotation of the specified shape around the z-axis by the specified number of degrees. Use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation"></see> property to set the absolute rotation of the shape.</summary>
			<param name="Increment">Required Single. Specifies how far the shape is to be rotated horizontally in degrees. A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementTop(System.Single)">
			<summary>Moves the specified shape vertically by the specified number of points.</summary>
			<param name="Increment">Required Single. Specifies how far the shape object is to be moved vertically in points. A positive value moves the shape down; a negative value moves it up.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
			<summary>Scales the height of the shape by a specified factor.</summary>
			<param name="Scale">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom"></see>. Specifies which part of the shape retains its position when the shape is scaled.</param>
			<param name="Factor">Required Single. Specifies the ratio between the height of the shape after you resize it and the current or original height. For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</param>
			<param name="RelativeToOriginalSize">Required <see cref="T:Microsoft.Office.Core.MsoTriState"></see>. msoTrue to scale the shape relative to its original size. msoFalse to scale it relative to its current size. You can specify msoTrue for this argument only if the specified shape is a picture or an OLE object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)">
			<summary>Scales the width of the shape by a specified factor.</summary>
			<param name="Scale">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom"></see>. Specifies which part of the shape retains its position when the shape is scaled.</param>
			<param name="Factor">Required Single. Specifies the ratio between the width of the shape after you resize it and the current or original width. For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</param>
			<param name="RelativeToOriginalSize">Required <see cref="T:Microsoft.Office.Core.MsoTriState"></see>. False to scale it relative to its current size. You can specify True for this argument only if the specified shape is a picture or an OLE object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object. The object to replace.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)">
			<summary>Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</summary>
			<param name="ZOrderCmd">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd"></see>. Specifies where to move the specified shape relative to the other shapes.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Shapes">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> objects on the specified sheet. Each Shape object represents an object in the drawing layer, such as an AutoShape, freeform, OLE object, or picture.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single)">
			<summary>Creates a borderless line callout. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new callout.</summary>
			<param name="Width">Required Single. The width of the callout's bounding box, in points.</param>
			<param name="Height">Required Single. The height of the callout's bounding box, in points.</param>
			<param name="Left">Required Single. The position (in points) of the upper-left corner of the callout's bounding box relative to the upper-left corner of the document.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoCalloutType"></see>. The type of callout line. Can be one of these MsoCalloutType constants:msoCalloutOne. A single-segment callout line that can be either horizontal or vertical.msoCalloutTwo. A single-segment callout line that rotates freely.msoCalloutMixed.msoCalloutThree. A two-segment line.msoCalloutFour. A three-segment line.</param>
			<param name="Top">Required Single. The position (in points) of the upper-left corner of the callout's bounding box relative to the upper-left corner of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddCanvas(System.Single,System.Single,System.Single,System.Single)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddConnector(Microsoft.Office.Core.MsoConnectorType,System.Single,System.Single,System.Single,System.Single)">
			<summary>Creates a connector. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new connector.</summary>
			<param name="BeginY">Required Single. The vertical position (in points) of the connector's starting point relative to the upper-left corner of the document.</param>
			<param name="BeginX">Required Single. The horizontal position (in points) of the connector's starting point relative to the upper-left corner of the document.</param>
			<param name="EndY">Required Single. The veritcal position (in points) of the connector's end point relative to the upper-left corner of the document.</param>
			<param name="EndX">Required Single. The horizontal position (in points) of the connector's end point relative to the upper-left corner of the document.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoConnectorType"></see>. The connector type to add. Can be one of these MsoConnectorType constants:msoConnectorElbowmsoConnectorTypeMixedmsoConnectorCurvemsoConnectorStraight</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents a Bézier curve in a worksheet.</summary>
			<param name="SafeArrayOfPoints">Required Object. An array of coordinate pairs that specifies the vertices and control points of the curve. The first point you specify is the starting vertex, and the next two points are control points for the first Bézier segment. Then, for each additional segment of the curve, you specify a vertex and two control points. The last point you specify is the ending vertex for the curve. Note that you must always specify 3n + 1 points, where n is the number of segments in the curve.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single)">
			<summary>Creates a diagram. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new diagram.</summary>
			<param name="Width">Required Single. The width of the diagram, in points.</param>
			<param name="Height">Required Single. The height of the diagram, in points.</param>
			<param name="Left">Required Single. The position (in points) of the upper-left corner of the diagram relative to the upper-left corner of the worksheet.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoDiagramType"></see>. The type of diagram. Can be one of these MsoDiagramType constants:msoDiagramCycle A process diagram with a continuous cycle diagram type.msoDiagramMixed A mixed diagram type.msoDiagramOrgChart A hierarchical relationship diagram type.msoDiagramPyramid A foundation based relationships diagram type.msoDiagramRadial A diagram type showing relationships of a core element.msoDiagramTarget A diagram type showing steps toward a goal.msoDiagramVenn A diagram type showing areas of overlap between elements.</param>
			<param name="Top">Required Single. The position (in points) of the upper-left top of the diagram relative to the upper-left corner of the worksheet.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddFormControl(Microsoft.Office.Interop.Excel.XlFormControl,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Creates a Microsoft Excel control. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new control.</summary>
			<param name="Width">Required Integer. The initial size of the new object, in points.</param>
			<param name="Height">Required Integer. The initial size of the new object, in points.</param>
			<param name="Left">Required Integer. The initial coordinates of the new object (in points) relative to the upper-left corner of cell A1 on a worksheet or to the upper-left corner of a chart.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl"></see>. The Microsoft Excel control type. You cannot create an edit box on a worksheet. Can be one of these XlFormControl constants:xlButtonControlxlCheckBoxxlDropDownxlEditBoxxlGroupBoxxlLabelxlListBoxxlOptionButtonxlScrollBarxlSpinner</param>
			<param name="Top">Required Integer. The initial coordinates of the new object (in points) relative to the upper-left corner of cell A1 on a worksheet or to the upper-left corner of a chart.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)">
			<summary>Creates a label. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new label.</summary>
			<param name="Width">Required Single. The width of the label, in points.</param>
			<param name="Orientation">Required <see cref="T:Microsoft.Office.Core.MsoTextOrientation"></see>. The text orientation within the label. Can be one of these MsoTextOrientation constants:msoTextOrientationDownwardmsoTextOrientationHorizontalmsoTextOrientationHorizontalRotatedFarEastmsoTextOrientationMixedmsoTextOrientationUpwardmsoTextOrientationVerticalmsoTextOrientationVerticalFarEast Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</param>
			<param name="Height">Required Single. The height of the label, in points.</param>
			<param name="Left">Required Single. The position (in points) of the upper-left corner of the label relative to the upper-left corner of the document.</param>
			<param name="Top">Required Single. The position (in points) of the upper-left corner of the label relative to the top corner of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddLine(System.Single,System.Single,System.Single,System.Single)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new line in a worksheet.</summary>
			<param name="BeginY">Required Single. The position (in points) of the line's starting point relative to the upper-left corner of the document.</param>
			<param name="BeginX">Required Single. The position (in points) of the line's starting point relative to the upper-left corner of the document.</param>
			<param name="EndY">Required Single. The position (in points) of the line's end point relative to the upper-left corner of the document.</param>
			<param name="EndX">Required Single. The position (in points) of the line's end point relative to the upper-left corner of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddOLEObject(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates an OLE object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new OLE object.</summary>
			<param name="IconLabel">Optional Object. A label (caption) to be displayed beneath the icon.</param>
			<param name="Top">Optional Object. The position (in points) of the upper-left corner of the new object relative to the upper-left corner of the document. The default value is 0 (zero).</param>
			<param name="DisplayAsIcon">Optional Object. True to display the OLE object as an icon. The default value is False.</param>
			<param name="IconFileName">Optional Object. The file that contains the icon to be displayed.</param>
			<param name="Link">Optional Object. True to link the OLE object to the file from which it was created. False to make the OLE object an independent copy of the file. If you specified a value for ClassType, this argument must be False. The default value is False.</param>
			<param name="ClassType">Optional Object. (you must specify either ClassType or FileName). A string that contains the programmatic identifier for the object to be created. If ClassType is specified, FileName and Link are ignored.</param>
			<param name="Width">Optional Object. The initial dimensions of the OLE object, in points.</param>
			<param name="Height">Optional Object. The initial dimensions of the OLE object, in points.</param>
			<param name="Left">Optional Object. The position (in points) of the upper-left corner of the new object relative to the upper-left corner of the document. The default value is 0 (zero).</param>
			<param name="IconIndex">Optional Object. The index of the icon within IconFileName. The order of icons in the specified file corresponds to the order in which the icons appear in the Change Icon dialog box (accessed from the Object dialog box when the Display as icon check box is selected). The first icon in the file has the index number 0 (zero). If an icon with the given index number doesn't exist in IconFileName, the icon with the index number 1 (the second icon in the file) is used. The default value is 0 (zero).</param>
			<param name="Filename">Optional Object. The file from which the object is to be created. If the path isn’t specified, the current working folder is used. You must specify either the ClassType or FileName argument for the object, but not both.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddPicture(System.String,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Single,System.Single)">
			<summary>Creates a picture from an existing file. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new picture.</summary>
			<param name="Width">Required Single. The width of the picture, in points.</param>
			<param name="LinkToFile">Required <see cref="T:Microsoft.Office.Core.MsoTriState"></see>. The file to link to. Can be one of these MsoTriState constants:msoCTruemsoFalse To make the picture an independent copy of the file.msoTriStateMixedmsoTriStateTogglemsoTrue To link the picture to the file from which it was created.</param>
			<param name="Filename">Required String. The file from which the OLE object is to be created.</param>
			<param name="Height">Required Single. The height of the picture, in points.</param>
			<param name="Left">Required Single. The position (in points) of the upper-left corner of the picture relative to the upper-left corner of the document.</param>
			<param name="SaveWithDocument">Required MsoTriState. To save the picture with the document.</param>
			<param name="Top">Required Single. The position (in points) of the upper-left corner of the picture relative to the top of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)">
			<summary>Creates an open polyline or a closed polygon drawing. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new polyline or polygon.</summary>
			<param name="SafeArrayOfPoints">Required Object. An array of coordinate pairs that specifies the polyline drawing's vertices.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType,System.Single,System.Single,System.Single,System.Single)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new AutoShape in a worksheet.</summary>
			<param name="Width">Required Single. The width and height of the AutoShape's bounding box, in points.</param>
			<param name="Height">Required Single. The width and height of the AutoShape's bounding box, in points.</param>
			<param name="Left">Required Single. The position (in points) of the upper-left corner of the AutoShape's bounding box relative to the upper-left corner of the document.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Core.MsoAutoShapeType"></see>. Specifies the type of AutoShape to create.</param>
			<param name="Top">Required Single. The position (in points) of the upper-left corner of the AutoShape's bounding box relative to the upper-left corner of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)">
			<summary>Creates a text box. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new text box.</summary>
			<param name="Width">Required Single. The width of the text box, in points.</param>
			<param name="Orientation">Required <see cref="T:Microsoft.Office.Core.MsoTextOrientation"></see>. The orientation of the textbox.</param>
			<param name="Height">Required Single. The height of the text box, in points.</param>
			<param name="Left">Required Single. The position (in points) of the upper-left corner of the text box relative to the upper-left corner of the document.</param>
			<param name="Top">Required Single. The position (in points) of the upper-left corner of the text box relative to the top of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single)">
			<summary>Creates a WordArt object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> object that represents the new WordArt object.</summary>
			<param name="FontName">Required String. The name of the font used in the WordArt.</param>
			<param name="FontBold">Required <see cref="T:Microsoft.Office.Core.MsoTriState"></see>. The font used in the WordArt to bold.</param>
			<param name="FontSize">Required Single. The size (in points) of the font used in the WordArt.</param>
			<param name="Text">Required String. The text in the WordArt.</param>
			<param name="FontItalic">Required MsoTriState. The font used in the WordArt to italic.</param>
			<param name="Left">Required Single. The position (in points) of the upper-left corner of the WordArt's bounding box relative to the upper-left corner of the document.</param>
			<param name="PresetTextEffect">Required <see cref="T:Microsoft.Office.Core.MsoPresetTextEffect"></see>. The preset text effect.</param>
			<param name="Top">Required Single. The position (in points) of the upper-left corner of the WordArt's bounding box relative to the top of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)">
			<summary>Builds a freeform object. Returns a <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder"></see> object that represents the freeform as it is being built.</summary>
			<param name="EditingType">Required <see cref="T:Microsoft.Office.Core.MsoEditingType"></see>. The editing property of the first node.</param>
			<param name="X1">Required Single. The position (in points) of the first node in the freeform drawing relative to the upper-left corner of the document.</param>
			<param name="Y1">Required Single. The position (in points) of the first node in the freeform drawing relative to the upper-left corner of the document.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Shapes.SelectAll">
			<summary>Selects all the shapes in the specified <see cref="T:Microsoft.Office.Interop.Excel.Shapes"></see> collection.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Shapes.Range(System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange"></see> object that represents a subset of the shapes in a <see cref="T:Microsoft.Office.Interop.Excel.Shapes"></see> collection.</summary>
			<param name="Index">Required Object. The individual shapes to be included in the range. Can be an integer that specifies the index number of the shape, a string that specifies the name of the shape, or an array that contains either integers or strings.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Sheets">
			<summary>A collection of all the sheets in the specified or active workbook.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Sheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Sheets.Add(System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates a new worksheet, chart, or macro sheet. The new worksheet becomes the active sheet.</summary>
			<param name="Before">Optional Object. An object that specifies the sheet before which the new sheet is added.</param>
			<param name="Count">Optional Object. The number of sheets to be added. The default value is one.</param>
			<param name="Type">Optional Object. Specifies the sheet type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType"></see> constants: xlWorksheet, xlChart, xlExcel4MacroSheet, or xlExcel4IntlMacroSheet. If you are inserting a sheet based on an existing template, specify the path to the template. The default value is xlWorksheet.</param>
			<param name="After">Optional Object. An object that specifies the sheet after which the new sheet is added.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Sheets.Copy(System.Object,System.Object)">
			<summary>Copies the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Sheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)">
			<summary>Copies a range to the same area on all other worksheets in a collection.</summary>
			<param name="Range">Required Range object. The range to fill on all the worksheets in the collection. The range must be from a worksheet within the collection.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith"></see>. Specifies how to copy the range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Sheets.Move(System.Object,System.Object)">
			<summary>Moves the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Sheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Prints the object.</summary>
			<param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
			<param name="Collate">Optional Object. True to collate multiple copies.</param>
			<param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
			<param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
			<param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
			<param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
			<param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
			<param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Sheets.PrintPreview(System.Object)">
			<summary>Shows a preview of the object as it would look when printed.</summary>
			<param name="EnableChanges">Enables changes to the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Sheets.Select(System.Object)">
			<summary>Selects the object</summary>
			<param name="Replace">Optional Object. The object to replace.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Sheets._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Sheets.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SmartTag">
			<summary>Represents an identifier that is assigned to a cell.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SmartTagAction">
			<summary>Represents the actions that can be performed with smart tags.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SmartTagActions">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.SmartTagAction"></see> objects that represent the actions that can be performed with smart tags.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.SmartTagActions._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.SmartTagActions.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SmartTagOptions">
			<summary>Represents the options that can be performed with smart tags.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SmartTagRecognizer">
			<summary>Represents recognition engines which label data with types of information as you work in Microsoft Excel.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizer"></see> objects that represent recognition engines that label data with types of information as you work in Microsoft Excel.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.SmartTagRecognizers.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SmartTags">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.SmartTag"></see> objects that represent the identifiers assigned to each cell.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.SmartTags.Add(System.String)">
			<summary>Adds a smart tag. Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTag"></see> object.</summary>
			<param name="SmartTagType">Required String. The type of smart tag.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.SmartTags._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SoundNote">
			<summary>This object should not be used. Sound notes have been removed from Microsoft Excel.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.SoundNote.Import(System.String)">
			<summary>This method should not be used. Sound notes have been removed from Microsoft Excel.</summary>
			<param name="Filename">This method has been deprecated.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Speech">
			<summary>Contains methods and properties that pertain to speech.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)">
			<summary>Microsoft Excel plays back the specified text string.</summary>
			<param name="Purge">Optional Object. True will cause current speech to be terminated and any buffered text to be purged before Text is spoken. False will not cause the current speech to be terminated and will not purge the buffered text before Text is spoken. The default is False.</param>
			<param name="Text">Required String. The text to be spoken.</param>
			<param name="SpeakAsync">Optional Object. True will cause the Text to be spoken asynchronously (the method will not wait for the Text to be spoken). False will cause the Text to be spoken synchronously (the method waits for the Text to be spoken before continuing). The default is False.</param>
			<param name="SpeakXML">Optional Boolean. True will cause the Text to be interpreted as XML. False will cause the Text not to be interpreted as XML, so any XML tags will be read and not interpreted. The default is False.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.SpellingOptions">
			<summary>Represents the various spell-checking options for a worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Spinner.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Spinner.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Spinners.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Spinners.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Spinners.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Spinners.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Style">
			<summary>Represents a style description for a range.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Styles">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Style"></see> objects in the specified or active workbook.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Styles.Add(System.String,System.Object)">
			<summary>Creates a new style and adds it to the list of styles that are available for the current workbook.</summary>
			<param name="BasedOn">Optional Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that refers to a cell that's used as the basis for the new style. If this argument is omitted, the newly created style is based on the Normal style.</param>
			<param name="Name">Required String. The new style name.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Styles.Merge(System.Object)">
			<summary>Merges the styles from another workbook into the <see cref="T:Microsoft.Office.Interop.Excel.Styles"></see> collection.</summary>
			<param name="Workbook">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Workbook"></see> object that represents the workbook containing styles to be merged.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Styles._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Styles.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Tab">
			<summary>Represents a tab in a chart or a worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextBox.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextBox.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextBox.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.TextBox.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Add(System.Double,System.Double,System.Double,System.Double)">
			<param name="Width">hiddenmemberparam</param>
			<param name="Height">hiddenmemberparam</param>
			<param name="Left">hiddenmemberparam</param>
			<param name="Top">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextBoxes.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">hiddenmemberparam</param>
			<param name="CustomDictionary">hiddenmemberparam</param>
			<param name="SpellLang">hiddenmemberparam</param>
			<param name="AlwaysSuggest">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextBoxes.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)">
			<param name="Format">hiddenmemberparam</param>
			<param name="Appearance">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextBoxes.Select(System.Object)">
			<param name="Replace">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.TextBoxes.Characters(System.Object,System.Object)">
			<param name="Length">hiddenmemberparam</param>
			<param name="Start">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.TextEffectFormat">
			<summary>Contains properties and methods that apply to WordArt objects.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.TextFrame">
			<summary>Represents the text frame in a Shape object. Contains the text in the text frame as well as the properties and methods that control the alignment and anchoring of the text frame.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters"></see> object that represents a range of characters within a shape’s text frame.</summary>
			<param name="Length">Optional Object. The number of characters to be returned. If this argument is omitted, the Characters method returns the remainder of the string (everything after the character that was set as the Start argument).</param>
			<param name="Start">Optional Object. The first character to be returned. If this argument is either set to 1 or omitted, the Characters method returns a range of characters starting with the first character.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.ThreeDFormat">
			<summary>Represents a shape's three-dimensional formatting.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)">
			<summary>Changes the rotation of the specified shape around the x-axis by the specified number of degrees.</summary>
			<param name="Increment">Required Single. Specifies how much (in degrees) the rotation of the shape around the x-axis is to be changed. Can be a value from –90 through 90. A positive value tilts the shape up; a negative value tilts it down.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)">
			<summary>Changes the rotation of the specified shape around the y-axis by the specified number of degrees.</summary>
			<param name="Increment">Required Single. Specifies how much (in degrees) the rotation of the shape around the y-axis is to be changed. Can be a value from –90 through 90. A positive value tilts the shape to the left; a negative value tilts it to the right.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetExtrusionDirection(Microsoft.Office.Core.MsoPresetExtrusionDirection)">
			<summary>Sets the direction that the extrusion's sweep path takes away from the extruded shape.</summary>
			<param name="PresetExtrusionDirection">Required MsoPresetExtrusionDirection. Specifies the extrusion direction.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ThreeDFormat.SetThreeDFormat(Microsoft.Office.Core.MsoPresetThreeDFormat)">
			<summary>Sets the preset extrusion format. Each preset extrusion format contains a set of preset values for the various properties of the extrusion.</summary>
			<param name="PresetThreeDFormat">Required MsoPresetThreeDFormat. Specifies a preset extrusion format that corresponds to one of the options (numbered from left to right, from top to bottom) displayed when you click the 3-D button on the Drawing toolbar.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.TickLabels">
			<summary>Represents the tick mark labels associated with tick marks on a chart axis.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.Copy(Microsoft.Office.Interop.Excel.Toolbar,System.Int32)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Toolbar">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ToolbarButton.Move(Microsoft.Office.Interop.Excel.Toolbar,System.Int32)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Toolbar">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.ToolbarButtons.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Before">hiddenmemberparam</param>
			<param name="Enabled">hiddenmemberparam</param>
			<param name="Pushed">hiddenmemberparam</param>
			<param name="HelpContextID">hiddenmemberparam</param>
			<param name="HelpFile">hiddenmemberparam</param>
			<param name="StatusBar">hiddenmemberparam</param>
			<param name="Button">hiddenmemberparam</param>
			<param name="OnAction">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ToolbarButtons._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.ToolbarButtons.Item(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Toolbars.Add(System.Object)">
			<param name="Name">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Toolbars._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Toolbars.Item(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.TreeviewControl">
			<summary>Represents the hierarchical member-selection control of a cube field. You use this object primarily for macro recording; it is not intended for any other use.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Trendline">
			<summary>Represents a trendline in a chart. A trendline shows the trend, or direction, of data in a series.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Trendlines">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Trendline"></see> objects for the specified series. Each Trendline object represents a trendline in a chart. A trendline shows the trend, or direction, of data in a series.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Trendlines.Add(Microsoft.Office.Interop.Excel.XlTrendlineType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates a new trendline. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Trendline"></see> object.</summary>
			<param name="Name">Optional Object. The name of the trendline as text. If this argument is omitted, Microsoft Excel generates a name.</param>
			<param name="DisplayRSquared">Optional Object. True to display the R-squared value of the trendline on the chart (in the same data label as the equation). The default value is False.</param>
			<param name="Intercept">Optional Object. The trendline intercept. If this argument is omitted, the intercept is automatically set by the regression.</param>
			<param name="Period">Optional Object. Required if Type is xlMovingAvg. The trendline period. Must be an integer greater than 1 and less than the number of data points in the series you're adding a trendline to.</param>
			<param name="DisplayEquation">Optional Object. True to display the equation of the trendline on the chart (in the same data label as the R-squared value). The default value is False.</param>
			<param name="Forward">Optional Object. The number of periods (or units on a scatter chart) that the trendline extends forward.</param>
			<param name="Order">Optional Object. Required if Type is xlPolynomial. The trendline order. Must be an integer from 2 to 6, inclusive.</param>
			<param name="Backward">Optional Object. The number of periods (or units on a scatter chart) that the trendline extends backward.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTrendlineType"></see>. The trendline type.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Trendlines.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number for the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.UpBars">
			<summary>Represents the up bars in a chart group. Up bars connect points on series one with higher values on the last series in the chart group (the lines go up from series one).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.UsedObjects">
			<summary>Represents objects that have been allocated in a workbook.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.UsedObjects._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.UsedObjects.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.UserAccess">
			<summary>Represents the user access for a protected range.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.UserAccessList">
			<summary>A collection of <see cref="T:Microsoft.Office.Interop.Excel.UserAccess"></see> objects that represent the user access for protected ranges.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.UserAccessList.Add(System.String,System.Boolean)">
			<summary>Adds a user access list. Returns a <see cref="T:Microsoft.Office.Interop.Excel.UserAccess"></see> object.</summary>
			<param name="AllowEdit">Required Boolean. True allows users on the access list to edit the editable ranges on a protected worksheet.</param>
			<param name="Name">Required String. The name of the user access list.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.UserAccessList._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.UserAccessList.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Validation">
			<summary>Represents data validation for a worksheet range.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)">
			<summary>Adds data validation to the specified range.</summary>
			<param name="Formula1">Optional Object. The first part of the data validation equation.</param>
			<param name="Formula2">Optional Object. The second part of the data validation when Operator is xlBetween or xlNotBetween (otherwise, this argument is ignored).</param>
			<param name="Operator">Optional Object. The data validation operator. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator"></see> constants: xlBetween, xlEqual, xlGreater, xlGreaterEqual, xlLess, xlLessEqual, xlNotBetween, or xlNotEqual.</param>
			<param name="AlertStyle">Optional Object. The validation alert style. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle"></see> constants: xlValidAlertInformation, xlValidAlertStop, or xlValidAlertWarning.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType"></see>. The validation type.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Modifies data validation for a range.</summary>
			<param name="Formula1">Optional Object. The first part of the data validation equation.</param>
			<param name="Formula2">Optional Object. The second part of the data validation when Operator is xlBetween or xlNotBetween (otherwise, this argument is ignored).</param>
			<param name="Operator">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator"></see>. The data validation operator.</param>
			<param name="AlertStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle"></see>. The validation alert style.</param>
			<param name="Type">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType"></see>. The validation type.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.VPageBreak">
			<summary>Represents a vertical page break.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.VPageBreak.DragOff(Microsoft.Office.Interop.Excel.XlDirection,System.Int32)">
			<summary>Drags a page break out of the print area.</summary>
			<param name="RegionIndex">Required Integer. The print-area region index for the page break (the region where the mouse pointer is located when the mouse button is pressed if the user drags the page break). If the print area is contiguous, there’s only one print region. If the print area is noncontiguous, there’s more than one print region.</param>
			<param name="Direction">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection"></see>. The direction in which the page break is dragged.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.VPageBreaks">
			<summary>A collection of vertical page breaks within the print area. Each vertical page break is represented by a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreak"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.VPageBreaks.Add(System.Object)">
			<summary>Adds a vertical page break. Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreak"></see> object.</summary>
			<param name="Before">Required Object. A <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object. The range to the left of which the new page break will be added.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.VPageBreaks._Default(System.Int32)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.VPageBreaks.Item(System.Int32)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Walls">
			<summary>Represents the walls of a 3-D chart.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Walls.Paste">
			<summary>Pastes a picture from the Clipboard on the walls of the specified chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Watch">
			<summary>Represents a range which is tracked when the worksheet is recalculated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Watches">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Watch"></see> objects in a specified application.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Watches.Add(System.Object)">
			<summary>Adds a range which is tracked when the worksheet is recalculated. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watch"></see> object.</summary>
			<param name="Source">Required Object. The source for the range.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Watches._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Watches.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WebOptions">
			<summary>Contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Window">
			<summary>Represents a window. Many worksheet characteristics, such as scroll bars and gridlines, are actually properties of the window.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.Close(System.Object,System.Object,System.Object)">
			<summary>Closes the object.</summary>
			<param name="RouteWorkbook">Optional Object. If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored. Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaningTrueSends the workbook to the next recipient.FalseDoesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</param>
			<param name="Filename">Optional Object. Save changes under this file name.</param>
			<param name="SaveChanges">Optional Object. If there are no changes to the workbook, this argument is ignored. If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored. If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueActionTrueSaves the changes to the workbook. If there is not yet a file name associated with the workbook, then FileName is used. If FileName is omitted, the user is asked to supply a file name.FalseDoes not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.LargeScroll(System.Object,System.Object,System.Object,System.Object)">
			<summary>Scrolls the contents of the window by pages.</summary>
			<param name="ToRight">Optional Object. The number of pages to scroll the contents to the right.</param>
			<param name="Up">Optional Object. The number of pages to scroll the contents up.</param>
			<param name="ToLeft">Optional Object. The number of pages to scroll the contents to the left.</param>
			<param name="Down">Optional Object. The number of pages to scroll the contents down.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsX(System.Int32)">
			<summary>Converts a horizontal measurement from points (document coordinates) to screen pixels (screen coordinates).</summary>
			<param name="Points">Required Integer. The number of points horizontally along the top of the document window, starting from the left.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsY(System.Int32)">
			<summary>Converts a vertical measurement from points (document coordinates) to screen pixels (screen coordinates).</summary>
			<param name="Points">Required Integer. The number of points vertically along the left edge of the document window, starting from the top.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Prints the object.</summary>
			<param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
			<param name="Collate">Optional Object. True to collate multiple copies.</param>
			<param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
			<param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
			<param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
			<param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
			<param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
			<param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.PrintPreview(System.Object)">
			<summary>Shows a preview of the object as it would look when printed.</summary>
			<param name="EnableChanges">Enables changes during preview.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.RangeFromPoint(System.Int32,System.Int32)">
			<summary>Returns the <see cref="T:Microsoft.Office.Interop.Excel.Shape"></see> or <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object that is positioned at the specified pair of screen coordinates. If there isn’t a shape located at the specified coordinates, this method returns Nothing.</summary>
			<param name="x">Required Integer. The value (in pixels) that represents the horizontal distance from the left edge of the screen, starting at the top.</param>
			<param name="y">Required Integer. The value (in pixels) that represents the vertical distance from the top of the screen, starting on the left.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
			<summary>Scrolls the document window so that the contents of a specified rectangular area are displayed in either the upper-left or lower-right corner of the document window or pane.</summary>
			<param name="Width">Required Integer. The width of the rectangle, in points.</param>
			<param name="Start">Optional Integer. True to have the upper-left corner of the rectangle appear in the upper-left corner of the document window or pane. False to have the lower-right corner of the rectangle appear in the lower-right corner of the document window or pane. The default value is True.</param>
			<param name="Height">Required Integer. The height of the rectangle, in points.</param>
			<param name="Left">Required Integer. The horizontal position of the rectangle (in points) from the left edge of the document window or pane.</param>
			<param name="Top">Required Integer. The vertical position of the rectangle (in points) from the top of the document window or pane.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.ScrollWorkbookTabs(System.Object,System.Object)">
			<summary>Scrolls through the workbook tabs at the bottom of the window.</summary>
			<param name="Position">Optional Object. Use xlFirst to scroll to the first sheet, or use xlLast to scroll to the last sheet. You must specify Position if you don't specify Sheets.</param>
			<param name="Sheets">Optional Object. The number of sheets to scroll by. Use a positive number to scroll forward, a negative number to scroll backward, or 0 (zero) not to scroll at all. You must specify Sheets if you don't specify Position.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Window.SmallScroll(System.Object,System.Object,System.Object,System.Object)">
			<summary>Scrolls the contents of the window by rows or columns.</summary>
			<param name="ToRight">Optional Object. The number of columns to scroll the contents to the right.</param>
			<param name="Up">Optional Object. The number of rows to scroll the contents up.</param>
			<param name="ToLeft">Optional Object. The number of columns to scroll the contents to the left.</param>
			<param name="Down">Optional Object. The number of rows to scroll the contents down.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Windows">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Window"></see> objects in Microsoft Excel.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Windows.Arrange(Microsoft.Office.Interop.Excel.XlArrangeStyle,System.Object,System.Object,System.Object)">
			<summary>Arranges the windows on the screen.</summary>
			<param name="SyncHorizontal">Optional Object. Ignored if ActiveWorkbook is False or omitted. True to synchronize the windows of the active workbook when scrolling horizontally. False not to synchronize the windows. The default value is False.</param>
			<param name="SyncVertical">Optional Object. Ignored if ActiveWorkbook is False or omitted. True to synchronize the windows of the active workbook when scrolling vertically. False not to synchronize the windows. The default value is False.</param>
			<param name="ArrangeStyle">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlArrangeStyle"></see>.</param>
			<param name="ActiveWorkbook">Optional Object. True to arrange only the visible windows of the active workbook. False to arrange all windows. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Windows.CompareSideBySideWith(System.Object)">
			<summary>Opens two windows in side-by-side mode.</summary>
			<param name="WindowName">The name of a window to open.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Windows._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Windows.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Workbook">
			<summary>Represents a Microsoft Excel workbook.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">classclassparam</param>
			<param name="Collate">classclassparam</param>
			<param name="To">classclassparam</param>
			<param name="PrintToFile">classclassparam</param>
			<param name="Copies">classclassparam</param>
			<param name="ActivePrinter">classclassparam</param>
			<param name="From">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass._Protect(System.Object,System.Object,System.Object)">
			<param name="Structure">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Windows">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">classclassparam</param>
			<param name="ConflictResolution">classclassparam</param>
			<param name="CreateBackup">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Filename">classclassparam</param>
			<param name="FileFormat">classclassparam</param>
			<param name="WriteResPassword">classclassparam</param>
			<param name="TextCodepage">classclassparam</param>
			<param name="TextVisualLayout">classclassparam</param>
			<param name="ReadOnlyRecommended">classclassparam</param>
			<param name="AccessMode">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.AcceptAllChanges(System.Object,System.Object,System.Object)">
			<param name="When">classclassparam</param>
			<param name="Where">classclassparam</param>
			<param name="Who">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)">
			<param name="WritePassword">classclassparam</param>
			<param name="Notify">classclassparam</param>
			<param name="Mode">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)">
			<param name="NewName">classclassparam</param>
			<param name="Name">classclassparam</param>
			<param name="Type">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.CheckIn(System.Object,System.Object,System.Object)">
			<param name="Comments">classclassparam</param>
			<param name="SaveChanges">classclassparam</param>
			<param name="MakePublic">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Close(System.Object,System.Object,System.Object)">
			<param name="RouteWorkbook">classclassparam</param>
			<param name="Filename">classclassparam</param>
			<param name="SaveChanges">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.DeleteNumberFormat(System.String)">
			<param name="NumberFormat">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Dummy17(System.Int32)">
			<param name="calcid">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="SubAddress">classclassparam</param>
			<param name="Address">classclassparam</param>
			<param name="ExtraInfo">classclassparam</param>
			<param name="NewWindow">classclassparam</param>
			<param name="AddHistory">classclassparam</param>
			<param name="HeaderInfo">classclassparam</param>
			<param name="Method">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.HighlightChangesOptions(System.Object,System.Object,System.Object)">
			<param name="When">classclassparam</param>
			<param name="Where">classclassparam</param>
			<param name="Who">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)">
			<param name="EditionRef">classclassparam</param>
			<param name="Name">classclassparam</param>
			<param name="LinkInfo">classclassparam</param>
			<param name="Type">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.LinkSources(System.Object)">
			<param name="Type">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.MergeWorkbook(System.Object)">
			<param name="Filename">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.OpenLinks(System.String,System.Object,System.Object)">
			<param name="ReadOnly">classclassparam</param>
			<param name="Name">classclassparam</param>
			<param name="Type">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="SourceData">classclassparam</param>
			<param name="RowGrand">classclassparam</param>
			<param name="BackgroundQuery">classclassparam</param>
			<param name="Connection">classclassparam</param>
			<param name="HasAutoFormat">classclassparam</param>
			<param name="PageFieldOrder">classclassparam</param>
			<param name="PageFieldWrapCount">classclassparam</param>
			<param name="TableDestination">classclassparam</param>
			<param name="ReadData">classclassparam</param>
			<param name="Reserved">classclassparam</param>
			<param name="AutoPage">classclassparam</param>
			<param name="ColumnGrand">classclassparam</param>
			<param name="OptimizeCache">classclassparam</param>
			<param name="SourceType">classclassparam</param>
			<param name="SaveData">classclassparam</param>
			<param name="TableName">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Post(System.Object)">
			<param name="DestName">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">classclassparam</param>
			<param name="Collate">classclassparam</param>
			<param name="PrToFileName">classclassparam</param>
			<param name="To">classclassparam</param>
			<param name="PrintToFile">classclassparam</param>
			<param name="Copies">classclassparam</param>
			<param name="ActivePrinter">classclassparam</param>
			<param name="From">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PrintPreview(System.Object)">
			<param name="EnableChanges">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Protect(System.Object,System.Object,System.Object)">
			<param name="Structure">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Windows">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="CreateBackup">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Filename">classclassparam</param>
			<param name="SharingPassword">classclassparam</param>
			<param name="WriteResPassword">classclassparam</param>
			<param name="ReadOnlyRecommended">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.PurgeChangeHistoryNow(System.Int32,System.Object)">
			<param name="SharingPassword">classclassparam</param>
			<param name="Days">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.RejectAllChanges(System.Object,System.Object,System.Object)">
			<param name="When">classclassparam</param>
			<param name="Where">classclassparam</param>
			<param name="Who">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ReloadAs(Microsoft.Office.Core.MsoEncoding)">
			<param name="Encoding">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.ReplyWithChanges(System.Object)">
			<param name="ShowMessage">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)">
			<param name="Which">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">classclassparam</param>
			<param name="ConflictResolution">classclassparam</param>
			<param name="CreateBackup">classclassparam</param>
			<param name="Local">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Filename">classclassparam</param>
			<param name="FileFormat">classclassparam</param>
			<param name="WriteResPassword">classclassparam</param>
			<param name="TextCodepage">classclassparam</param>
			<param name="TextVisualLayout">classclassparam</param>
			<param name="ReadOnlyRecommended">classclassparam</param>
			<param name="AccessMode">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)">
			<param name="Map">classclassparam</param>
			<param name="Filename">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SaveCopyAs(System.Object)">
			<param name="Filename">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.sblt(System.String)">
			<param name="s">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SendFaxOverInternet(System.Object,System.Object,System.Object)">
			<param name="Recipients">classclassparam</param>
			<param name="ShowMessage">classclassparam</param>
			<param name="Subject">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SendForReview(System.Object,System.Object,System.Object,System.Object)">
			<param name="Recipients">classclassparam</param>
			<param name="IncludeAttachment">classclassparam</param>
			<param name="ShowMessage">classclassparam</param>
			<param name="Subject">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SendMail(System.Object,System.Object,System.Object)">
			<param name="ReturnReceipt">classclassparam</param>
			<param name="Recipients">classclassparam</param>
			<param name="Subject">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)">
			<param name="Priority">classclassparam</param>
			<param name="FileFormat">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SetLinkOnData(System.String,System.Object)">
			<param name="Procedure">classclassparam</param>
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)">
			<param name="PasswordEncryptionKeyLength">classclassparam</param>
			<param name="PasswordEncryptionProvider">classclassparam</param>
			<param name="PasswordEncryptionAlgorithm">classclassparam</param>
			<param name="PasswordEncryptionFileProperties">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.Unprotect(System.Object)">
			<param name="Password">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.UnprotectSharing(System.Object)">
			<param name="SharingPassword">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.UpdateLink(System.Object,System.Object)">
			<param name="Name">classclassparam</param>
			<param name="Type">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)">
			<param name="ImportMap">classclassparam</param>
			<param name="Url">classclassparam</param>
			<param name="Destination">classclassparam</param>
			<param name="Overwrite">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookClass.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)">
			<param name="ImportMap">classclassparam</param>
			<param name="Data">classclassparam</param>
			<param name="Destination">classclassparam</param>
			<param name="Overwrite">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.WorkbookClass.Colors(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.AfterXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)">
			<param name="Map">internaluseonlyparam</param>
			<param name="Result">internaluseonlyparam</param>
			<param name="Url">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.AfterXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)">
			<param name="Map">internaluseonlyparam</param>
			<param name="Result">internaluseonlyparam</param>
			<param name="IsRefresh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforeClose(System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforePrint(System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforeSave(System.Boolean,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="SaveAsUI">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforeXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)">
			<param name="Map">internaluseonlyparam</param>
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Url">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.BeforeXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)">
			<param name="Map">internaluseonlyparam</param>
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Url">internaluseonlyparam</param>
			<param name="IsRefresh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.NewSheet(System.Object)">
			<param name="Sh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.PivotTableCloseConnection(Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.PivotTableOpenConnection(Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetActivate(System.Object)">
			<param name="Sh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)">
			<param name="Cancel">internaluseonlyparam</param>
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetCalculate(System.Object)">
			<param name="Sh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetDeactivate(System.Object)">
			<param name="Sh">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)">
			<param name="Sh">internaluseonlyparam</param>
			<param name="Target">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.Sync(Microsoft.Office.Core.MsoSyncEventType)">
			<param name="SyncEventType">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.WindowActivate(Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">internaluseonlyparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorkbookEvents.WindowResize(Microsoft.Office.Interop.Excel.Window)">
			<param name="Wn">internaluseonlyparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_ActivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Activate"></see> event. The Activate event occurs when a workbook is activated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AddinInstallEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AddinInstall"></see> event. The AddinInstall event occurs when the workbook is installed as an add-in.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AddinUninstallEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AddinUninstall"></see> event. The AddinUninstall event occurs when the workbook is uninstalled as an add-in.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlExportEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterXmlExport"></see> event. The AfterXmlExport event occurs after Microsoft Excel saves or exports data from the specified workbook to an XML data file.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_AfterXmlImportEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterXmlImport"></see> event. The AfterXmlImport event occurs after an existing XML data connection is refreshed or after new XML data is imported into the specified Microsoft Excel workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeCloseEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeClose"></see> event. The BeforeClose event occurs before the workbook closes. If the workbook has been changed, this event occurs before the user is asked to save changes.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforePrintEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforePrint"></see> event. The BeforePrint event occurs before the workbook (or anything in it) is printed.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeSaveEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeSave"></see> event. The BeforeSave event occurs before the workbook is saved.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlExportEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeXmlExport"></see> event. The BeforeXmlExport event occurs before Microsoft Excel saves or exports data from the specified workbook to an XML data file.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_BeforeXmlImportEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeXmlImport"></see> event. The BeforeXmlImport event occurs before an existing XML data connection is refreshed or before new XML data is imported into a Microsoft Excel workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_DeactivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Deactivate"></see> event. The Deactivate event occurs when the workbook is deactivated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_Event">
			<summary>Events interface for Microsoft Excel <see cref="T:Microsoft.Office.Interop.Excel.Workbook"></see> object events.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Activate">
			<summary>Occurs when a workbook is activated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AddinInstall">
			<summary>Occurs when the workbook is installed as an add-in.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AddinUninstall">
			<summary>Occurs when the workbook is uninstalled as an add-in.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterXmlExport">
			<summary>Occurs after Microsoft Excel saves or exports data from the specified workbook to an XML data file.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.AfterXmlImport">
			<summary>Occurs after an existing XML data connection is refreshed or after new XML data is imported into the specified Microsoft Excel workbook.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeClose">
			<summary>Occurs before the workbook closes. If the workbook has been changed, this event occurs before the user is asked to save changes.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforePrint">
			<summary>Occurs before the workbook (or anything in it) is printed.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeSave">
			<summary>Occurs before the workbook is saved.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeXmlExport">
			<summary>Occurs before Microsoft Excel saves or exports data from the specified workbook to an XML data file.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.BeforeXmlImport">
			<summary>Occurs before an existing XML data connection is refreshed or before new XML data is imported into a Microsoft Excel workbook.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Deactivate">
			<summary>Occurs when the workbook is deactivated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.NewSheet">
			<summary>Occurs when a new sheet is created in the workbook.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Open">
			<summary>Occurs when the workbook is opened.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.PivotTableCloseConnection">
			<summary>Occurs after a PivotTable report closes the connection to its data source.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.PivotTableOpenConnection">
			<summary>Occurs after a PivotTable report opens the connection to its data source.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetActivate">
			<summary>Occurs when any sheet is activated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetBeforeDoubleClick">
			<summary>Occurs when any worksheet is double-clicked, before the default double-click action.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetBeforeRightClick">
			<summary>Occurs when any worksheet is right-clicked, before the default right-click action.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetCalculate">
			<summary>Occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetChange">
			<summary>Occurs when cells in any worksheet are changed by the user or by an external link.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetDeactivate">
			<summary>Occurs when any sheet is deactivated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetFollowHyperlink">
			<summary>Occurs when you click any hyperlink in Microsoft Excel.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableUpdate">
			<summary>Occurs after the sheet of the PivotTable report has been updated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetSelectionChange">
			<summary>Occurs when the selection changes on any worksheet (doesn't occur if the selection is on a chart sheet).</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Sync">
			<summary>Occurs when the local copy of a worksheet that is part of a Document Workspace is synchronized with the copy on the server.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowActivate">
			<summary>Occurs when any workbook window is activated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowDeactivate">
			<summary>Occurs when any workbook window is deactivated.</summary>
		</member>
		<member name="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowResize">
			<summary>Occurs when any workbook window is resized.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_NewSheetEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.NewSheet"></see> event. The NewSheet event occurs when a new sheet is created in the workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_OpenEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Open"></see> event. The Open event occurs when the workbook is opened.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableCloseConnectionEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.PivotTableCloseConnection"></see> event. The PivotTableCloseConnection event occurs after a PivotTable report closes the connection to its data source.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_PivotTableOpenConnectionEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.PivotTableOpenConnection"></see> event. The PivotTableOpenConnection event occurs after a PivotTable report opens the connection to its data source.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetActivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetActivate"></see> event. The SheetActivate event occurs when any sheet is activated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeDoubleClickEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetBeforeDoubleClick"></see> event. The SheetBeforeDoubleClick event occurs when any worksheet is double-clicked, before the default double-click action.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetBeforeRightClickEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetBeforeRightClick"></see> event. The SheetBeforeRightClick event occurs when any worksheet is right-clicked, before the default right-click action.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetCalculateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetCalculate"></see> event. The SheetCalculate event occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetChangeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetChange"></see> event. The SheetChange event occurs when cells in any worksheet are changed by the user or by an external link.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetDeactivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetDeactivate"></see> event. The SheetDeactivate event occurs when any sheet is deactivated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetFollowHyperlinkEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetFollowHyperlink"></see> event. The SheetFollowHyperlink event occurs when you click any hyperlink in Microsoft Excel.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetPivotTableUpdateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetPivotTableUpdate"></see> event. The SheetPivotTableUpdate event occurs after the sheet of the PivotTable report has been updated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SheetSelectionChangeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.SheetSelectionChange"></see> event. The SheetSelectionChange event occurs when the selection changes on any worksheet (doesn't occur if the selection is on a chart sheet).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_SyncEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.Sync"></see> event. The Sync event occurs when the local copy of a worksheet that is part of a Document Workspace is synchronized with the copy on the server.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_WindowActivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowActivate"></see> event. The WindowActivate event occurs when any workbook window is activated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_WindowDeactivateEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowDeactivate"></see> event. The WindowDeactivate event occurs when any workbook window is deactivated.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorkbookEvents_WindowResizeEventHandler">
			<summary>A Delegate type used to add an event handler for the <see cref="E:Microsoft.Office.Interop.Excel.WorkbookEvents_Event.WindowResize"></see> event. The WindowResize event occurs when any workbook window is resized.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Workbooks">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook"></see> objects that are currently open in the Microsoft Excel application.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="OtherChar">hiddenmemberparam</param>
			<param name="DataType">hiddenmemberparam</param>
			<param name="Tab">hiddenmemberparam</param>
			<param name="Semicolon">hiddenmemberparam</param>
			<param name="Comma">hiddenmemberparam</param>
			<param name="Space">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="Other">hiddenmemberparam</param>
			<param name="ConsecutiveDelimiter">hiddenmemberparam</param>
			<param name="Origin">hiddenmemberparam</param>
			<param name="StartRow">hiddenmemberparam</param>
			<param name="TextQualifier">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="FieldInfo">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">hiddenmemberparam</param>
			<param name="IgnoreReadOnlyRecommended">hiddenmemberparam</param>
			<param name="Format">hiddenmemberparam</param>
			<param name="ReadOnly">hiddenmemberparam</param>
			<param name="Password">hiddenmemberparam</param>
			<param name="Editable">hiddenmemberparam</param>
			<param name="UpdateLinks">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="Origin">hiddenmemberparam</param>
			<param name="Converter">hiddenmemberparam</param>
			<param name="WriteResPassword">hiddenmemberparam</param>
			<param name="Notify">hiddenmemberparam</param>
			<param name="Delimiter">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="OtherChar">hiddenmemberparam</param>
			<param name="DataType">hiddenmemberparam</param>
			<param name="Tab">hiddenmemberparam</param>
			<param name="DecimalSeparator">hiddenmemberparam</param>
			<param name="Semicolon">hiddenmemberparam</param>
			<param name="Comma">hiddenmemberparam</param>
			<param name="Space">hiddenmemberparam</param>
			<param name="Filename">hiddenmemberparam</param>
			<param name="Other">hiddenmemberparam</param>
			<param name="ConsecutiveDelimiter">hiddenmemberparam</param>
			<param name="Origin">hiddenmemberparam</param>
			<param name="StartRow">hiddenmemberparam</param>
			<param name="TextQualifier">hiddenmemberparam</param>
			<param name="ThousandsSeparator">hiddenmemberparam</param>
			<param name="TextVisualLayout">hiddenmemberparam</param>
			<param name="FieldInfo">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)">
			<param name="Filename">hiddenmemberparam</param>
			<param name="Stylesheets">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)">
			<summary>Creates a new workbook. The new workbook becomes the active workbook. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook"></see> object.</summary>
			<param name="Template">Optional Object. Determines how the new workbook is created. If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template. If this argument is a constant, the new workbook contains a single sheet of the specified type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate"></see> constants: xlWBATChart, xlWBATExcel4IntlMacroSheet, xlWBATExcel4MacroSheet, or xlWBATWorksheet. If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the SheetsInNewWorkbook property).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)">
			<summary>True if Microsoft Excel can check out a specified workbook from a server. Read/write Boolean.</summary>
			<param name="Filename">Required String. The name of the file to check out.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)">
			<summary>Copies the specified workbook from a server to a local computer for editing.</summary>
			<param name="Filename">Required String. The name of the file to check out.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Opens a workbook.</summary>
			<param name="AddToMru">Optional Object. True to add this workbook to the list of recently used files. The default value is False.</param>
			<param name="IgnoreReadOnlyRecommended">Optional Object. True to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the Read-Only Recommended option).</param>
			<param name="Format">Optional Object. If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table. If this argument is omitted, the current delimiter is used.ValueDelimiter1Tabs2Commas3Spaces4Semicolons5Nothing6Custom character (see the Delimiter argument)</param>
			<param name="ReadOnly">Optional Object. True to open the workbook in read-only mode.</param>
			<param name="Password">Optional Object. A string that contains the password required to open a protected workbook. If this argument is omitted and the workbook requires a password, the user is prompted for the password.</param>
			<param name="Editable">Optional Object. If the file is a Microsoft Excel 4.0 add-in, this argument is True to open the add-in so that it’s a visible window. If this argument is False or omitted, the add-in is opened as hidden, and it cannot be unhidden. This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later. If the file is an Excel template, use True to open the specified template for editing or False to open a new workbook based on the specified template. The default value is False.</param>
			<param name="CorruptLoad">Optional Object. Can be one of the following constants: xlNormalLoad, xlRepairFile, and xlExtractData. The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file. The first attempt is normal. If Excel stops operating while opening the file, the second attempt is safe load. If Excel again stops operating, the next attempt is data recovery.</param>
			<param name="UpdateLinks">Optional Object. Specifies the way links in the file are updated. If this argument is omitted, the user is prompted to specify how links will be updated. Otherwise, this argument is one of the values listed in the following table.ValueMeaning1User specifies how links will be updated2Never update links for this workbook on opening3Always update links for this workbook on openingIf Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the UpdateLinks argument is 2, Microsoft Excel generates charts from the graphs attached to the file. If the argument is 0, no charts are created.</param>
			<param name="Filename">Required String. The file name of the workbook to be opened.</param>
			<param name="Origin">Optional Object. If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly). Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform"></see> constants: xlMacintosh, xlWindows, or xlMSDOS. If this argument is omitted, the current operating system is used.</param>
			<param name="Converter">Optional Object. The index of the first file converter to try when opening the file. The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried. The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)"></see> property.</param>
			<param name="WriteResPassword">Optional Object. A string that contains the password required to write to a write-reserved workbook. If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</param>
			<param name="Notify">Optional Object. If the file cannot be opened in read/write mode, this argument is True to add the file to the file notification list. Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available. If this argument is False or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</param>
			<param name="Delimiter">Optional Object. If the file is a text file and the Format argument is 6, this argument is a string that specifies the character to be used as the delimiter. For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character. Only the first character of the string is used.</param>
			<param name="Local">Optional Object. True saves files against the language of Microsoft Excel (including control panel settings). False (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)">
			<summary>Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook"></see> object representing a database.</summary>
			<param name="CommandText">Optional Object. The command text of the query.</param>
			<param name="Filename">Required String. The connection string.</param>
			<param name="ImportDataAs">Optional Object. Determines the format of the query.</param>
			<param name="CommandType">Optional Object. The command type of the query. The following command types are available: Default, SQL, and Table.</param>
			<param name="BackgroundQuery">Optional Object. The background of the query.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</summary>
			<param name="OtherChar">Optional Object (required if Other is True). Specifies the delimiter character when Other is True. If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
			<param name="DataType">Optional Object. Specifies the column format of the data in the file. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType"></see> constants: xlDelimited or xlFixedWidth. If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</param>
			<param name="Tab">Optional Object. True to have the tab character be the delimiter (DataType must be xlDelimited). The default value is False.</param>
			<param name="DecimalSeparator">Optional Object. The decimal separator that Microsoft Excel uses when recognizing numbers. The default setting is the system setting.</param>
			<param name="Local">Optional Object.</param>
			<param name="Semicolon">Optional Object. True to have the semicolon character be the delimiter (DataType must be xlDelimited). The default value is False.</param>
			<param name="Comma">Optional Object. True to have the comma character be the delimiter (DataType must be xlDelimited). The default value is False.</param>
			<param name="TrailingMinusNumbers">Optional Object.</param>
			<param name="Space">Optional Object. True to have the space character be the delimiter (DataType must be xlDelimited). The default value is False.</param>
			<param name="Filename">Required String. Specifies the file name of the text file to be opened and parsed.</param>
			<param name="Other">Optional Object. True to have the character specified by the OtherChar argument be the delimiter (DataType must be xlDelimited). The default value is False.</param>
			<param name="ConsecutiveDelimiter">Optional Object. True to have consecutive delimiters considered one delimiter. The default is False.</param>
			<param name="Origin">Optional Object. Specifies the origin of the text file. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform"></see> constants: xlMacintosh, xlWindows, or xlMSDOS. Additionally, this could be an integer representing the code page number of the desired code page. For example, "1256" would specify that the encoding of the source text file is Arabic (Windows). If this argument is omitted, the method uses the current setting of the File Origin option in the Text Import Wizard.</param>
			<param name="StartRow">Optional Object. The row number at which to start parsing text. The default value is 1.</param>
			<param name="TextQualifier">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier"></see>. Specifies the text qualifier. Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier"></see> constants.xlTextQualifierDoubleQuotedefaultxlTextQualifierNonexlTextQualifierSingleQuote</param>
			<param name="ThousandsSeparator">Optional Object. The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings. Numeric results are displayed in the rightmost column.System decimal separatorSystem thousands separatorDecimal separator valueThousands separator valueText importedCell value (data type)PeriodCommaCommaPeriod123.123,45123,123.45 (numeric)PeriodCommaCommaComma123.123,45123.123,45 (text)CommaPeriodPeriodComma123,123.45123,123.45 (numeric)PeriodCommaPeriodComma123 123.45123 123.45 (text)PeriodCommaPeriodSpace123 123.45123,123.45 (numeric)</param>
			<param name="TextVisualLayout">Optional Object. The visual layout of the text.</param>
			<param name="FieldInfo">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType"></see>. An array containing parse information for individual columns of data. The interpretation depends on the value of DataType. When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column. The first element is the column number (1-based), and the second element is one of theXlColumnDataType constants specifying how the column is parsed.xlGeneralFormat GeneralxlTextFormat TextxlMDYFormat MDY datexlDMYFormat DMY datexlYMDFormat YMD datexlMYDFormat MYD datexlDYMFormat DYM datexlYDMFormat YDM datexlEMDFormat EMD datexlSkipColumn Skip ColumnYou can use xlEMDFormat only if you have installed and selected Taiwanese language support. The xlEMDFormat constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order. If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.NotesIf you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General. Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character). The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)">
			<summary>Opens an XML data file. Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook"></see> object.</summary>
			<param name="LoadOption">Optional Object. Specifies how Excel opens the XML data file. Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption"></see> constants:xlXmlLoadImportToList Places the contents of the XML data file in an XML list.xlXmlLoadMapXml Displays the schema of the XML data file in the XML Structure task pane.xlXmlLoadOpenXml Opens the XML data file. The contents of the file will be flattened.xlXmlLoadPromptUser Prompts the user to choose how to open the file.</param>
			<param name="Filename">Required String. The name of the file to open.</param>
			<param name="Stylesheets">Optional Object. Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Worksheet">
			<summary>Represents a worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">classclassparam</param>
			<param name="SpellScript">classclassparam</param>
			<param name="CustomDictionary">classclassparam</param>
			<param name="SpellLang">classclassparam</param>
			<param name="IgnoreFinalYaa">classclassparam</param>
			<param name="AlwaysSuggest">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._Evaluate(System.Object)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">classclassparam</param>
			<param name="DisplayAsIcon">classclassparam</param>
			<param name="Format">classclassparam</param>
			<param name="IconFileName">classclassparam</param>
			<param name="Link">classclassparam</param>
			<param name="IconIndex">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">classclassparam</param>
			<param name="Collate">classclassparam</param>
			<param name="To">classclassparam</param>
			<param name="PrintToFile">classclassparam</param>
			<param name="Copies">classclassparam</param>
			<param name="ActivePrinter">classclassparam</param>
			<param name="From">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Contents">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="DrawingObjects">classclassparam</param>
			<param name="UserInterfaceOnly">classclassparam</param>
			<param name="Scenarios">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">classclassparam</param>
			<param name="CreateBackup">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Filename">classclassparam</param>
			<param name="FileFormat">classclassparam</param>
			<param name="WriteResPassword">classclassparam</param>
			<param name="TextCodepage">classclassparam</param>
			<param name="TextVisualLayout">classclassparam</param>
			<param name="ReadOnlyRecommended">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Arcs(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Buttons(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ChartObjects(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.CheckBoxes(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
			<param name="IgnoreUppercase">classclassparam</param>
			<param name="CustomDictionary">classclassparam</param>
			<param name="SpellLang">classclassparam</param>
			<param name="AlwaysSuggest">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Copy(System.Object,System.Object)">
			<param name="Before">classclassparam</param>
			<param name="After">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.DrawingObjects(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Drawings(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.DropDowns(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Evaluate(System.Object)">
			<param name="Name">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.GroupBoxes(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.GroupObjects(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Labels(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Lines(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ListBoxes(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Move(System.Object,System.Object)">
			<param name="Before">classclassparam</param>
			<param name="After">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.OLEObjects(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.OptionButtons(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Ovals(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Paste(System.Object,System.Object)">
			<param name="Link">classclassparam</param>
			<param name="Destination">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="IconLabel">classclassparam</param>
			<param name="DisplayAsIcon">classclassparam</param>
			<param name="Format">classclassparam</param>
			<param name="IconFileName">classclassparam</param>
			<param name="Link">classclassparam</param>
			<param name="NoHTMLFormatting">classclassparam</param>
			<param name="IconIndex">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Pictures(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTables(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="SourceData">classclassparam</param>
			<param name="RowGrand">classclassparam</param>
			<param name="BackgroundQuery">classclassparam</param>
			<param name="Connection">classclassparam</param>
			<param name="HasAutoFormat">classclassparam</param>
			<param name="PageFieldOrder">classclassparam</param>
			<param name="PageFieldWrapCount">classclassparam</param>
			<param name="TableDestination">classclassparam</param>
			<param name="ReadData">classclassparam</param>
			<param name="Reserved">classclassparam</param>
			<param name="AutoPage">classclassparam</param>
			<param name="ColumnGrand">classclassparam</param>
			<param name="OptimizeCache">classclassparam</param>
			<param name="SourceType">classclassparam</param>
			<param name="SaveData">classclassparam</param>
			<param name="TableName">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">classclassparam</param>
			<param name="Collate">classclassparam</param>
			<param name="PrToFileName">classclassparam</param>
			<param name="To">classclassparam</param>
			<param name="PrintToFile">classclassparam</param>
			<param name="Copies">classclassparam</param>
			<param name="ActivePrinter">classclassparam</param>
			<param name="From">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.PrintPreview(System.Object)">
			<param name="EnableChanges">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AllowInsertingColumns">classclassparam</param>
			<param name="Contents">classclassparam</param>
			<param name="AllowInsertingRows">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="AllowFormattingCells">classclassparam</param>
			<param name="AllowFiltering">classclassparam</param>
			<param name="DrawingObjects">classclassparam</param>
			<param name="AllowSorting">classclassparam</param>
			<param name="AllowDeletingRows">classclassparam</param>
			<param name="UserInterfaceOnly">classclassparam</param>
			<param name="AllowInsertingHyperlinks">classclassparam</param>
			<param name="AllowDeletingColumns">classclassparam</param>
			<param name="AllowFormattingColumns">classclassparam</param>
			<param name="Scenarios">classclassparam</param>
			<param name="AllowFormattingRows">classclassparam</param>
			<param name="AllowUsingPivotTables">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Rectangles(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="AddToMru">classclassparam</param>
			<param name="CreateBackup">classclassparam</param>
			<param name="Password">classclassparam</param>
			<param name="Filename">classclassparam</param>
			<param name="FileFormat">classclassparam</param>
			<param name="WriteResPassword">classclassparam</param>
			<param name="TextCodepage">classclassparam</param>
			<param name="TextVisualLayout">classclassparam</param>
			<param name="ReadOnlyRecommended">classclassparam</param>
			<param name="Local">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Scenarios(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.ScrollBars(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Select(System.Object)">
			<param name="Replace">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.SetBackgroundPicture(System.String)">
			<param name="Filename">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Spinners(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.TextBoxes(System.Object)">
			<param name="Index">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.Unprotect(System.Object)">
			<param name="Password">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.XmlDataQuery(System.String,System.Object,System.Object)">
			<param name="Map">classclassparam</param>
			<param name="SelectionNamespaces">classclassparam</param>
			<param name="XPath">classclassparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetClass.XmlMapQuery(System.String,System.Object,System.Object)">
			<param name="Map">classclassparam</param>
			<param name="SelectionNamespaces">classclassparam</param>
			<param name="XPath">classclassparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.WorksheetClass.Range(System.Object,System.Object)">
			<param name="Cell1">classclassparam</param>
			<param name="Cell2">classclassparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.WorksheetFunction">
			<summary>Used as a container for Microsoft Excel worksheet functions</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsThaiDigit(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtDown(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtUp(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDayOfWeek(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDigit(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiMonthOfYear(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumSound(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumString(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiStringLength(System.String)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiYear(System.Double)">
			<param name="Arg1">hiddenmemberparam</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.Worksheets">
			<summary>A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet"></see> objects in the specified or active workbook. Each Worksheet object represents a worksheet.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Worksheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<param name="Preview">hiddenmemberparam</param>
			<param name="Collate">hiddenmemberparam</param>
			<param name="To">hiddenmemberparam</param>
			<param name="PrintToFile">hiddenmemberparam</param>
			<param name="Copies">hiddenmemberparam</param>
			<param name="ActivePrinter">hiddenmemberparam</param>
			<param name="From">hiddenmemberparam</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)">
			<summary>Creates a new worksheet, chart, or macro sheet. The new worksheet becomes the active sheet.</summary>
			<param name="Before">Optional Object. An object that specifies the sheet before which the new sheet is added.</param>
			<param name="Count">Optional Object. The number of sheets to be added. The default value is one</param>
			<param name="Type">Optional Object. Specifies the sheet type. Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType"></see> constants: xlWorksheet, xlChart, xlExcel4MacroSheet, or xlExcel4IntlMacroSheet. If you are inserting a sheet based on an existing template, specify the path to the template. The default value is xlWorksheet.</param>
			<param name="After">Optional Object. An object that specifies the sheet after which the new sheet is added.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Worksheets.Copy(System.Object,System.Object)">
			<summary>Copies the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the copied sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the copied sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Worksheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)">
			<summary>Copies a range to the same area on all other worksheets in a collection.</summary>
			<param name="Range">Required <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> object. The range to fill on all the worksheets in the collection. The range must be from a worksheet within the collection.</param>
			<param name="Type">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith"></see>. Specifies how to copy the range.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Worksheets.Move(System.Object,System.Object)">
			<summary>Moves the sheet to another location in the workbook.</summary>
			<param name="Before">Optional Object. The sheet before which the moved sheet will be placed. You cannot specify Before if you specify After.</param>
			<param name="After">Optional Object. The sheet after which the moved sheet will be placed. You cannot specify After if you specify Before.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
			<summary>Prints the object.</summary>
			<param name="Preview">Optional Object. True to have Microsoft Excel invoke print preview before printing the object. False (or omitted) to print the object immediately.</param>
			<param name="Collate">Optional Object. True to collate multiple copies.</param>
			<param name="PrToFileName">Optional Object. If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
			<param name="To">Optional Object. The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
			<param name="PrintToFile">Optional Object. True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
			<param name="Copies">Optional Object. The number of copies to print. If this argument is omitted, one copy is printed.</param>
			<param name="ActivePrinter">Optional Object. Sets the name of the active printer.</param>
			<param name="From">Optional Object. The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Worksheets.PrintPreview(System.Object)">
			<summary>Shows a preview of the object as it would look when printed.</summary>
			<param name="EnableChanges">Enables changes to the object.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.Worksheets.Select(System.Object)">
			<summary>Selects the object.</summary>
			<param name="Replace">Optional Object (used only with sheets). True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects and the specified object.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Worksheets._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlApplicationInternational">
			<summary>Specifies country/region and international settings.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xl24HourClock">
			<summary>True if you’re using 24-hour time; False if you’re using 12-hour time.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xl4DigitYears">
			<summary>True if you’re using four-digit years; False if you’re using two-digit years.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlAlternateArraySeparator">
			<summary>Alternate array item separator to be used if the current array separator is the same as the decimal separator.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlColumnSeparator">
			<summary>Character used to separate columns in array literals.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCountryCode">
			<summary>Country/Region version of Microsoft Excel.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCountrySetting">
			<summary>Current country/region setting in the Windows Control Panel.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyBefore">
			<summary>True if the currency symbol precedes the currency values; False if it follows them.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyCode">
			<summary>Currency symbol.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyDigits">
			<summary>Number of decimal digits to be used in currency formats.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyLeadingZeros">
			<summary>True if leading zeros are displayed for zero currency values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyMinusSign">
			<summary>True if you’re using a minus sign for negative numbers; False if you’re using parentheses.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyNegative">
			<summary>Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region. Note that the position of the currency symbol is determined by xlCurrencyBefore.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencySpaceBefore">
			<summary>True if a space is added before the currency symbol.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyTrailingZeros">
			<summary>True if trailing zeros are displayed for zero currency values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDateOrder">
			<summary>Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDateSeparator">
			<summary>Date separator (/).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDayCode">
			<summary>Day symbol (d).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDayLeadingZero">
			<summary>True if a leading zero is displayed in days.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDecimalSeparator">
			<summary>Decimal separator.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlGeneralFormatName">
			<summary>Name of the General number format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlHourCode">
			<summary>Hour symbol (h).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLeftBrace">
			<summary>Character used instead of the left brace ({) in array literals.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLeftBracket">
			<summary>Character used instead of the left bracket ([) in R1C1-style relative references.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlListSeparator">
			<summary>List separator.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLowerCaseColumnLetter">
			<summary>Lowercase column letter.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLowerCaseRowLetter">
			<summary>Lowercase row letter.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMDY">
			<summary>True if the date order is month-day-year for dates displayed in the long form; False if the date order is day-month-year.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMetric">
			<summary>True if you’re using the metric system; False if you’re using the English measurement system.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMinuteCode">
			<summary>Minute symbol (m).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthCode">
			<summary>Month symbol (m).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthLeadingZero">
			<summary>True if a leading zero is displayed in months (when months are displayed as numbers).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthNameChars">
			<summary>Always returns three characters for backward compatibility. Abbreviated month names are read from Microsoft Windows and can be any length.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlNoncurrencyDigits">
			<summary>Number of decimal digits to be used in noncurrency formats.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlNonEnglishFunctions">
			<summary>True if you’re not displaying functions in English.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRightBrace">
			<summary>Character used instead of the right brace (}) in array literals.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRightBracket">
			<summary>Character used instead of the right bracket (]) in R1C1-style references.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRowSeparator">
			<summary>Character used to separate rows in array literals.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlSecondCode">
			<summary>Second symbol (s).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlThousandsSeparator">
			<summary>Zero or thousands separator.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlTimeLeadingZero">
			<summary>True if a leading zero is displayed in times.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlTimeSeparator">
			<summary>Time separator (:).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlUpperCaseColumnLetter">
			<summary>Uppercase column letter.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlUpperCaseRowLetter">
			<summary>Uppercase row letter (for R1C1-style references).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlWeekdayNameChars">
			<summary>Always returns three characters for backward compatibility. Abbreviated weekday names are read from Microsoft Windows and can be any length.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlYearCode">
			<summary>Year symbol in number formats (y).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder">
			<summary>Specifies which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlColumnThenRow">
			<summary>Columns listed before rows.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn">
			<summary>Rows listed before columns.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlArabicModes">
			<summary>Specifies spelling rules for the Arabic spelling checker.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArabicModes.xlArabicBothStrict">
			<summary>The spelling checker uses spelling rules regarding both Arabic words ending with the letter yaa and Arabic words beginning with an alef hamza.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArabicModes.xlArabicNone">
			<summary>The spelling checker ignores spelling rules regarding either Arabic words ending with the letter yaa or Arabic words beginning with an alef hamza.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArabicModes.xlArabicStrictAlefHamza">
			<summary>The spelling checker uses spelling rules regarding Arabic words beginning with an alef hamza.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArabicModes.xlArabicStrictFinalYaa">
			<summary>The spelling checker uses spelling rules regarding Arabic words ending with the letter yaa.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlArrangeStyle">
			<summary>Specifies how windows are arranged on the screen.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleCascade">
			<summary>Windows are cascaded.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleHorizontal">
			<summary>Windows are arranged horizontally</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleTiled">
			<summary>default. Windows are tiled.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleVertical">
			<summary>Windows are arranged vertically.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlArrowHeadLength">
			<summary>Specifies the length of the arrowhead at the end of a line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadLength.xlArrowHeadLengthLong">
			<summary>Longest arrowhead.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadLength.xlArrowHeadLengthMedium">
			<summary>Medium-length arrowhead.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadLength.xlArrowHeadLengthShort">
			<summary>Shortest arrowhead.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlArrowHeadStyle">
			<summary>Specifies the type of arrowhead to apply to the line end.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleClosed">
			<summary>Small arrowhead with curved edge at connection to line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleDoubleClosed">
			<summary>Large diamond-shaped arrowhead.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleDoubleOpen">
			<summary>Large arrowhead with curved edge at connection to line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleNone">
			<summary>No arrowhead.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadStyle.xlArrowHeadStyleOpen">
			<summary>Large triangular arrowhead.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlArrowHeadWidth">
			<summary>Specifies the width of the arrowhead at the line end.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadWidth.xlArrowHeadWidthMedium">
			<summary>Medium-width arrowhead.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadWidth.xlArrowHeadWidthNarrow">
			<summary>Narrowest arrowhead.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlArrowHeadWidth.xlArrowHeadWidthWide">
			<summary>Widest arrowhead.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlAutoFillType">
			<summary>Specifies how the target range is to be filled, based on the contents of the source range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillCopy">
			<summary>Copy the values and formats from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDays">
			<summary>Extend the names of the days of the week in the source range into the target range. Formats are copied from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault">
			<summary>Excel determines the values and formats used to fill the target range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillFormats">
			<summary>Copy only the formats from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillMonths">
			<summary>Extend the names of the months in the source range into the target range. Formats are copied from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillSeries">
			<summary>Extend the values in the source range into the target range as a series (e.g., '1, 2' is extended as '3, 4, 5'). Formats are copied from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillValues">
			<summary>Copy only the values from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillWeekdays">
			<summary>Extend the names of the days of the workweek in the source range into the target range. Formats are copied from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillYears">
			<summary>Extend the years in the source range into the target range. Formats are copied from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlGrowthTrend">
			<summary>Extend the numeric values from the source range into the target range, assuming that the relationships between the numbers in the source range are multiplicative (e.g., '1, 2,' is extended as '4, 8, 16' assuming that each number is a result of multiplying the previous number by some value). Formats are copied from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFillType.xlLinearTrend">
			<summary>Extend the numeric values from the source range into the target range, assuming that the relationships between the numbers is additive (e.g., '1, 2,' is extended as '3, 4, 5' assuming that each number is a result of adding some value to the previous number). Formats are copied from the source range to the target range, repeating if necessary.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator">
			<summary>Specifies the operator to use to associate two criteria applied by a filter.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd">
			<summary>Logical AND of Criteria1 and Criteria2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlBottom10Items">
			<summary>Lowest-valued items displayed (number of items specified in Criteria1).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlBottom10Percent">
			<summary>Lowest-valued items displayed (percentage specified in Criteria1).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlOr">
			<summary>Logical OR of Criteria1 and Criteria2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Items">
			<summary>Highest-valued items displayed (number of items specified in Criteria1).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlTop10Percent">
			<summary>Lowest-valued items displayed (percentage of items specified in Criteria1).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlAxisCrosses">
			<summary>Specifies the point on the specified axis where the other axis crosses.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisCrosses.xlAxisCrossesAutomatic">
			<summary>Microsoft Excel sets the axis crossing point.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisCrosses.xlAxisCrossesCustom">
			<summary>The CrossesAt property specifies the axis crossing point.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisCrosses.xlAxisCrossesMaximum">
			<summary>The axis crosses at the maximum value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisCrosses.xlAxisCrossesMinimum">
			<summary>The axis crosses at the minimum value.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlAxisGroup">
			<summary>Specifies the type of axis group.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary">
			<summary>Primary axis group.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary">
			<summary>Secondary axis group.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlAxisType">
			<summary>Specifies the axis type.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory">
			<summary>Axis displays categories.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis">
			<summary>Axis displays data series.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue">
			<summary>Axis displays values.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlBackground">
			<summary>Specifies the background type for text in charts.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBackground.xlBackgroundAutomatic">
			<summary>Excel controls the background.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBackground.xlBackgroundOpaque">
			<summary>Opaque.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBackground.xlBackgroundTransparent">
			<summary>Transparent.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlBarShape">
			<summary>Specifies the shape used with the 3-D bar or column chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlBox">
			<summary>Box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlConeToMax">
			<summary>Cone, truncated at value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlConeToPoint">
			<summary>Cone, coming to point at value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlCylinder">
			<summary>Cylinder.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlPyramidToMax">
			<summary>Pyramid, truncated at value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBarShape.xlPyramidToPoint">
			<summary>Pyramid, coming to point at value.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlBordersIndex">
			<summary>Specifies the border to be retrieved.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlDiagonalDown">
			<summary>Border running from the upper left-hand corner to the lower right of each cell in the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlDiagonalUp">
			<summary>Border running from the lower left-hand corner to the upper right of each cell in the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlEdgeBottom">
			<summary>Border at the bottom of the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlEdgeLeft">
			<summary>Border at the left-hand edge of the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlEdgeRight">
			<summary>Border at the right-hand edge of the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlEdgeTop">
			<summary>Border at the top of the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlInsideHorizontal">
			<summary>Horizontal borders for all cells in the range except borders on the outside of the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBordersIndex.xlInsideVertical">
			<summary>Vertical borders for all the cells in the range except borders on the outside of the range.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlBorderWeight">
			<summary>Specifies the weight of the border around a range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlHairline">
			<summary>Hairline (thinnest border).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlMedium">
			<summary>Medium.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThick">
			<summary>Thick (widest border).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin">
			<summary>Thin.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlBuiltInDialog">
			<summary>Specifies which dialog box to display.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog._xlDialogChartSourceData">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog._xlDialogPhonetic">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogActivate">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogActiveCellFont">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAddChartAutoformat">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAddinManager">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAlignment">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogApplyNames">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogApplyStyle">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAppMove">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAppSize">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogArrangeAll">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAssignToObject">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAssignToTool">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAttachText">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAttachToolbars">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAutoCorrect">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogAxes">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogBorder">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCalculation">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCellProtection">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChangeLink">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartAddData">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartLocation">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartOptionsDataLabelMultiple">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartOptionsDataLabels">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartOptionsDataTable">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartSourceData">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartTrend">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartType">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogChartWizard">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCheckboxProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogClear">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogColorPalette">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogColumnWidth">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCombination">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogConditionalFormatting">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogConsolidate">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCopyChart">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCopyPicture">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCreateList">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCreateNames">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCreatePublisher">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCustomizeToolbar">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogCustomViews">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataDelete">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataLabel">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataLabelMultiple">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataSeries">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDataValidation">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDefineName">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDefineStyle">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDeleteFormat">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDeleteName">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDemote">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogDisplay">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditboxProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditColor">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditDelete">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditionOptions">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEditSeries">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogErrorbarX">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogErrorbarY">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogErrorChecking">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogEvaluateFormula">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogExternalDataProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogExtract">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFileDelete">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFileSharing">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFillGroup">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFillWorkgroup">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFilter">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFilterAdvanced">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFindFile">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFont">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFontProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatAuto">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatChart">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatCharttype">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatFont">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatLegend">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatMain">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatMove">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatNumber">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatOverlay">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatSize">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormatText">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormulaFind">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormulaGoto">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFormulaReplace">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogFunctionWizard">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dArea">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dBar">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dColumn">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dLine">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dPie">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGallery3dSurface">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryArea">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryBar">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryColumn">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryCustom">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryDoughnut">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryLine">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryPie">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryRadar">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGalleryScatter">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGoalSeek">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogGridlines">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogImportTextFile">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsert">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertHyperlink">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertNameLabel">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertObject">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertPicture">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogInsertTitle">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogLabelProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogListboxProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMacroOptions">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMailEditMailer">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMailLogon">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMailNextLetter">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMainChart">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMainChartType">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMenuEditor">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMove">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogMyPermission">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogNew">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogNewWebQuery">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogNote">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogObjectProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogObjectProtection">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOpen">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOpenLinks">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOpenMail">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOpenText">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsCalculation">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsChart">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsEdit">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsGeneral">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsListsAdd">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsME">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsTransition">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOptionsView">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOutline">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOverlay">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogOverlayChartType">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPageSetup">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogParse">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPasteNames">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPasteSpecial">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPatterns">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPermission">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPhonetic">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotCalculatedField">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotCalculatedItem">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotClientServerSet">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotFieldGroup">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotFieldProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotFieldUngroup">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotShowPages">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotSolveOrder">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotTableOptions">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPivotTableWizard">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPlacement">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPrint">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPrinterSetup">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPrintPreview">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPromote">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPropertyFields">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogProtectDocument">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogProtectSharing">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPublishAsWebPage">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogPushbuttonProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogReplaceFont">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogRoutingSlip">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogRowHeight">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogRun">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveAs">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveCopyAs">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveNewObject">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveWorkbook">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSaveWorkspace">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScale">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioAdd">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioCells">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioEdit">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioMerge">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScenarioSummary">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogScrollbarProperties">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSearch">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSelectSpecial">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSendMail">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesAxes">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesOptions">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesOrder">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesShape">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesX">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSeriesY">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetBackgroundPicture">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetPrintTitles">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSetUpdateStatus">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogShowDetail">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogShowToolbar">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSize">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSort">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSortSpecial">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSplit">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogStandardFont">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogStandardWidth">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogStyle">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSubscribeTo">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSubtotalCreate">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogSummaryInfo">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogTable">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogTabOrder">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogTextToColumns">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogUnhide">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogUpdateLink">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogVbaInsertFile">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogVbaMakeAddin">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogVbaProcedureDefinition">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogView3d">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsBrowsers">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsEncoding">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsFiles">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsFonts">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsGeneral">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWebOptionsPictures">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWindowMove">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWindowSize">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookAdd">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookCopy">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookInsert">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookMove">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookName">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookNew">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookOptions">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookProtect">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookTabSplit">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkbookUnhide">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkgroup">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogWorkspace">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlBuiltInDialog.xlDialogZoom">
			<summary>Displays the dialog box described in the constant name.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCalculatedMemberType">
			<summary>Specifies the type of a calculated member in a pivot table.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculatedMemberType.xlCalculatedMember">
			<summary>The member uses a Multidimensional Expression (MDX) formula.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculatedMemberType.xlCalculatedSet">
			<summary>The member contains an MDX formula for a set in a cube field.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCalculation">
			<summary>Specifies the calculation mode.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculation.xlCalculationAutomatic">
			<summary>Excel controls recalculation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculation.xlCalculationManual">
			<summary>Calculation is done when the user requests it.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculation.xlCalculationSemiautomatic">
			<summary>Excel controls recalculation but ignores changes in tables.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey">
			<summary>Specifies which key interrupts recalculation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey.xlAnyKey">
			<summary>Pressing any key interrupts recalculation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey.xlEscKey">
			<summary>Pressing the ESC key interrupts recalculation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey.xlNoKey">
			<summary>No key press can interrupt recalculation.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCalculationState">
			<summary>Specifies the calculation state of the application.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculationState.xlCalculating">
			<summary>Calculations in process.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculationState.xlDone">
			<summary>Calculations complete.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCalculationState.xlPending">
			<summary>Changes that trigger calculation have been made, but a recalculation has not yet been performed.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCategoryType">
			<summary>Specifies the type of the category axis.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCategoryType.xlAutomaticScale">
			<summary>Excel controls the axis type.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCategoryType.xlCategoryScale">
			<summary>Axis groups data by an arbitrary set of categories.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCategoryType.xlTimeScale">
			<summary>Axis groups data on a time scale.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCellInsertionMode">
			<summary>Specifies the way rows on the specified worksheet are added or deleted to accommodate the number of rows in a recordset returned by a query.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellInsertionMode.xlInsertDeleteCells">
			<summary>Partial rows are inserted or deleted to match the exact number of rows required for the new recordset.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellInsertionMode.xlInsertEntireRows">
			<summary>Entire rows are inserted, if necessary, to accommodate any overflow. No cells or rows are deleted from the worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellInsertionMode.xlOverwriteCells">
			<summary>No new cells or rows are added to the worksheet. Data in surrounding cells is overwritten to accommodate any overflow.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCellType">
			<summary>Specifies the type of cells.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeAllFormatConditions">
			<summary>Cells of any format</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeAllValidation">
			<summary>Cells having validation criteria</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeBlanks">
			<summary>Empty cells</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeComments">
			<summary>Cells containing notes</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeConstants">
			<summary>Cells containing constants</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeFormulas">
			<summary>Cells containing formulas</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeLastCell">
			<summary>The last cell in the used range</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeSameFormatConditions">
			<summary>Cells having the same format</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeSameValidation">
			<summary>Cells having the same validation criteria</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeVisible">
			<summary>All visible cells</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlChartGallery">
			<summary>Specifies a chart gallery.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlAnyGallery">
			<summary>Either of the galleries.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn">
			<summary>The built-in gallery.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlUserDefined">
			<summary>The user-defined gallery.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlChartItem">
			<summary>Specifies the type of the chart item.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlAxis">
			<summary>Axis.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlAxisTitle">
			<summary>Axis title.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlChartArea">
			<summary>Chart area.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlChartTitle">
			<summary>Chart title.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlCorners">
			<summary>Corners.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDataLabel">
			<summary>Data label.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDataTable">
			<summary>Data table.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDisplayUnitLabel">
			<summary>Display unit label.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDownBars">
			<summary>Down bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlDropLines">
			<summary>Drop lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlErrorBars">
			<summary>Error bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlFloor">
			<summary>Floor.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlHiLoLines">
			<summary>HiLo lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlLeaderLines">
			<summary>Leader lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlLegend">
			<summary>Legend.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendEntry">
			<summary>Legend entry.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendKey">
			<summary>Legend key.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlMajorGridlines">
			<summary>Major gridlines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlMinorGridlines">
			<summary>Minor gridlines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlNothing">
			<summary>Nothing.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartDropZone">
			<summary>PivotChart drop zone.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartFieldButton">
			<summary>PivotChart field button.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlPlotArea">
			<summary>Plot area.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlRadarAxisLabels">
			<summary>Radar axis labels.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlSeries">
			<summary>Series.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlSeriesLines">
			<summary>Series lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlShape">
			<summary>Shape.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlTrendline">
			<summary>Trend line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlUpBars">
			<summary>Up bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlWalls">
			<summary>Walls.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlXErrorBars">
			<summary>X error bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartItem.xlYErrorBars">
			<summary>Y error bars.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlChartLocation">
			<summary>Specifies where to relocate a chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet">
			<summary>Chart is moved to a new sheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject">
			<summary>Chart is to be embedded in an existing sheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAutomatic">
			<summary>Excel controls chart location.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlChartPicturePlacement">
			<summary>Specifies the placement of a user-selected picture on a bar in a 3-D bar or column.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlAllFaces">
			<summary>Display on all faces.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlEnd">
			<summary>Display on end.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlEndSides">
			<summary>Display on end and sides.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlFront">
			<summary>Display on front.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlFrontEnd">
			<summary>Display on front and end.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlFrontSides">
			<summary>Display on front and sides.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPicturePlacement.xlSides">
			<summary>Display on sides.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlChartPictureType">
			<summary>Specifies how pictures are displayed on a column, bar picture chart, or legend key.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStack">
			<summary>Picture is sized to repeat a maximum of 15 times in the longest stacked bar.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale">
			<summary>Picture is sized to a specified number of units and repeated the length of the bar.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStretch">
			<summary>Picture is stretched the full length of stacked bar.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlChartSplitType">
			<summary>Specifies the values displayed in the second chart in a pie chart or a bar of pie chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartSplitType.xlSplitByCustomSplit">
			<summary>Arbitrary slides are displayed in the second chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartSplitType.xlSplitByPercentValue">
			<summary>Second chart displays values less than some percentage of the total value. The percentage is specified by the SplitValue property.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartSplitType.xlSplitByPosition">
			<summary>Second chart displays the smallest values in the data series. The number of values to display is specified by the SplitValue property.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartSplitType.xlSplitByValue">
			<summary>Second chart displays values less than the value specified by the SplitValue property.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlChartType">
			<summary>Specifies the chart type.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DArea">
			<summary>3D Area</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DAreaStacked">
			<summary>3D Stacked Area</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DAreaStacked100">
			<summary>100% Stacked Area</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DBarClustered">
			<summary>3D Clustered Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DBarStacked">
			<summary>3D Stacked Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DBarStacked100">
			<summary>3D 100% Stacked Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DColumn">
			<summary>3D Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DColumnClustered">
			<summary>3D Clustered Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DColumnStacked">
			<summary>3D Stacked Column </summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DColumnStacked100">
			<summary>3D 100% Stacked Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DLine">
			<summary>3D Line</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DPie">
			<summary>3D Pie</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xl3DPieExploded">
			<summary>Exploded 3D Pie</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlArea">
			<summary>Area</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlAreaStacked">
			<summary>Stacked Area</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlAreaStacked100">
			<summary>100% Stacked Area</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBarClustered">
			<summary>Clustered Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBarOfPie">
			<summary>Bar of Pie</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBarStacked">
			<summary>Stacked Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBarStacked100">
			<summary>100% Stacked Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBubble">
			<summary>Bubble</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlBubble3DEffect">
			<summary>Bubble with 3D effects</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlColumnClustered">
			<summary>Clustered Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlColumnStacked">
			<summary>Stacked Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlColumnStacked100">
			<summary>100% Stacked Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeBarClustered">
			<summary>Clustered Cone Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeBarStacked">
			<summary>Stacked Cone Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeBarStacked100">
			<summary>100% Stacked Cone Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeCol">
			<summary>3D Cone Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeColClustered">
			<summary>Clustered Cone Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeColStacked">
			<summary>Stacked Cone Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlConeColStacked100">
			<summary>100% Stacked Cone Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderBarClustered">
			<summary>Clustered Cylinder Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderBarStacked">
			<summary>Stacked Cylinder Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderBarStacked100">
			<summary>100% Stacked Cylinder Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderCol">
			<summary>3D Cylinder Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderColClustered">
			<summary>Clustered Cone Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderColStacked">
			<summary>Stacked Cone Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlCylinderColStacked100">
			<summary>100% Stacked Cylinder Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlDoughnut">
			<summary>Doughnut</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlDoughnutExploded">
			<summary>Exploded Doughnut</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLine">
			<summary>Line</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineMarkers">
			<summary>Line with Markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineMarkersStacked">
			<summary>Stacked Line with Markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineMarkersStacked100">
			<summary>100% Stacked Line with Markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineStacked">
			<summary>Stacked Line</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlLineStacked100">
			<summary>100% Stacked Line</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPie">
			<summary>Pie</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPieExploded">
			<summary>Exploded Pie</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPieOfPie">
			<summary>Pie of Pie</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidBarClustered">
			<summary>Clustered Pyramid Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidBarStacked">
			<summary>Stacked Pyramid Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidBarStacked100">
			<summary>100% Stacked Pyramid Bar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidCol">
			<summary>3D Pyramid Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidColClustered">
			<summary>Clustered Pyramid Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidColStacked">
			<summary>Stacked Pyramid Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlPyramidColStacked100">
			<summary>100% Stacked Pyramid Column</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlRadar">
			<summary>Radar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlRadarFilled">
			<summary>Filled Radar</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlRadarMarkers">
			<summary>Radar with Data Markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlStockHLC">
			<summary>High-Low-Close</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlStockOHLC">
			<summary>Open-High-Low-Close</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlStockVHLC">
			<summary>Volume-High-Low-Close</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlStockVOHLC">
			<summary>Volume-Open-High-Low-Close</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlSurface">
			<summary>3D Surface</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlSurfaceTopView">
			<summary>Surface (Top View)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlSurfaceTopViewWireframe">
			<summary>Surface (Top View wireframe)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlSurfaceWireframe">
			<summary>3D Surface (wireframe)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatter">
			<summary>Scatter</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatterLines">
			<summary>Scatter with Lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatterLinesNoMarkers">
			<summary>Scatter with Lines and No Data Markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatterSmooth">
			<summary>Scatter with Smoothed Lines</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlChartType.xlXYScatterSmoothNoMarkers">
			<summary>Scatter with Smoothed Lines and No Data Markers</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlClipboardFormat">
			<summary>Specifies the format of an item on the Windows clipboard.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF">
			<summary>Binary Interchange file format for Excel version 2.x.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF2">
			<summary>Binary Interchange file format for Excel version 2.x.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF3">
			<summary>Binary Interchange file format for Excel version 3.x.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBIFF4">
			<summary>Binary Interchange file format for Excel version 4.x.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBinary">
			<summary>Binary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatBitmap">
			<summary>Windows version 2.0-compatible bitmap.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatCGM">
			<summary>Computer Graphics Metafile.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatCSV">
			<summary>Comma-separated values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatDIF">
			<summary>VisiCalc Data Interchange Format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatDspText">
			<summary>OEM text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatEmbeddedObject">
			<summary>Object to be inserted into the file.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatEmbedSource">
			<summary>Source.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatLink">
			<summary>Link.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatLinkSource">
			<summary>Line to source.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatLinkSourceDesc">
			<summary>Link to description of source.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatMovie">
			<summary>Movie.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatNative">
			<summary>Native format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatObjectDesc">
			<summary>Object description.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatObjectLink">
			<summary>Link to object.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatOwnerLink">
			<summary>Link to owner.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatPICT">
			<summary>Metafile picture structure (.wmf).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatPrintPICT">
			<summary>Metafile picture structure for printing.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatRTF">
			<summary>Rich Text Format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatScreenPICT">
			<summary>Metafile picture structure for screen display.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatStandardFont">
			<summary>A standard font.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatStandardScale">
			<summary>Standard scale.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatSYLK">
			<summary>Microsoft symbolic link (SYLK) format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatTable">
			<summary>Excel fast table format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatText">
			<summary>Null-terminated string containing a carriage return and line feed at the end of each line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatToolFace">
			<summary>Graphics associated with a Macintosh tool.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatToolFacePICT">
			<summary>Tool face as a metafile picture structure.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatVALU">
			<summary>VALU.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlClipboardFormat.xlClipboardFormatWK1">
			<summary>Lotus 1-2-3 Release 2.01 and Release 2.2.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCmdType">
			<summary>Specifies the value of the CommandText property.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdCube">
			<summary>Contains a cube name for an OLAP data source.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdDefault">
			<summary>Contains command text that the OLE DB provider understands</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdList">
			<summary>Contains a pointer to list data.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdSql">
			<summary>Contains an SQL statement.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCmdType.xlCmdTable">
			<summary>Contains a table name for accessing OLE DB data sources.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlColorIndex">
			<summary>Specifies the color of a selected feature such as border, font, or fill.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic">
			<summary>Automatic color.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexNone">
			<summary>No color.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlColumnDataType">
			<summary>Specifies how a column is to be parsed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlDMYFormat">
			<summary>DMY date format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlDYMFormat">
			<summary>DYM date format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlEMDFormat">
			<summary>EMD date format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlGeneralFormat">
			<summary>General.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlMDYFormat">
			<summary>MDY date format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlMYDFormat">
			<summary>MYD date format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlSkipColumn">
			<summary>Column is not parsed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlTextFormat">
			<summary>Text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlYDMFormat">
			<summary>YDM date format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlColumnDataType.xlYMDFormat">
			<summary>YMD date format.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines">
			<summary>Specifies the state of the command underlines in Microsoft Excel for the Macintosh.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCommandUnderlines.xlCommandUnderlinesAutomatic">
			<summary>Excel controls the display of command underlines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCommandUnderlines.xlCommandUnderlinesOff">
			<summary>Command underlines are not displayed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCommandUnderlines.xlCommandUnderlinesOn">
			<summary>Command underlines are displayed.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode">
			<summary>Specifies the way cells display comments and comment indicators.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCommentDisplayMode.xlCommentAndIndicator">
			<summary>Display comment and indicator at all times.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCommentDisplayMode.xlCommentIndicatorOnly">
			<summary>Display comment indicator only. Display comment when mouse pointer is moved over cell.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCommentDisplayMode.xlNoIndicator">
			<summary>Display neither the comment nor the comment indicator at any time.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction">
			<summary>Specifies the subtotal function.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlAverage">
			<summary>Average.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCount">
			<summary>Count.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlCountNums">
			<summary>Count numerical values only.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMax">
			<summary>Maximum.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlMin">
			<summary>Minimum.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlProduct">
			<summary>Multiply.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDev">
			<summary>Standard deviation, based on a sample.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlStDevP">
			<summary>Standard deviation, based on the whole population.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlSum">
			<summary>Sum.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlUnknown">
			<summary>No subtotal function specified.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVar">
			<summary>Variation, based on a sample.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlVarP">
			<summary>Variation, based on the whole population.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat">
			<summary>Specifies the format of the picture being copied.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlBitmap">
			<summary>Bitmap (.bmp, .jpg, .gif).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture">
			<summary>Drawn picture (.png, .wmf, .mix).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCorruptLoad">
			<summary>Specifies the processing for a file when it is opened.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCorruptLoad.xlExtractData">
			<summary>Excel is attempting to recover the data in the workbook.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCorruptLoad.xlNormalLoad">
			<summary>Workbook is opened normally.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCorruptLoad.xlRepairFile">
			<summary>Excel is attempting to repair the workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCreator">
			<summary>Specifies the 32-bit creator code for Excel for Macintosh (decimal 1480803660, Hex 5843454C, string XCEL).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCreator.xlCreatorCode">
			<summary>The Excel for Macintosh creator code.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCubeFieldType">
			<summary>Specifies whether the OLAP field is a hierarchy, set, or measure field.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldType.xlHierarchy">
			<summary>Hierarchy.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldType.xlMeasure">
			<summary>Measure.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCubeFieldType.xlSet">
			<summary>Set.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCutCopyMode">
			<summary>Specifies whether status is Copy mode or Cut mode.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCutCopyMode.xlCopy">
			<summary>In Copy mode</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCutCopyMode.xlCut">
			<summary>In Cut mode</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlCVError">
			<summary>Specifies the cell error number and value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrDiv0">
			<summary>Error number: 2007</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrNA">
			<summary>Error number: 2042</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrName">
			<summary>Error number: 2029</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrNull">
			<summary>Error number: 2000</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrNum">
			<summary>Error number: 2036</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrRef">
			<summary>Error number: 2023</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlCVError.xlErrValue">
			<summary>Error number: 2015</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDataLabelPosition">
			<summary>Specifies where the data label is positioned.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionAbove">
			<summary>Data label above point.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionBelow">
			<summary>Data label below point.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionBestFit">
			<summary>Excel controls position of data label.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionCenter">
			<summary>Data label centered on data point or inside bar or pie.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionCustom">
			<summary>Data label centered on data point or inside bar or pie.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionInsideBase">
			<summary>Data label positioned arbitrarily.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionInsideEnd">
			<summary>Data label positioned arbitrarily.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionLeft">
			<summary>Data label positioned at bottom of bar or pie.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionMixed">
			<summary>Data label positioned at bottom of bar or pie.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionOutsideEnd">
			<summary>Data label positioned at top of bar or pie.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelPosition.xlLabelPositionRight">
			<summary>Data label positioned at top of bar or pie.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDataLabelSeparator">
			<summary>Specifies the separator used with data labels.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelSeparator.xlDataLabelSeparatorDefault">
			<summary>Excel selects the separator.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDataLabelsType">
			<summary>Specifies the type of data label to apply.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowBubbleSizes">
			<summary>Show the size of the bubble in reference to the absolute value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowLabel">
			<summary>Category for the point.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowLabelAndPercent">
			<summary>Percentage of the total, and category for the point. Available only for pie charts and doughnut charts.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowNone">
			<summary>No data labels.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowPercent">
			<summary>Percentage of the total. Available only for pie charts and doughnut charts.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue">
			<summary>default. Value for the point (assumed if this argument isn't specified).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate">
			<summary>Specifies the type of date to apply to a data series.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay">
			<summary>Day.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlMonth">
			<summary>Month.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlWeekday">
			<summary>Weekdays.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlYear">
			<summary>Year.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDataSeriesType">
			<summary>Specifies the data series to create.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlAutoFill">
			<summary>Fill series according to AutoFill settings.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlChronological">
			<summary>Fill with date values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear">
			<summary>Extend values, assuming an additive progression (e.g., '1, 2' is extended as '3, 4, 5').</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDataSeriesType.xlGrowth">
			<summary>Extend values, assuming a multiplicative progression (e.g., "1, 2' is extended as '4, 8, 16').</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection">
			<summary>Specifies how to shift cells to replace deleted cells.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection.xlShiftToLeft">
			<summary>Cells are shifted to the left.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection.xlShiftUp">
			<summary>Cells are shifted up.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDirection">
			<summary>Specifies the direction in which to move.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDirection.xlDown">
			<summary>Down.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDirection.xlToLeft">
			<summary>To left.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDirection.xlToRight">
			<summary>To right.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDirection.xlUp">
			<summary>Up.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs">
			<summary>Specifies how blank cells are plotted on a chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated">
			<summary>Values are interpolated into the chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted">
			<summary>Blank cells are not plotted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero">
			<summary>Blanks are plotted as zero.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects">
			<summary>Specifies how shapes are displayed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlDisplayShapes">
			<summary>Show all shapes.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlHide">
			<summary>Hide all shapes.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects.xlPlaceholders">
			<summary>Show only placeholders.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDisplayUnit">
			<summary>Specifies the display unit label for an axis.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlHundredMillions">
			<summary>Hundreds of millions.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlHundreds">
			<summary>Hundreds.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlHundredThousands">
			<summary>Hundreds of thousands.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlMillionMillions">
			<summary>Millions of millions.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlMillions">
			<summary>Millions.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlTenMillions">
			<summary>Tens of millions.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlTenThousands">
			<summary>Tens of thousands.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlThousandMillions">
			<summary>Thousands of millions.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDisplayUnit.xlThousands">
			<summary>Thousands.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle">
			<summary>Specifies the icon used in message boxes displayed during validation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVAlertStyle.xlValidAlertInformation">
			<summary>Information icon.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVAlertStyle.xlValidAlertStop">
			<summary>Stop icon.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVAlertStyle.xlValidAlertWarning">
			<summary>Warning icon.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlDVType">
			<summary>Specifies the type of validation test to be performed in conjunction with values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateCustom">
			<summary>Data is validated using an arbitrary formula.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateDate">
			<summary>Date values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateDecimal">
			<summary>Numeric values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateInputOnly">
			<summary>Only validate when user changes the value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateList">
			<summary>Value must be present in a specified list.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateTextLength">
			<summary>Length of text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateTime">
			<summary>Time values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlDVType.xlValidateWholeNumber">
			<summary>Whole numeric values.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlEditionFormat">
			<summary>Specifies the format of the published edition. This is Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionFormat.xlBIFF">
			<summary>Binary Interchange file format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionFormat.xlPICT">
			<summary>Metafile picture structure (.wmf).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionFormat.xlRTF">
			<summary>Rich Text Format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionFormat.xlVALU">
			<summary>VALU.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlEditionOptionsOption">
			<summary>This enumeration is for Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlAutomaticUpdate">
			<summary>This constant is for Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlCancel">
			<summary>This constant is for Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlChangeAttributes">
			<summary>This constant is for Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlManualUpdate">
			<summary>This constant is for Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlOpenSource">
			<summary>This constant is for Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlSelect">
			<summary>This constant is for Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlSendPublisher">
			<summary>This constant is for Macintosh only and should not be used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionOptionsOption.xlUpdateSubscriber">
			<summary>This constant is for Macintosh only and should not be used.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlEditionType">
			<summary>Specifies the type of edition to be changed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionType.xlPublisher">
			<summary>Publisher.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEditionType.xlSubscriber">
			<summary>Subscriber.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey">
			<summary>Specifies how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEnableCancelKey.xlDisabled">
			<summary>Cancel key trapping is completely disabled.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEnableCancelKey.xlErrorHandler">
			<summary>The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement. The trappable error code is 18.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEnableCancelKey.xlInterrupt">
			<summary>The current procedure is interrupted, and the user can debug or end the procedure.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlEnableSelection">
			<summary>Specifies what can be selected on the sheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEnableSelection.xlNoRestrictions">
			<summary>Anything may be selected.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEnableSelection.xlNoSelection">
			<summary>Nothing may be selected.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEnableSelection.xlUnlockedCells">
			<summary>Only unlocked cells may be selected.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlEndStyleCap">
			<summary>Specifies the end style for error bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEndStyleCap.xlCap">
			<summary>Caps applied.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlEndStyleCap.xlNoCap">
			<summary>No caps applied.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection">
			<summary>Specifies which axis values are to receive error bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarDirection.xlX">
			<summary>Bars run parallel to the Y axis for X-axis values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarDirection.xlY">
			<summary>Bars run parallel to the X axis for Y-axis values.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude">
			<summary>Specifies which error bar parts to include.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarInclude.xlErrorBarIncludeBoth">
			<summary>Both positive and negative error range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarInclude.xlErrorBarIncludeMinusValues">
			<summary>Only negative error range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarInclude.xlErrorBarIncludeNone">
			<summary>No error bar range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarInclude.xlErrorBarIncludePlusValues">
			<summary>Only positive error range.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlErrorBarType">
			<summary>Specifies the range marked by error bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypeCustom">
			<summary>Range is set by fixed values or cell values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypeFixedValue">
			<summary>Fixed-length error bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypePercent">
			<summary>Percentage of range to be covered by the error bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypeStDev">
			<summary>Shows range for specified number of standard deviations.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorBarType.xlErrorBarTypeStError">
			<summary>Shows standard error range.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlErrorChecks">
			<summary>Specifies the type of error object to be retrieved from the Errors collection.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlEmptyCellReferences">
			<summary>The cell contains a formula referring to empty cells.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlEvaluateToError">
			<summary>The cell evaluates to an error value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlInconsistentFormula">
			<summary>The cell contains an inconsistent formula for a region.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlListDataValidation">
			<summary>The cell contains a value inconsistent with list data validation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlNumberAsText">
			<summary>The cell contains a number stored as text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlOmittedCells">
			<summary>The cell contains a formula omitting a cell for a region.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlTextDate">
			<summary>The cell contains a text date with 2-digit years.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlErrorChecks.xlUnlockedFormulaCells">
			<summary>The cell, which is unlocked, contains a formula.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFileAccess">
			<summary>Specifies the new access mode for the object.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileAccess.xlReadOnly">
			<summary>Read only.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileAccess.xlReadWrite">
			<summary>Read/write.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFileFormat">
			<summary>Specifies the file format when saving the spreadsheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlAddIn">
			<summary>Microsoft Office Excel Add-In.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCSV">
			<summary>Comma separated value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCSVMac">
			<summary>Comma separated value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCSVMSDOS">
			<summary>Comma separated value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCSVWindows">
			<summary>Comma separated value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlCurrentPlatformText">
			<summary>Specifies a type of text format</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlDBF2">
			<summary>Dbase 2 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlDBF3">
			<summary>Dbase 3 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlDBF4">
			<summary>Dbase 4 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlDIF">
			<summary>Data Interchange format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel2">
			<summary>Excel version 2.0.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel2FarEast">
			<summary>Excel version 2.0 far east.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel3">
			<summary>Excel version 3.0.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel4">
			<summary>Excel version 4.0.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel4Workbook">
			<summary>Excel version 4.0. Workbook format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel5">
			<summary>Excel version 5.0.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel7">
			<summary>Excel 95.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlExcel9795">
			<summary>Excel version 95 and 97.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlHtml">
			<summary>Web page format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlIntlAddIn">
			<summary>Microsoft Office Excel Add-In international format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlIntlMacro">
			<summary>Deprecated format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlSYLK">
			<summary>Symbolic link format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTemplate">
			<summary>Excel template format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTextMac">
			<summary>Specifies a type of text format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTextMSDOS">
			<summary>Specifies a type of text format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTextPrinter">
			<summary>Specifies a type of text format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlTextWindows">
			<summary>Specifies a type of text format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlUnicodeText">
			<summary>Specifies a type of text format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWebArchive">
			<summary>MHT format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWJ2WD1">
			<summary>Deprecated format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWJ3">
			<summary>Deprecated format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWJ3FJ3">
			<summary>Deprecated format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK1">
			<summary>Lotus 1-2-3 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK1ALL">
			<summary>Lotus 1-2-3 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK1FMT">
			<summary>Lotus 1-2-3 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK3">
			<summary>Lotus 1-2-3 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK3FM3">
			<summary>Lotus 1-2-3 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWK4">
			<summary>Lotus 1-2-3 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWKS">
			<summary>Lotus 1-2-3 format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWorkbookNormal">
			<summary>Excel workbook format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWorks2FarEast">
			<summary>Microsoft Works 2.0 format</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlWQ1">
			<summary>Quattro Pro format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFileFormat.xlXMLSpreadsheet">
			<summary>Excel Spreadsheet format.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFillWith">
			<summary>Specifies how to copy the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll">
			<summary>Copy contents and formats.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithContents">
			<summary>Copy contents only.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithFormats">
			<summary>Copy formats only.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFilterAction">
			<summary>Specifies whether data is to be copied or left in place during a filter operation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFilterAction.xlFilterCopy">
			<summary>Copy filtered data to new location.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFilterAction.xlFilterInPlace">
			<summary>Leave data in place.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFindLookIn">
			<summary>Specifies the type of data to search.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFindLookIn.xlComments">
			<summary>Comments.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFindLookIn.xlFormulas">
			<summary>Formulas.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFindLookIn.xlValues">
			<summary>Values.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator">
			<summary>Specifies the operator to use to compare a formula against the value in a cell or, for xlBetween and xlNotBetween, to compare two formulas.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlBetween">
			<summary>Between. Can only be used if two formulas are provided.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlEqual">
			<summary>Equal.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreater">
			<summary>Greater than.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreaterEqual">
			<summary>Greater than or equal to.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLess">
			<summary>Less than.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLessEqual">
			<summary>Less than or equal to.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotBetween">
			<summary>Not between. Can only be used if two formulas are provided.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotEqual">
			<summary>Not equal.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFormatConditionType">
			<summary>Specifies whether the conditional format is based on a cell value or an expression.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlCellValue">
			<summary>The conditional format is based on a cell value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlExpression">
			<summary>The conditional format is based on an expression.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFormControl">
			<summary>Specifies the type of the form control.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlButtonControl">
			<summary>Button.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlCheckBox">
			<summary>Check box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlDropDown">
			<summary>Combo box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlEditBox">
			<summary>Text box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlGroupBox">
			<summary>Group box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlLabel">
			<summary>Label.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlListBox">
			<summary>List box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlOptionButton">
			<summary>Option button.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlScrollBar">
			<summary>Scroll bar.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormControl.xlSpinner">
			<summary>Spinner.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlFormulaLabel">
			<summary>Specifies the formula label type for the specified range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormulaLabel.xlColumnLabels">
			<summary>Column labels only.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormulaLabel.xlMixedLabels">
			<summary>Row and column labels.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormulaLabel.xlNoLabels">
			<summary>No labels.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlFormulaLabel.xlRowLabels">
			<summary>Row labels only.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlHAlign">
			<summary>Specifies the horizontal alignment for the object.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter">
			<summary>Center.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenterAcrossSelection">
			<summary>Center across selection.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignDistributed">
			<summary>Distribute.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignFill">
			<summary>Fill.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignGeneral">
			<summary>Align according to data type.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignJustify">
			<summary>Justify.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignLeft">
			<summary>Left.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignRight">
			<summary>Right.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlHebrewModes">
			<summary>Specifies the mode for the Hebrew spelling checker.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHebrewModes.xlHebrewFullScript">
			<summary>The conventional script type as required by the Hebrew Language Academy when writing non-diacritisized text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHebrewModes.xlHebrewMixedAuthorizedScript">
			<summary>The Hebrew traditional script. </summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHebrewModes.xlHebrewMixedScript">
			<summary>In this mode the speller accepts any word recognized as Hebrew, whether in Full Script, Partial Script, or any non-conventional spelling variation that is known to the speller. </summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHebrewModes.xlHebrewPartialScript">
			<summary>In this mode the speller accepts words both in Full Script and Partial Script. Some words will be flagged since this spelling is not authorized in either Full script or Partial script.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlHighlightChangesTime">
			<summary>Specifies which set of changes is shown in a shared workbook.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlAllChanges">
			<summary>Show all changes.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlNotYetReviewed">
			<summary>Show only changes not yet reviewed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHighlightChangesTime.xlSinceMyLastSave">
			<summary>Show changes made since last save by last user.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlHtmlType">
			<summary>Specifies the type of HTML generated by Microsoft Excel when you save the specified item to a Web page and whether the item is static or interactive.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHtmlType.xlHtmlCalc">
			<summary>Use the Spreadsheet component.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHtmlType.xlHtmlChart">
			<summary>Use the Chart component.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHtmlType.xlHtmlList">
			<summary>Use the PivotTable component.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlHtmlType.xlHtmlStatic">
			<summary>Use static (noninteractive) HTML for viewing only.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlIMEMode">
			<summary>Specifies the description of the Japanese input rules.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeAlpha">
			<summary>Half-width alphanumeric.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeAlphaFull">
			<summary>Full-width alphanumeric.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeDisable">
			<summary>Disable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeHangul">
			<summary>Hangul.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeHangulFull">
			<summary>Full-width Hangul.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeHiragana">
			<summary>Hiragana.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeKatakana">
			<summary>Katakana.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeKatakanaHalf">
			<summary>Half-width Katakana.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeNoControl">
			<summary>No control.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeOff">
			<summary>Off (English mode).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlIMEMode.xlIMEModeOn">
			<summary>Mode on.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlImportDataAs">
			<summary>Specifies the format in which to return data from a database.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlImportDataAs.xlPivotTableReport">
			<summary>Returns the data as a PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlImportDataAs.xlQueryTable">
			<summary>Returns the data as a QueryTable.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlInsertFormatOrigin">
			<summary>Specifies from where to copy the format for inserted rows.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlInsertFormatOrigin.xlFormatFromLeftOrAbove">
			<summary>From cells above and/or to the left.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlInsertFormatOrigin.xlFormatFromRightOrBelow">
			<summary>From cells below and/or to the right.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection">
			<summary>Specifies the direction in which to shift cells during an insertion.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlInsertShiftDirection.xlShiftDown">
			<summary>Shift cells down.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlInsertShiftDirection.xlShiftToRight">
			<summary>Shift cells to the right.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLayoutFormType">
			<summary>Specifies the way the specified PivotTable items appear—in table format or in outline format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLayoutFormType.xlOutline">
			<summary>The LayoutSubtotalLocation property specifies where the subtotal appears in the PivotTable report.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLayoutFormType.xlTabular">
			<summary>Default.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLegendPosition">
			<summary>Specifies the position of the legend on a chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionBottom">
			<summary>Below the chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionCorner">
			<summary>In the upper right-hand corner of the chart border.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionLeft">
			<summary>To the left of the chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionRight">
			<summary>To the right of the chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLegendPosition.xlLegendPositionTop">
			<summary>Above the chart.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLineStyle">
			<summary>Specifies the line style for the border.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlContinuous">
			<summary>Continuous line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDash">
			<summary>Dashed line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDot">
			<summary>Alternating dashes and dots.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDashDotDot">
			<summary>Dash followed by two dots.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDot">
			<summary>Dotted line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlDouble">
			<summary>Double line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlLineStyleNone">
			<summary>No line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLineStyle.xlSlantDashDot">
			<summary>Slanted dashes.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLink">
			<summary>Specifies the type of link.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLink.xlExcelLinks">
			<summary>The link is to an Excel worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLink.xlOLELinks">
			<summary>The link is to an OLE source.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLink.xlPublishers">
			<summary>Macintosh only.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLink.xlSubscribers">
			<summary>Macintosh only.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLinkInfo">
			<summary>Specifies the type of information to be returned.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkInfo.xlEditionDate">
			<summary>Applies only to editions in Macintosh.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkInfo.xlLinkInfoStatus">
			<summary>Link status.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkInfo.xlUpdateState">
			<summary>Whether link updates automatically or manually.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLinkInfoType">
			<summary>Specifies the type of link.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkInfoType.xlLinkInfoOLELinks">
			<summary>OLE or DDE server.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkInfoType.xlLinkInfoPublishers">
			<summary>Publisher.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkInfoType.xlLinkInfoSubscribers">
			<summary>Subscriber.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLinkStatus">
			<summary>Specifies the status of a link.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusCopiedValues">
			<summary>Copied values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusIndeterminate">
			<summary>Unable to determine status.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusInvalidName">
			<summary>Invalid name.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusMissingFile">
			<summary>File missing.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusMissingSheet">
			<summary>Sheet missing.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusNotStarted">
			<summary>Not started.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusOK">
			<summary>No errors.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusOld">
			<summary>Status may be out of date.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusSourceNotCalculated">
			<summary>Not yet calculated.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusSourceNotOpen">
			<summary>Not open.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkStatus.xlLinkStatusSourceOpen">
			<summary>Source document is open.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLinkType">
			<summary>Specifies the type of link.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks">
			<summary>A link to a Microsoft Excel source.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeOLELinks">
			<summary>A link to an OLE source.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlListConflict">
			<summary>Specifies the conflict resolution options for updating a list on a Microsoft Windows SharePoint Services site with the changes made to a list in a Microsoft Excel worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictDialog">
			<summary>Display a dialog that allows the user to choose how to resolve conflicts.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictDiscardAllConflicts">
			<summary>Accept the version of the data stored on the SharePoint site.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictError">
			<summary>Raise an error if a conflict occurs.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictRetryAllConflicts">
			<summary>Overwrite the version of the data stored on the SharePoint site.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlListDataType">
			<summary>Specifies the data type of a list column connected to a Microsoft Windows SharePoint Services site.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeCheckbox">
			<summary>Check box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeChoice">
			<summary>Single-choice field.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeChoiceMulti">
			<summary>Multiple-choice field.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeCounter">
			<summary>Counter.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeCurrency">
			<summary>Currency.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeDateTime">
			<summary>Date/time.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeHyperLink">
			<summary>Hyperlink.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeListLookup">
			<summary>Lookup list.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeMultiLineRichText">
			<summary>Rich text format with multiple lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeMultiLineText">
			<summary>Plain text with multiple lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeNone">
			<summary>Type not specified.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeNumber">
			<summary>Numerical.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListDataType.xlListDataTypeText">
			<summary>Plain text.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlListObjectSourceType">
			<summary>Specifies the current source of the list.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcExternal">
			<summary>External data source (Microsoft Windows SharePoint Services site).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange">
			<summary>Microsoft Office Excel range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcXml">
			<summary>XML.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLocationInTable">
			<summary>Specifies the part of the PivotTable report that contains the upper-left corner of a range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlColumnHeader">
			<summary>Column header.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlColumnItem">
			<summary>Column item.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlDataHeader">
			<summary>Data header.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlDataItem">
			<summary>Data item.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlPageHeader">
			<summary>Page header.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlPageItem">
			<summary>Page item.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlRowHeader">
			<summary>Row header.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlRowItem">
			<summary>Row item.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLocationInTable.xlTableBody">
			<summary>Table body.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlLookAt">
			<summary>Specifies whether a match is made against the whole of the search text or any part of the search text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLookAt.xlPart">
			<summary>Match against any part of the search text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlLookAt.xlWhole">
			<summary>Match against the whole of the search text.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlMailSystem">
			<summary>Specifies the mail system that is installed on the host machine.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMailSystem.xlMAPI">
			<summary>MAPI-complaint system.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMailSystem.xlNoMailSystem">
			<summary>No mail system.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMailSystem.xlPowerTalk">
			<summary>PowerTalk mail system.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlMarkerStyle">
			<summary>Specifies the marker style for a point or series in a line chart, scatter chart, or radar chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleAutomatic">
			<summary>Automatic markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleCircle">
			<summary>Circular markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleDash">
			<summary>Long bar markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleDiamond">
			<summary>Diamond-shaped markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleDot">
			<summary>Short bar markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleNone">
			<summary>No markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStylePicture">
			<summary>Picture markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStylePlus">
			<summary>Square markers with a plus sign</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleSquare">
			<summary>Square markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleStar">
			<summary>Square markers with an asterisk</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleTriangle">
			<summary>Triangular markers</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMarkerStyle.xlMarkerStyleX">
			<summary>Square markers with an X</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlMouseButton">
			<summary>Specifies which mouse button was pressed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMouseButton.xlNoButton">
			<summary>No button was pressed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMouseButton.xlPrimaryButton">
			<summary>The primary button (normally the left mouse button) was pressed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMouseButton.xlSecondaryButton">
			<summary>The secondary button (normally the right mouse button) was pressed.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlMousePointer">
			<summary>Specifies the appearance of the mouse pointer in Microsoft Excel.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMousePointer.xlDefault">
			<summary>The default pointer.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMousePointer.xlIBeam">
			<summary>The I-beam pointer.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMousePointer.xlNorthwestArrow">
			<summary>The northwest-arrow pointer.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMousePointer.xlWait">
			<summary>The hourglass pointer.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlMSApplication">
			<summary>Specifies a Microsoft application.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftAccess">
			<summary>Microsoft Access.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftFoxPro">
			<summary>Microsoft FoxPro.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftMail">
			<summary>The Microsoft Mail application (Outlook).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftPowerPoint">
			<summary>Microsoft PowerPoint.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftProject">
			<summary>Microsoft Project.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftSchedulePlus">
			<summary>Microsoft Schedule Plus.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlMSApplication.xlMicrosoftWord">
			<summary>Microsoft Word.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlObjectSize">
			<summary>Specifies the way a chart is scaled to fit on a page.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlObjectSize.xlFitToPage">
			<summary>Print the chart as large as possible, while retaining the chart's height-to-width ratio as shown on the screen</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlObjectSize.xlFullPage">
			<summary>Print the chart to fit the page, adjusting the height-to-width ratio as necessary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlObjectSize.xlScreenSize">
			<summary>Print the chart the same size as it appears on the screen.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlOLEType">
			<summary>Specifies the OLE object type.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOLEType.xlOLEControl">
			<summary>ActiveX control.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOLEType.xlOLEEmbed">
			<summary>Embedded OLE object.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOLEType.xlOLELink">
			<summary>Linked OLE object.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlOLEVerb">
			<summary>Specifies the verb that the server of the OLE object should act on.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbOpen">
			<summary>Open the object.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOLEVerb.xlVerbPrimary">
			<summary>Perform the primary action for the server.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlOrder">
			<summary>Specifies the order in which cells are processed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver">
			<summary>Process down the rows before processing across pages or page fields to the right.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOrder.xlOverThenDown">
			<summary>Process across pages or page fields to the right before moving down the rows.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlOrientation">
			<summary>Specifies the text orientation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOrientation.xlDownward">
			<summary>Text runs downward.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOrientation.xlHorizontal">
			<summary>Text runs horizontally.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOrientation.xlUpward">
			<summary>Text runs upward.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlOrientation.xlVertical">
			<summary>Text runs downward and is centered in the cell.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPageBreak">
			<summary>Specifies page break location in the worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPageBreak.xlPageBreakAutomatic">
			<summary>Excel will automatically add page breaks.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPageBreak.xlPageBreakManual">
			<summary>Page breaks are manually inserted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPageBreak.xlPageBreakNone">
			<summary>Page breaks are not inserted in the worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPageBreakExtent">
			<summary>Specifies whether a page break is full screen or applies only within the print area.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPageBreakExtent.xlPageBreakFull">
			<summary>Full screen.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPageBreakExtent.xlPageBreakPartial">
			<summary>Only within print area.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPageOrientation">
			<summary>Specifies the page orientation when the worksheet is printed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPageOrientation.xlLandscape">
			<summary>Landscape mode.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPageOrientation.xlPortrait">
			<summary>Portrait mode.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPaperSize">
			<summary>Specifies the size of the paper.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaper10x14">
			<summary>10 in. x 14 in.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaper11x17">
			<summary>11 in. x 17 in.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperA3">
			<summary>A3 (297 mm x 420 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperA4">
			<summary>A4 (210 mm x 297 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperA4Small">
			<summary>A4 Small (210 mm x 297 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperA5">
			<summary>A5 (148 mm x 210 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperB4">
			<summary>B4 (250 mm x 354 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperB5">
			<summary>A5 (148 mm x 210 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperCsheet">
			<summary>C size sheet</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperDsheet">
			<summary>D size sheet</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope10">
			<summary>Envelope #10 (4-1/8 in. x 9-1/2 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope11">
			<summary>Envelope #11 (4-1/2 in. x 10-3/8 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope12">
			<summary>Envelope #12 (4-1/2 in. x 11 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope14">
			<summary>Envelope #14 (5 in. x 11-1/2 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelope9">
			<summary>Envelope #9 (3-7/8 in. x 8-7/8 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeB4">
			<summary>Envelope B4 (250 mm x 353 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeB5">
			<summary>Envelope B5 (176 mm x 250 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeB6">
			<summary>Envelope B6 (176 mm x 125 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC3">
			<summary>Envelope C3 (324 mm x 458 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC4">
			<summary>Envelope C4 (229 mm x 324 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC5">
			<summary>Envelope C5 (162 mm x 229 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC6">
			<summary>Envelope C6 (114 mm x 162 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeC65">
			<summary>Envelope C65 (114 mm x 229 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeDL">
			<summary>Envelope DL (110 mm x 220 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeItaly">
			<summary>Envelope (110 mm x 230 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopeMonarch">
			<summary>Envelope Monarch (3-7/8 in. x 7-1/2 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEnvelopePersonal">
			<summary>Envelope (3-5/8 in. x 6-1/2 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperEsheet">
			<summary>E size sheet</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperExecutive">
			<summary>Executive (7-1/2 in. x 10-1/2 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperFanfoldLegalGerman">
			<summary>German Legal Fanfold (8-1/2 in. x 13 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperFanfoldStdGerman">
			<summary>German Legal Fanfold (8-1/2 in. x 13 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperFanfoldUS">
			<summary>U.S. Standard Fanfold (14-7/8 in. x 11 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperFolio">
			<summary>Folio (8-1/2 in. x 13 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperLedger">
			<summary>Ledger (17 in. x 11 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperLegal">
			<summary>Legal (8-1/2 in. x 14 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperLetter">
			<summary>Letter (8-1/2 in. x 11 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperLetterSmall">
			<summary>Letter Small (8-1/2 in. x 11 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperNote">
			<summary>Note (8-1/2 in. x 11 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperQuarto">
			<summary>Quarto (215 mm x 275 mm)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperStatement">
			<summary>Statement (5-1/2 in. x 8-1/2 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperTabloid">
			<summary>Tabloid (11 in. x 17 in.)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPaperSize.xlPaperUser">
			<summary>User-defined</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlParameterDataType">
			<summary>Specifies the data type of a query parameter.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeBigInt">
			<summary>Big integer.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeBinary">
			<summary>Binary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeBit">
			<summary>Bit.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeChar">
			<summary>String.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeDate">
			<summary>Date.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeDecimal">
			<summary>Decimal.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeDouble">
			<summary>Double.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeFloat">
			<summary>Float.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeInteger">
			<summary>Integer.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeLongVarBinary">
			<summary>Long binary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeLongVarChar">
			<summary>Long string.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeNumeric">
			<summary>Numeric.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeReal">
			<summary>Real.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeSmallInt">
			<summary>Small integer.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeTime">
			<summary>Time.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeTimestamp">
			<summary>Time stamp.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeTinyInt">
			<summary>Tiny integer.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeUnknown">
			<summary>Type unknown.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeVarBinary">
			<summary>Variable-length binary.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeVarChar">
			<summary>Variable-length string.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterDataType.xlParamTypeWChar">
			<summary>Unicode character string.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlParameterType">
			<summary>Specifies how to determine the value of the parameter for the specified query table.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterType.xlConstant">
			<summary>Uses the value specified by the Value argument.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterType.xlPrompt">
			<summary>Displays a dialog box that prompts the user for the value. The Value argument specifies the text shown in the dialog box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlParameterType.xlRange">
			<summary>Uses the value of the cell in the upper-left corner of the range. The Value argument specifies a Range object.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation">
			<summary>Specifies how numeric data will be calculated with the destinations cells in the worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd">
			<summary>Copied data will be added with the value in the destination cell.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationDivide">
			<summary>Copied data will be divided with the value in the destination cell.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationMultiply">
			<summary>Copied data will be multiplied with the value in the destination cell.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone">
			<summary>No calculation will be done in the paste operation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationSubtract">
			<summary>Copied data will be subtracted with the value in the destination cell.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPasteType">
			<summary>Specifies the part of the range to be pasted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll">
			<summary>Everything will be pasted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAllExceptBorders">
			<summary>Everything except borders will be pasted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteColumnWidths">
			<summary>The column width of the source cell will be applied to the destination cell.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteComments">
			<summary>Comments will be pasted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats">
			<summary>Formatting will be pasted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas">
			<summary>Formulas will be pasted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulasAndNumberFormats">
			<summary>Formulas and number formats are pasted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValidation">
			<summary>Validation from the source cell is applied to the destination cell.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues">
			<summary>Only the values will be pasted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValuesAndNumberFormats">
			<summary>Only the values number formats will be pasted.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPattern">
			<summary>Specifies the interior pattern of a chart or interior object.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternAutomatic">
			<summary>Excel controls the pattern.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternChecker">
			<summary>Checkerboard.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternCrissCross">
			<summary>Criss-cross lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternDown">
			<summary>Dark diagonal lines running from the upper left to the lower right.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray16">
			<summary>16% gray.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray25">
			<summary>25% gray.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray50">
			<summary>50% gray.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray75">
			<summary>75% gray.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGray8">
			<summary>8% gray.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternGrid">
			<summary>Grid.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternHorizontal">
			<summary>Dark horizontal lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLightDown">
			<summary>Light diagonal lines running from the upper left to the lower right.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLightHorizontal">
			<summary>Light horizontal lines.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLightUp">
			<summary>Light diagonal lines running from the lower left to the upper right.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternLightVertical">
			<summary>Light vertical bars.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternNone">
			<summary>No pattern.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternSemiGray75">
			<summary>75% dark moiré.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternSolid">
			<summary>Solid color.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternUp">
			<summary>Dark diagonal lines running from the lower left to the upper right.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPattern.xlPatternVertical">
			<summary>Dark vertical bars.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPhoneticAlignment">
			<summary>Specifies the alignment for phonetic text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPhoneticAlignment.xlPhoneticAlignCenter">
			<summary>Centered.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPhoneticAlignment.xlPhoneticAlignDistributed">
			<summary>Distributed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPhoneticAlignment.xlPhoneticAlignLeft">
			<summary>Left aligned.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPhoneticAlignment.xlPhoneticAlignNoControl">
			<summary>Excel controls alignment.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType">
			<summary>Specifies the type of phonetic text in a cell.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType.xlHiragana">
			<summary>Hiragana.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType.xlKatakana">
			<summary>Katakana.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType.xlKatakanaHalf">
			<summary>Half-size Katakana.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPhoneticCharacterType.xlNoConversion">
			<summary>No conversion.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPictureAppearance">
			<summary>Specifies how the picture should be copied.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter">
			<summary>The picture is copied as it will look when it's printed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen">
			<summary>The picture is copied to resemble its display on the screen as closely as possible</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPictureConvertorType">
			<summary>Specifies how to convert a graphic.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlBMP">
			<summary>Windows version 2.0 compatible bitmap.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlCGM">
			<summary>Computer Graphics Metafile.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlDRW">
			<summary>DRW.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlDXF">
			<summary>DXF.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlEPS">
			<summary>Encapsulated Postscript.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlHGL">
			<summary>HGL.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlPCT">
			<summary>Bitmap Graphic (Apple PICT format).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlPCX">
			<summary>PC Paintbrush Bitmap Graphic.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlPIC">
			<summary>PIC.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlPLT">
			<summary>PLT.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlTIF">
			<summary>Tagged Image Format File.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlWMF">
			<summary>Windows Metafile.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPictureConvertorType.xlWPG">
			<summary>WordPerfect/DrawPerfect Graphic.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPivotCellType">
			<summary>Specifies the PivotTable entity the cell corresponds to.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellBlankCell">
			<summary>A structural blank cell in the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellCustomSubtotal">
			<summary>A cell in the row or column area that is a custom subtotal.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellDataField">
			<summary>A data field label (not the Data button).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellDataPivotField">
			<summary>The Data button.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellGrandTotal">
			<summary>A cell in a row or column area which is a grand total.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellPageFieldItem">
			<summary>The cell that shows the selected item of a Page field.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellPivotField">
			<summary>The button for a field (not the Data button).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellPivotItem">
			<summary>A cell in the row or column area which is not a subtotal, grand total, custom subtotal, or blank line.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellSubtotal">
			<summary>A cell in the row or column area which is a subtotal.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotCellType.xlPivotCellValue">
			<summary>Any cell in the data area (except a blank row).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation">
			<summary>Specifies the type of calculation performed by a data PivotField when a custom calculation is used.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlDifferenceFrom">
			<summary>The difference from the value of the Base item in the Base field.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlIndex">
			<summary>Data calculated as ((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlNoAdditionalCalculation">
			<summary>No calculation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentDifferenceFrom">
			<summary>Percentage difference from the value of the Base item in the Base field.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOf">
			<summary>Percentage of the value of the Base item in the Base field.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfColumn">
			<summary>Percentage of the total for the column or series.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfRow">
			<summary>Percentage of the total for the row or category.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlPercentOfTotal">
			<summary>Percentage of the grand total of all the data or data points in the report.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldCalculation.xlRunningTotal">
			<summary>Data for successive items in the Base field as a running total.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPivotFieldDataType">
			<summary>Specifies the type of data in the PivotTable field.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldDataType.xlDate">
			<summary>Date.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldDataType.xlNumber">
			<summary>Number.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldDataType.xlText">
			<summary>Text.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation">
			<summary>Specifies the location of the field in a PivotTable report.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField">
			<summary>Column.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField">
			<summary>Data.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlHidden">
			<summary>Hidden.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField">
			<summary>Page.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField">
			<summary>Row.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPivotFormatType">
			<summary>Specifies the type of report formatting to be applied to the specified PivotTable report.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlPTClassic">
			<summary>PivotTable classic format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlPTNone">
			<summary>Does not apply formatting to the PivotTable report.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport1">
			<summary>Use the xlReport1 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport10">
			<summary>Use the xlReport10 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport2">
			<summary>Use the xlReport2 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport3">
			<summary>Use the xlReport3 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport4">
			<summary>Use the xlReport4 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport5">
			<summary>Use the xlReport5 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport6">
			<summary>Use the xlReport6 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport7">
			<summary>Use the xlReport7 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport8">
			<summary>Use the xlReport8 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlReport9">
			<summary>Use the xlReport9 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable1">
			<summary>Use the xlReport1 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable10">
			<summary>Use the xlReport1 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable2">
			<summary>Use the xlTable2 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable3">
			<summary>Use the xlTable3 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable4">
			<summary>Use the xlTable4 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable5">
			<summary>Use the xlTable5 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable6">
			<summary>Use the xlTable6 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable7">
			<summary>Use the xlTable7 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable8">
			<summary>Use the xlTable8 formatting for the PivotTable.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotFormatType.xlTable9">
			<summary>Use the xlTable9 formatting for the PivotTable.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems">
			<summary>Specifies the maximum number of unique items per PivotField allowed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems.xlMissingItemsDefault">
			<summary>The default number of unique items per PivotField allowed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems.xlMissingItemsMax">
			<summary>The maximum number of unique items per PivotField allowed (32,500).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableMissingItems.xlMissingItemsNone">
			<summary>No unique items per PivotField allowed (zero).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType">
			<summary>Specifies the source of the report data.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlConsolidation">
			<summary>Multiple consolidation ranges</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlDatabase">
			<summary>Microsoft Excel list or database</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal">
			<summary>Data from another application </summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlPivotTable">
			<summary>Same source as another PivotTable report</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlScenario">
			<summary>Data is based on scenarios created using the Scenario Manager..</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPivotTableVersionList">
			<summary>Specifies the Microsoft Excel version number.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion10">
			<summary>Excel, version 10.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion2000">
			<summary>Excel, version 11.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersionCurrent">
			<summary>Same version as current version of Excel.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPlacement">
			<summary>Specifies the way an object is attached to its underlying cells.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPlacement.xlFreeFloating">
			<summary>Object is free floating.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPlacement.xlMove">
			<summary>Object is moved with the cells.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPlacement.xlMoveAndSize">
			<summary>Object is moved and sized with the cells.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPlatform">
			<summary>Specifies the platform that a text file originated on.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPlatform.xlMacintosh">
			<summary>Macintosh.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPlatform.xlMSDOS">
			<summary>MS-DOS.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPlatform.xlWindows">
			<summary>Microsoft Windows.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPrintErrors">
			<summary>Specifies the type of print error displayed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPrintErrors.xlPrintErrorsBlank">
			<summary>Print errors are blank.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPrintErrors.xlPrintErrorsDash">
			<summary>Print errors are displayed as dashes.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPrintErrors.xlPrintErrorsDisplayed">
			<summary>Display all print errors.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPrintErrors.xlPrintErrorsNA">
			<summary>Display print errors as not available.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPrintLocation">
			<summary>Specifies the way comments are printed with the sheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPrintLocation.xlPrintInPlace">
			<summary>Comments will be printed where they were inserted in the worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPrintLocation.xlPrintNoComments">
			<summary>Comments will not printed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPrintLocation.xlPrintSheetEnd">
			<summary>Print the comments as end notes at the end of the worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPriority">
			<summary>Specifies the priority of a SendMailer message.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPriority.xlPriorityHigh">
			<summary>High.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPriority.xlPriorityLow">
			<summary>Low.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal">
			<summary>Normal.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode">
			<summary>Specifies what may be selected in a PivotTable during a structured selection. These constants may be combined to select multiple types.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlBlanks">
			<summary>Blanks.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlButton">
			<summary>Buttons.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel">
			<summary>Data and labels.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataOnly">
			<summary>Data.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlFirstRow">
			<summary>First row.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlLabelOnly">
			<summary>Label.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlOrigin">
			<summary>Origin.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlQueryType">
			<summary>Specifies the type of query used by Microsoft Excel to populate the query table or PivotTable cache.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlADORecordset">
			<summary>Based on an ADO recordset query</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlDAORecordset">
			<summary>Based on a DAO recordset query, for query tables only</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlODBCQuery">
			<summary>Based on an ODBC data source</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlOLEDBQuery">
			<summary>Based on an OLE DB query, including OLAP data sources</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlTextImport">
			<summary>Based on a text file, for query tables only</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlQueryType.xlWebQuery">
			<summary>Based on a Web page, for query tables only</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat">
			<summary>Specifies the predefined format when a range is automatically formatted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormat3DEffects1">
			<summary>3-D effects 1.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormat3DEffects2">
			<summary>3-D effects 2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting1">
			<summary>Accounting 1.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting2">
			<summary>Accounting 2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting3">
			<summary>Accounting 3.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting4">
			<summary>Accounting 4.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1">
			<summary>Classic 1.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic2">
			<summary>Classic 2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic3">
			<summary>Classic 3.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassicPivotTable">
			<summary>Classic pivot table.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor1">
			<summary>Color 1.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor2">
			<summary>Color 2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatColor3">
			<summary>Color 3.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList1">
			<summary>List 1.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList2">
			<summary>List 2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatList3">
			<summary>List 3.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat1">
			<summary>Local Format 1.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat2">
			<summary>Local Format 2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat3">
			<summary>Local Format 3.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat4">
			<summary>Local Format 4.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatNone">
			<summary>No specified format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatPTNone">
			<summary>No specified pivot table format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport1">
			<summary>Report 1.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport10">
			<summary>Report 10.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport2">
			<summary>Report 2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport3">
			<summary>Report 3.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport4">
			<summary>Report 4.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport5">
			<summary>Report 5.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport6">
			<summary>Report 6.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport7">
			<summary>Report 7.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport8">
			<summary>Report 8.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatReport9">
			<summary>Report 9.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatSimple">
			<summary>Simple.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable1">
			<summary>Table 1.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable10">
			<summary>Table 10.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable2">
			<summary>Table 2.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable3">
			<summary>Table 3.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable4">
			<summary>Table 4.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable5">
			<summary>Table 5.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable6">
			<summary>Table 6.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable7">
			<summary>Table 7.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable8">
			<summary>Table 8.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatTable9">
			<summary>Table 9.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType">
			<summary>Specifies the range value data type.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeValueDataType.xlRangeValueDefault">
			<summary>default If the specified Range object is empty, returns the value Empty (use the IsEmpty function to test for this case). If the Range object contains more than one cell, returns an array of values (use the IsArray function to test for this case).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeValueDataType.xlRangeValueMSPersistXML">
			<summary>Returns the recordset representation of the specified Range object in an XML format.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRangeValueDataType.xlRangeValueXMLSpreadsheet">
			<summary>Returns the values, formatting, formulas and names of the specified Range object in the XML Spreadsheet format.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlReferenceStyle">
			<summary>Specifies the reference style.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1">
			<summary>default. Use xlA1 to return an A1-style reference.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlReferenceStyle.xlR1C1">
			<summary>Use xlR1C1 to return an R1C1-style reference.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlReferenceType">
			<summary>Specifies cell reference style when a formula is being converted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlReferenceType.xlAbsolute">
			<summary>Convert to absolute row and column style.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlReferenceType.xlAbsRowRelColumn">
			<summary>Convert to absolute row and relative column style.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlReferenceType.xlRelative">
			<summary>Convert to relative row and column style.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlReferenceType.xlRelRowAbsColumn">
			<summary>Convert to relative row and absolute column style.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlRobustConnect">
			<summary>Specifies how the PivotTable cache connects to its data source.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRobustConnect.xlAlways">
			<summary>The cache always uses external source information (as defined by the SourceConnectionFile or SourceDataFile property) to reconnect.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRobustConnect.xlAsRequired">
			<summary>The cache uses external source info to reconnect using the Connection property.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRobustConnect.xlNever">
			<summary>The cache never uses source info to reconnect.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlRoutingSlipDelivery">
			<summary>Specifies the routing delivery method.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipDelivery.xlAllAtOnce">
			<summary>Deliver to all recipients simultaneously.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipDelivery.xlOneAfterAnother">
			<summary>Deliver to recipients one after another.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlRoutingSlipStatus">
			<summary>Specifies the status of the routing slip.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipStatus.xlNotYetRouted">
			<summary>Routing slip has not yet been sent.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipStatus.xlRoutingComplete">
			<summary>Routing is complete.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRoutingSlipStatus.xlRoutingInProgress">
			<summary>Routing is in progress.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlRowCol">
			<summary>Specifies whether the values corresponding to a particular data series are in rows or columns.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns">
			<summary>Data series is in a row.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows">
			<summary>Data series is in a column.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro">
			<summary>Specifies the automatic macro to run.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRunAutoMacro.xlAutoActivate">
			<summary>Auto_Activate macros</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRunAutoMacro.xlAutoClose">
			<summary>Auto_Close macros</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRunAutoMacro.xlAutoDeactivate">
			<summary>Auto_Deactivate macros</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlRunAutoMacro.xlAutoOpen">
			<summary>Auto_Open macros</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSaveAction">
			<summary>Specifies during file close if the file will be saved.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSaveAction.xlDoNotSaveChanges">
			<summary>Changes will not be saved.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSaveAction.xlSaveChanges">
			<summary>Changes will be saved.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode">
			<summary>Specifies the access mode for the Save As function.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive">
			<summary>(exclusive mode)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange">
			<summary>default (don't change the access mode)</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlShared">
			<summary>(share list)</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution">
			<summary>Specifies the way conflicts are to be resolved whenever a shared workbook is updated.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSaveConflictResolution.xlLocalSessionChanges">
			<summary>The local user's changes are always accepted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSaveConflictResolution.xlOtherSessionChanges">
			<summary>The local user's changes are always rejected.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSaveConflictResolution.xlUserResolution">
			<summary>A dialog box asks the user to resolve the conflict.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlScaleType">
			<summary>Specifies the scale type of the value axis.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlScaleType.xlScaleLinear">
			<summary>Linear.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlScaleType.xlScaleLogarithmic">
			<summary>Logarithmic.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSearchDirection">
			<summary>Specifies the search direction when searching a range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext">
			<summary>Search for next matching value in range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSearchDirection.xlPrevious">
			<summary>Search for previous matching value in range.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSearchOrder">
			<summary>Specifies the order in which to search the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByColumns">
			<summary>Searches down through a column, then moves to the next column.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSearchOrder.xlByRows">
			<summary>Searches across a row, then moves to the next row.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSearchWithin">
			<summary>Specifies the extent of the search for the range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSearchWithin.xlWithinSheet">
			<summary>Limit search to current sheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSearchWithin.xlWithinWorkbook">
			<summary>Search whole workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSheetType">
			<summary>Specifies the worksheet type.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlChart">
			<summary>Chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlDialogSheet">
			<summary>Dialog sheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlExcel4IntlMacroSheet">
			<summary>Excel version 4 international macro sheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlExcel4MacroSheet">
			<summary>Excel version 4 macro sheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSheetType.xlWorksheet">
			<summary>Worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSheetVisibility">
			<summary>Specifies whether the object is visible.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSheetVisibility.xlSheetHidden">
			<summary>Hides the worksheet which the user can unhide via menu.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSheetVisibility.xlSheetVeryHidden">
			<summary>Hides the object so that the only way for you to make it visible again is by setting this property to True (the user cannot make the object visible).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSheetVisibility.xlSheetVisible">
			<summary>Displays the sheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSizeRepresents">
			<summary>Specifies what the bubble size represents on a bubble chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSizeRepresents.xlSizeIsArea">
			<summary>Area of the bubble.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSizeRepresents.xlSizeIsWidth">
			<summary>Width of the bubble.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSmartTagControlType">
			<summary>Specifies the type of Smart Document control displayed in the Document Actions task pane.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlActiveX">
			<summary>ActiveX control.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlButton">
			<summary>Button.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlCheckbox">
			<summary>Check box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlCombo">
			<summary>Combo box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlHelp">
			<summary>Help text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlHelpURL">
			<summary>Absolute URL to Help file.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlImage">
			<summary>Image.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlLabel">
			<summary>Label.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlLink">
			<summary>Link.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlListbox">
			<summary>List box.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlRadioGroup">
			<summary>Radio button (option button) group.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlSeparator">
			<summary>Separator.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlSmartTag">
			<summary>Smart tag.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagControlType.xlSmartTagControlTextbox">
			<summary>Text box.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode">
			<summary>Specifies the display features for smart tags.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode.xlButtonOnly">
			<summary>Displays only the button for smart tags.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode.xlDisplayNone">
			<summary>Nothing is displayed for smart tags.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSmartTagDisplayMode.xlIndicatorAndButton">
			<summary>Display the indicator and button for smart tags.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSortDataOption">
			<summary>Specifies how to sort text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal">
			<summary>default. Sorts numeric and text data separately.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortTextAsNumbers">
			<summary>Treat text as numeric data for the sort.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSortMethod">
			<summary>Specifies the type of sort.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin">
			<summary>default. Phonetic Chinese sort order for characters.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortMethod.xlStroke">
			<summary>Sorting by the quantity of strokes in each character.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSortMethodOld">
			<summary>Specifies how to sort when using East Asian sorting methods.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortMethodOld.xlCodePage">
			<summary>Sort by code page.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortMethodOld.xlSyllabary">
			<summary>Sort phonetically.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSortOrder">
			<summary>Specifies the sort order for the specified field or range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending">
			<summary>default. Sorts the specified field in ascending order.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortOrder.xlDescending">
			<summary>Sorts the specified field in descending order.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSortOrientation">
			<summary>Specifies the sort orientation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortColumns">
			<summary>Sorts by column.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows">
			<summary>default. Sorts by row.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSortType">
			<summary>Specifies which elements are to be sorted. Use this argument only when sorting PivotTable reports.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortType.xlSortLabels">
			<summary>Sorts the PivotTable report by labels.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSortType.xlSortValues">
			<summary>Sorts the PivotTable report by values.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSourceType">
			<summary>Identifies the source object.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceAutoFilter">
			<summary>An AutoFilter range.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceChart">
			<summary>A chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourcePivotTable">
			<summary>A PivotTable report.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourcePrintArea">
			<summary>A range of cells selected for printing.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceQuery">
			<summary>A query table (external data range).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceRange">
			<summary>A range of cells.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceSheet">
			<summary>An entire worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSourceType.xlSourceWorkbook">
			<summary>A workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSpeakDirection">
			<summary>Specifies the order in which the cells are spoken.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSpeakDirection.xlSpeakByColumns">
			<summary>Reads down a column, then moves to the next column.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSpeakDirection.xlSpeakByRows">
			<summary>Reads across a row, then moves to the next row.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue">
			<summary>Specifies cells with a particular type of value to include in the result.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlErrors">
			<summary>Cells with errors.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlLogical">
			<summary>Cells with logical values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlNumbers">
			<summary>Cells with numeric values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSpecialCellsValue.xlTextValues">
			<summary>Cells with text.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSubscribeToFormat">
			<summary>Specifies the format to use when subscribing to a published edition.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToPicture">
			<summary>Picture.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText">
			<summary>Text.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSubtototalLocationType">
			<summary>Specifies where the subtotal will be displayed on the worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSubtototalLocationType.xlAtBottom">
			<summary>Subtotal will be on the bottom.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSubtototalLocationType.xlAtTop">
			<summary>Subtotal will be on the top.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSummaryColumn">
			<summary>Specifies the location of the summary columns in the outline.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSummaryColumn.xlSummaryOnLeft">
			<summary>The summary column will be positioned to the left of the detail columns in the outline.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSummaryColumn.xlSummaryOnRight">
			<summary>The summary column will be positioned to the right of the detail columns in the outline.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSummaryReportType">
			<summary>Specifies the type of summary to be created for scenarios.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSummaryReportType.xlStandardSummary">
			<summary>List scenarios side by side.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSummaryReportType.xlSummaryPivotTable">
			<summary>Display scenarios in a PivotTable report.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlSummaryRow">
			<summary>Specifies the location of the summary rows in the outline.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryAbove">
			<summary>The summary row will be positioned above the detail rows in the outline.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow">
			<summary>The summary row will be positioned below the detail rows in the outline.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTabPosition">
			<summary>Specifies the first or last tab position.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTabPosition.xlTabPositionFirst">
			<summary>First tab position.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTabPosition.xlTabPositionLast">
			<summary>Last tab position.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTextParsingType">
			<summary>Specifies the column format for the data in the text file that you’re importing into a query table.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited">
			<summary>default. Indicates the file is delimited by delimiter characters</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTextParsingType.xlFixedWidth">
			<summary>Indicates that the data in the file is arranged in columns of fixed widths.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTextQualifier">
			<summary>Specifies the delimiter to use to specify text.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote">
			<summary>Double quote (").</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierNone">
			<summary>No delimiter.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierSingleQuote">
			<summary>Single quote (').</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType">
			<summary>Specifies whether the visual layout of the text being imported is left-to-right or right-to-left.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType.xlTextVisualLTR">
			<summary>Left to right.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType.xlTextVisualRTL">
			<summary>Right to left.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTickLabelOrientation">
			<summary>Specifies the text orientation for tick-mark labels.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationAutomatic">
			<summary>Text orientation set by Excel.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationDownward">
			<summary>Text runs down.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationHorizontal">
			<summary>Characters run horizontally.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationUpward">
			<summary>Text runs up.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelOrientation.xlTickLabelOrientationVertical">
			<summary>Characters run vertically.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTickLabelPosition">
			<summary>Specifies the position of tick-mark labels on the specified axis.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelPosition.xlTickLabelPositionHigh">
			<summary>Top or right side of the chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelPosition.xlTickLabelPositionLow">
			<summary>Bottom or left side of the chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelPosition.xlTickLabelPositionNextToAxis">
			<summary>Next to axis (where axis is not at either side of the chart).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickLabelPosition.xlTickLabelPositionNone">
			<summary>No tick marks.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTickMark">
			<summary>Specifies the position of major and minor tick marks for an axis.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickMark.xlTickMarkCross">
			<summary>Crosses the axis.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickMark.xlTickMarkInside">
			<summary>Inside the axis.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickMark.xlTickMarkNone">
			<summary>No mark.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTickMark.xlTickMarkOutside">
			<summary>Outside the axis.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTimeUnit">
			<summary>Specifies unit of time for chart axis and data series.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTimeUnit.xlDays">
			<summary>Days.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTimeUnit.xlMonths">
			<summary>Months.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTimeUnit.xlYears">
			<summary>Years.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlToolbarProtection">
			<summary>Specifies which properties of a toolbar are restricted. Options may be combined using Or.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlNoButtonChanges">
			<summary>No button changes permitted.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlNoChanges">
			<summary>No changes of any kind.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlNoDockingChanges">
			<summary>No changes to toolbar's docking position.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlNoShapeChanges">
			<summary>No changes to toolbar shape.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlToolbarProtection.xlToolbarProtectionNone">
			<summary>All changes permitted.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTotalsCalculation">
			<summary>Specifies the type of calculation in the Totals row of a list column.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationAverage">
			<summary>Average.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationCount">
			<summary>Count of non-empty cells.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationCountNums">
			<summary>Count of cells with numeric values.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationMax">
			<summary>Maximum value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationMin">
			<summary>Minimum value.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationNone">
			<summary>No calculation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationStdDev">
			<summary>Standard deviation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationSum">
			<summary>Sum.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTotalsCalculation.xlTotalsCalculationVar">
			<summary>Variance.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlTrendlineType">
			<summary>Specifies how the trendline that smoothes out fluctuations in the data is calculated.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlExponential">
			<summary>Uses an equation to calculate the least squares fit through points.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlLinear">
			<summary>Uses the linear equation y = mx + b to calculate the least squares fit through points.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlLogarithmic">
			<summary>Uses the equation y = c ln x + b to calculate the least squares fit through points.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlMovingAvg">
			<summary>Uses a sequence of averages computed from parts of the data series. The number of points equals the total number of points in the series less the number specified for the period.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlPolynomial">
			<summary>Uses an equation to calculate the least squares fit through points.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlTrendlineType.xlPower">
			<summary>Uses an equation to calculate the least squares fit through points.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlUnderlineStyle">
			<summary>Specifies the type of underline applied to a font.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleDouble">
			<summary>Double thick underline.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleDoubleAccounting">
			<summary>Two thin underlines placed close together.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleNone">
			<summary>No underlining.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleSingle">
			<summary>Single underlining.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlUnderlineStyle.xlUnderlineStyleSingleAccounting">
			<summary>Not supported.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlUpdateLinks">
			<summary>Specifies a workbook's setting for updating embedded OLE links.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlUpdateLinks.xlUpdateLinksAlways">
			<summary>Embedded OLE links are always updated for the specified workbook.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlUpdateLinks.xlUpdateLinksNever">
			<summary>Embedded OLE links are never updated for the specified workbook.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlUpdateLinks.xlUpdateLinksUserSetting">
			<summary>Embedded OLE links are updated according to the user's settings for the specified workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlVAlign">
			<summary>Specifies the vertical alignment for the object.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignBottom">
			<summary>Bottom.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignCenter">
			<summary>Center.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignDistributed">
			<summary>Distributed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignJustify">
			<summary>Justify.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignTop">
			<summary>Top.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlWBATemplate">
			<summary>Specifies the type of workbook to create.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATChart">
			<summary>Chart.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATExcel4IntlMacroSheet">
			<summary>Excel version 4 macro.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATExcel4MacroSheet">
			<summary>Excel version 4 international macro.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATWorksheet">
			<summary>Worksheet.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlWebFormatting">
			<summary>Specifies how much formatting from a Web page, if any, is applied when a Web page is imported into a query table.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWebFormatting.xlWebFormattingAll">
			<summary>All formatting is imported.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWebFormatting.xlWebFormattingNone">
			<summary>No formatting is imported.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWebFormatting.xlWebFormattingRTF">
			<summary>Rich Text Format compatible formatting is imported.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlWebSelectionType">
			<summary>Specifies whether an entire Web page, all tables on the Web page, or only a specific table is imported into a query table.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWebSelectionType.xlAllTables">
			<summary>All tables.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWebSelectionType.xlEntirePage">
			<summary>Entire page.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWebSelectionType.xlSpecifiedTables">
			<summary>Specified tables.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlWindowState">
			<summary>Specifies the state of the window.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowState.xlMaximized">
			<summary>Maximized.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowState.xlMinimized">
			<summary>Minimized.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowState.xlNormal">
			<summary>Normal.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlWindowType">
			<summary>Specifies how the chart is displayed.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlChartAsWindow">
			<summary>The chart will open in a new window.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlChartInPlace">
			<summary>The chart will be displayed on the current worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlClipboard">
			<summary>The chart is copied to the clipboard.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlInfo">
			<summary>This constant has been deprecated.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowType.xlWorkbook">
			<summary>This constant applies to Macintosh only.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlWindowView">
			<summary>Specifies the view showing in the window.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowView.xlNormalView">
			<summary>Normal.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlWindowView.xlPageBreakPreview">
			<summary>Page break preview.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlXLMMacroType">
			<summary>Specifies, in a Microsoft Excel version 4 macro worksheet, what type of macro a name refers to or whether the name refers to a macro.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXLMMacroType.xlCommand">
			<summary>Custom command.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXLMMacroType.xlFunction">
			<summary>Custom function.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXLMMacroType.xlNotXLM">
			<summary>Not a macro.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlXmlExportResult">
			<summary>Specifies the results of the save or export operation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlExportResult.xlXmlExportSuccess">
			<summary>The XML data file was successfully exported.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlExportResult.xlXmlExportValidationFailed">
			<summary>The contents of the XML data file do not match the specified schema map.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlXmlImportResult">
			<summary>Specifies the results of the refresh or import operation.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlImportResult.xlXmlImportElementsTruncated">
			<summary>The contents of the specified XML data file have been truncated because the XML data file is too large for the worksheet.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlImportResult.xlXmlImportSuccess">
			<summary>The XML data file was successfully imported.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlImportResult.xlXmlImportValidationFailed">
			<summary>The contents of the XML data file do not match the specified schema map.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption">
			<summary>Specifies how Excel opens the XML data file.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlLoadOption.xlXmlLoadImportToList">
			<summary>Places the contents of the XML data file in an XML list.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlLoadOption.xlXmlLoadMapXml">
			<summary>Displays the schema of the XML data file in the XML Structure task pane.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlLoadOption.xlXmlLoadOpenXml">
			<summary>Opens the XML data file. The contents of the file will be flattened.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlXmlLoadOption.xlXmlLoadPromptUser">
			<summary>Prompts the user to choose how to open the file.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XlYesNoGuess">
			<summary>Specifies whether or not the first row contains headers.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess">
			<summary>Excel determines whether there’s a header, and to determine where it is, if there is one.</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo">
			<summary>default. (The entire range should be sorted).</summary>
		</member>
		<member name="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlYes">
			<summary>(The entire range should not be sorted).</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XmlDataBinding">
			<summary>Represents the connection to the source data for an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.XmlDataBinding.LoadSettings(System.String)">
			<summary>Initializes the specified data binding with settings from an XML data file or a Data Retrieval Service Connection (.uxdc) file.</summary>
			<param name="Url">Required String. The path to the XML data or Microsoft Office XML Data Source (.uxdc) file. The path is specified in the Uniform Resource Locator (URL) or universal naming convention (UNC) format.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XmlMap">
			<summary>Represents an XML map that has been added to a workbook.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)">
			<summary>Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object to an XML data file. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult"></see>.</summary>
			<param name="Url">Required String. The path and filename of the XML data file to export to.</param>
			<param name="Overwrite">Required Boolean. Set to True to overwrite the file specified in the URL parameter if the file exists. The default value if False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)">
			<summary>Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object to a String variable. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult"></see>.</summary>
			<param name="Data">Required String. The variable to export the data to.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)">
			<summary>Imports data from the specified XML data file into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object. Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult"></see>.</summary>
			<param name="Url">Required String. The path to the XML data to import. The path can be specified in Universal Naming convention (UNC) or Uniform Resource Locator (URL) format. The file can be an XML data file or a valid Office XML data Source Connection (.uxdc) file.</param>
			<param name="Overwrite">Optional Object. Set to True to overwrite existing data. Set to False to append to existing data. The default value is False.</param>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)">
			<summary>Imports XML data from a String variable into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object. Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult"></see> constant.</summary>
			<param name="XmlData">Required String. The string that contains the XML data to import.</param>
			<param name="Overwrite">Optional Boolean value. Specifies whether to overwrite the contents of cells that are currently mapped to the specified XML map. Set to True to overwrite the cells; set to False to append the data to the existing range. If this parameter is not specified, the current value of the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport"></see> property of the XML map determines whether the contents of cells are overwritten or not.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XmlMaps">
			<summary>Represents the collection of <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> objects that have been added to a workbook.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)">
			<summary>Adds an XML map to the specified workbook. Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object.</summary>
			<param name="RootElementName">Optional String. The name of the root element. This argument can be ignored if the schema contains only one root element.</param>
			<param name="Schema">Required String. The schema to be added as an XML map. The string can be a path to a schema file, or to the schema itself. The path can be specified in the Universal Naming Convention (UNC) or Uniform Resource Locator (URL) format.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.XmlMaps._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.XmlMaps.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XmlNamespace">
			<summary>Represents a namespace that has been added to a workbook.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XmlNamespaces">
			<summary>Represents the collection of <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace"></see> objects in a workbook.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.XmlNamespaces.InstallManifest(System.String,System.Object)">
			<summary>Installs the specified XML expansion pack on the user's computer, making an XML smart document solution available to one or more users.</summary>
			<param name="InstallForAllUsers">Optional Boolean. True installs the XML expansion pack and makes it available to all users on a machine. False makes the XML expansion pack available for the current user only. Default is False.</param>
			<param name="Path">Required String. The path and file name of the XML expansion pack.</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.XmlNamespaces.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XmlSchema">
			<summary>Represents an XML schema contained by an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object.</summary>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XmlSchemas">
			<summary>Represents the collection of <see cref="T:Microsoft.Office.Interop.Excel.XmlSchema"></see> objects contained by an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see> object.</summary>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.XmlSchemas._Default(System.Object)">
			<param name="Index">hiddenmemberparam</param>
		</member>
		<member name="P:Microsoft.Office.Interop.Excel.XmlSchemas.Item(System.Object)">
			<summary>Returns a single object from a collection.</summary>
			<param name="Index">Required Object. The name or index number of the object.</param>
		</member>
		<member name="T:Microsoft.Office.Interop.Excel.XPath">
			<summary>Represents an XPath that has been mapped to a <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> or <see cref="T:Microsoft.Office.Interop.Excel.ListColumn"></see> object.</summary>
		</member>
		<member name="M:Microsoft.Office.Interop.Excel.XPath.SetValue(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Object,System.Object)">
			<summary>Maps the specified <see cref="T:Microsoft.Office.Interop.Excel.XPath"></see> object to a <see cref="T:Microsoft.Office.Interop.Excel.ListColumn"></see> object or <see cref="T:Microsoft.Office.Interop.Excel.Range"></see> collection. If the XPath object has previously been mapped to the ListColumn object or Range collection, the SetValue method sets the properties of the XPath object.</summary>
			<param name="Map">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap"></see>. The schema map that contains information about the XPath object.</param>
			<param name="Repeating">Optional Boolean. Specifies whether the XPath object is to be bound to a column in an XML list, or mapped to a single cell. Set to True to bind the XPath object to a column in an XML list.</param>
			<param name="XPath">Required String. A valid XPath statement.</param>
			<param name="SelectionNamespace">Optional Object. Specifies any namespace prefixes used in the XPath argument. This argument can be omitted if the XPath object doesn't contain any prefixes, or if the XPath object uses the Microsoft Excel prefixes.</param>
		</member>
	</members>
</doc>